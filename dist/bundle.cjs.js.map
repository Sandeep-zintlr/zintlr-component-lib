{"version":3,"file":"bundle.cjs.js","sources":["../src/constants/Profile/HelpAndSupport/help-and-support.js","../src/constants/urls.js","../src/components/ProfileOptions/HelpAndSupportSection/HelpSupportCard.jsx","../src/components/ProfileOptions/HelpAndSupportSection/ZintlrDocCard.jsx","../src/api-handlers/request-handler.js","../src/components/Toast/Toast.jsx","../node_modules/react-dom/client.js","../src/helpers/Items/isBrowser.js","../src/helpers/Items/copy_to_clipboard.js","../src/helpers/Items/create_dp.js","../src/helpers/Items/scrollTo.js","../src/helpers/Items/useWindowSize.js","../src/components/ProfileOptions/HelpAndSupportSection/HelpSupport.jsx","../src/helpers/Items/getCookies.js","../src/helpers/Items/get_formated_url.js","../src/helpers/Items/updatePlural.js","../src/helpers/Items/useOnScreen.js"],"sourcesContent":["import { externalUrls } from '../../urls';\n\nexport const help_support_data = [\n  {\n    title: 'Need Help Now? Chat with Us!',\n    // icon: BiSupport,\n    description: 'Talk to a real person for instant support.',\n    clickable: 'Initiate a chat',\n    // onClick: click_chat_fun,\n  },\n  {\n    title: 'Send Us a Message',\n    // icon: BiSolidMessageRoundedDetail,\n    description: \"Questions, feedback, or feature requests? We're here!\",\n    url: 'mailto:' + externalUrls.zintlrMail,\n    clickable: 'Write to us',\n  },\n];\n\nexport const zintlr_doc_data = [\n  {\n    title: 'LEARN ALL THE MOVES',\n    // img: DocumentImage,\n    description: 'Guides, tutorials, & answers at your fingertips.',\n    // clickable: \"Help documents page\",\n    url: externalUrls.zintlrBlog,\n  },\n  {\n    title: 'SEE IT IN ACTION',\n    // img: VideoHelpImage,\n    description: 'Watch quick videos to master Zintlr like a pro.',\n    // clickable: \"Zintlr video page\",\n    url: externalUrls.zintlrYoutube,\n  },\n];\n","export const externalUrls = {\n  ChangeLog_URL: 'https://changelog.zintlr.com',\n  zintlrBlog: 'https://blog.zintlr.com',\n  zintlrYoutube: 'https://www.youtube.com/@ZintlrPrivateLimited',\n  zintlrMail: 'support@zintlr.com',\n  zintlrChat: '#!',\n};\n","import React from 'react';\nimport Link from 'next/link';\n\nconst HelpSupportCard = ({ item }) => {\n  return (\n    <div>\n      <div className={'flex flex-col gap-3 rounded-md px-3 py-4'}>\n        <div className=\"flex flex-row gap-1\">\n          {/* <item.icon className=\"w-5 h-5\" /> */}\n          <div className=\"font-semibold text-sm leading-5 text-text-black\">{item?.title}</div>\n        </div>\n        <div className=\"flex flex-col gap-2.5 p-5 rounded border  bg-white xl:w-[607px]\">\n          <div className=\"font-normal text-sm leading-4 text-black\">{item?.description}</div>\n          {item?.url ? (\n            <Link href={item.url} passHref>\n              <button\n                className=\"font-semibold text-xs leading-4 text-black00 hover:underline cursor-pointer\"\n                target=\"_blank\"\n              >\n                {item.clickable}\n              </button>\n            </Link>\n          ) : (\n            <div\n              className=\"font-semibold text-xs leading-4 text-black00 hover:underline cursor-pointer\"\n              onClick={item?.onClick}\n            >\n              {item?.clickable}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HelpSupportCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ZintlrDocCard = ({ title, description, icon, onClick }) => {\n  return (\n    <div\n      className=\"flex items-center gap-4 p-4 rounded-lg cursor-pointer hover:bg-gray-50\"\n      onClick={onClick}\n    >\n      {icon && <div className=\"text-2xl text-gray-600\">{icon}</div>}\n      <div>\n        <h3 className=\"text-lg font-medium text-gray-900\">{title}</h3>\n        {description && <p className=\"text-sm text-gray-500\">{description}</p>}\n      </div>\n    </div>\n  );\n};\n\nZintlrDocCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  icon: PropTypes.node,\n  onClick: PropTypes.func,\n};\n\nexport default ZintlrDocCard; ","import axios from 'axios';\nimport * as yup from 'yup';\n\nexport const ErrorObject = {\n  message: '',\n  success: false,\n  code: 400,\n  data: {},\n};\n\nexport const requestAbortCode = -100;\n\nexport function isMethodProper(method) {\n  return ['post', 'put', 'delete'].includes(method);\n}\n\nexport default function request_caller({\n  domain = '',\n  method = 'post',\n  endpoint = '',\n  data = {},\n  successToast = false,\n  errorToast = true,\n  headers = {},\n  controller = null,\n  forceValidationSchema = null,\n  skipValidation = false,\n  // Custom handlers with defaults\n  showToast = () => {},\n  consoleMsg = console.log,\n  validators = {},\n}) {\n  return new Promise((resolve, reject) => {\n    const responseObj = { ...ErrorObject };\n\n    if (!isMethodProper(method)) {\n      responseObj.message = 'Method is not allowed';\n      reject(responseObj);\n      return;\n    }\n\n    consoleMsg(endpoint, data);\n\n    // Validation logic\n    const validateData = () => {\n      if (!skipValidation) {\n        const validatorKey = forceValidationSchema || endpoint;\n        if (validators[validatorKey]) {\n          const validationSchema = yup.object().shape(validators[validatorKey]);\n          consoleMsg('Validation data:', data);\n          return validationSchema.validate(data);\n        }\n      }\n      return Promise.resolve();\n    };\n\n    validateData()\n      .then(() => {\n        const req_obj = {\n          method,\n          url: domain + endpoint,\n          data: method !== 'get' ? data : {},\n          responseType: 'json',\n          headers,\n          withCredentials: true,\n          crossDomain: true,\n        };\n\n        if (controller) {\n          req_obj.signal = controller.signal;\n        }\n\n        return axios.request(req_obj);\n      })\n      .then((res) => {\n        const responseData = res.data;\n\n        if (responseData.success) {\n          if (successToast) {\n            showToast(responseData.message, 'success');\n          }\n          resolve(responseData);\n        } else {\n          if (errorToast) {\n            showToast(responseData.message, 'error');\n          }\n          reject(responseData);\n        }\n      })\n      .catch((error) => {\n        let err = { ...responseObj };\n\n        if (error.name === 'ValidationError') {\n          err.message = error.errors?.join(', ') || 'Validation failed';\n          showToast(err.message, 'error');\n        } else if (axios.isCancel(error)) {\n          err.code = requestAbortCode;\n          err.message = 'Request cancelled';\n        } else if (error.response?.status === 0) {\n          err.message = error.message || 'Network error';\n        } else if (error.response?.data?.success === false) {\n          err = error.response.data;\n        } else {\n          consoleMsg(error, 'error');\n          err.message = 'Something went wrong. Please try again';\n        }\n\n        if (!controller?.signal?.aborted && errorToast) {\n          showToast(err.message, 'error');\n        }\n        reject(err);\n      });\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport * as PropTypes from 'prop-types';\n\nconst Toast = ({ message, type = 'info', duration = 3000, position = 'top-right', onClose }) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsVisible(false);\n      onClose?.();\n    }, duration);\n\n    return () => clearTimeout(timer);\n  }, [duration, onClose]);\n\n  if (!isVisible) return null;\n\n  const getToastStyles = () => {\n    const baseStyles = {\n      position: 'fixed',\n      padding: '12px 24px',\n      borderRadius: '8px',\n      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n      display: 'flex',\n      alignItems: 'center',\n      gap: '8px',\n      zIndex: 9999,\n      animation: 'slideIn 0.3s ease-out',\n    };\n\n    const positionStyles = {\n      'top-right': { top: '20px', right: '20px' },\n      'top-left': { top: '20px', left: '20px' },\n      'bottom-right': { bottom: '20px', right: '20px' },\n      'bottom-left': { bottom: '20px', left: '20px' },\n    };\n\n    const typeStyles = {\n      success: {\n        backgroundColor: '#10B981',\n        color: 'white',\n      },\n      error: {\n        backgroundColor: '#EF4444',\n        color: 'white',\n      },\n      warning: {\n        backgroundColor: '#F59E0B',\n        color: 'white',\n      },\n      info: {\n        backgroundColor: '#3B82F6',\n        color: 'white',\n      },\n    };\n\n    return {\n      ...baseStyles,\n      ...positionStyles[position],\n      ...typeStyles[type],\n    };\n  };\n\n  const getIcon = () => {\n    const icons = {\n      success: (\n        <svg\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 20 20\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM8 15L3 10L4.41 8.59L8 12.17L15.59 4.58L17 6L8 15Z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n      ),\n      error: (\n        <svg\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 20 20\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM11 15H9V13H11V15ZM11 11H9V5H11V11Z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n      ),\n      warning: (\n        <svg\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 20 20\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM11 15H9V13H11V15ZM11 11H9V5H11V11Z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n      ),\n      info: (\n        <svg\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 20 20\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM11 15H9V9H11V15ZM11 7H9V5H11V7Z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n      ),\n    };\n\n    return icons[type];\n  };\n\n  return (\n    <div style={getToastStyles()}>\n      {getIcon()}\n      <span>{message}</span>\n      <button\n        onClick={() => {\n          setIsVisible(false);\n          onClose?.();\n        }}\n        style={{\n          background: 'none',\n          border: 'none',\n          color: 'inherit',\n          cursor: 'pointer',\n          marginLeft: '8px',\n          padding: '4px',\n        }}\n      >\n        <svg\n          width=\"16\"\n          height=\"16\"\n          viewBox=\"0 0 16 16\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M12.59 4.59L8 9.17L3.41 4.59L2 6L8 12L14 6L12.59 4.59Z\" fill=\"currentColor\" />\n        </svg>\n      </button>\n      <style>\n        {`\n          @keyframes slideIn {\n            from {\n              transform: translateY(-100%);\n              opacity: 0;\n            }\n            to {\n              transform: translateY(0);\n              opacity: 1;\n            }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nToast.propTypes = {\n  message: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['success', 'error', 'warning', 'info']),\n  duration: PropTypes.number,\n  position: PropTypes.oneOf(['top-right', 'top-left', 'bottom-right', 'bottom-left']),\n  onClose: PropTypes.func,\n};\n\nexport default Toast;\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * Checks if the code is running in a browser environment.\n * @returns {boolean} Returns true if the code is running in a browser, otherwise false.\n */\nexport default function isBrowser() {\n\t// Check if the 'window' object is defined, indicating that the code is running in a browser environment.\n\treturn typeof window !== \"undefined\";\n}\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport Toast from \"../../components/Toast/Toast\";\nimport isBrowser from \"./isBrowser\";\n\n/**\n * This function copies the given text to the clipboard\n * and displays a success toast message if executed in a browser environment.\n * @param {string} text The text to be copied to the clipboard.\n * @param {string} type The type of data being copied (e.g., \"Email\"). Default value is \"Email\".\n * @returns {void} This function does not return anything.\n */\nconst copy_to_clipboard = (text, type = \"Email\") => {\n\tif (isBrowser()) {\n\t\tnavigator.clipboard.writeText(text);\n\t\tconst toastElement = document.createElement('div');\n\t\tdocument.body.appendChild(toastElement);\n\t\t\n\t\tconst handleClose = () => {\n\t\t\tdocument.body.removeChild(toastElement);\n\t\t};\n\n\t\tconst toastProps = {\n\t\t\tmessage: `${type} copied to clipboard`,\n\t\t\ttype: \"success\",\n\t\t\tduration: 3000,\n\t\t\tposition: \"top-right\",\n\t\t\tonClose: handleClose\n\t\t};\n\n\t\tconst root = createRoot(toastElement);\n\t\troot.render(<Toast {...toastProps} />);\n\t}\n};\n\nexport default copy_to_clipboard;\n","import isBrowser from \"./isBrowser\";\n\n/**\n * SVG image representing a default logo with placeholders for initials.\n */\nconst logo_img = `\n<g clip-path=\"url(#0cf21cfe8e)\" transform=\"translate(5, 20) scale(0.5)\">\n<path fill=\"#ffffff\" d=\"M 238.238281 215.71875 C 255.039062 215.71875 270.484375 215.71875 285.882812 215.570312 C 286.886719 215.328125 287.800781 214.894531 288.625 214.265625 C 289.445312 213.636719 290.101562 212.863281 290.59375 211.953125 C 299.421875 196.890625 308.148438 181.828125 316.625 166.765625 C 317.03125 165.753906 317.234375 164.703125 317.234375 163.613281 C 317.234375 162.523438 317.03125 161.472656 316.625 160.464844 C 315.144531 157.265625 313.421875 154.203125 311.457031 151.273438 C 310.230469 153.007812 309.175781 154.238281 308.375 155.617188 C 300.523438 169.425781 292.5 183.234375 284.980469 197.140625 C 282.472656 201.761719 279.585938 203.820312 274.347656 203.191406 C 270.242188 202.960938 266.140625 202.960938 262.035156 203.191406 C 278.382812 174.09375 294.382812 145.828125 310.957031 116.703125 C 319.984375 132.296875 328.507812 146.832031 336.757812 161.59375 C 337.011719 162.59375 337.054688 163.601562 336.882812 164.621094 C 336.714844 165.640625 336.347656 166.578125 335.78125 167.441406 C 324.261719 187.675781 312.621094 207.84375 300.851562 227.945312 C 300.253906 229.003906 299.464844 229.890625 298.484375 230.609375 C 297.503906 231.328125 296.421875 231.8125 295.234375 232.0625 C 266.898438 232.339844 238.566406 232.265625 208.976562 232.265625 C 213.664062 224.003906 217.828125 216.523438 222.117188 209.117188 C 241.046875 176.304688 259.804688 143.316406 279.136719 110.855469 C 282.773438 104.730469 283.425781 100.109375 278.910156 94.738281 C 277.597656 92.972656 276.402344 91.132812 275.324219 89.214844 L 183.777344 248.082031 L 289.265625 248.082031 C 283.675781 257.769531 278.785156 266.558594 273.644531 275.269531 C 269.910156 281.644531 267.402344 290.332031 261.808594 293.546875 C 256.21875 296.757812 247.441406 294.652344 240.070312 294.675781 L 101.679688 294.675781 C 148.996094 212.730469 195.710938 131.792969 243.027344 49.773438 L 131.972656 49.773438 C 120.035156 49.773438 120.035156 49.773438 115.171875 61.75 L 219.960938 61.75 L 98.722656 272.15625 C 89.71875 256.515625 81.167969 242.03125 72.96875 227.09375 C 72.609375 225.941406 72.496094 224.765625 72.636719 223.566406 C 72.777344 222.367188 73.15625 221.25 73.773438 220.214844 C 93.011719 186.574219 112.347656 153 131.769531 119.492188 C 133.125 117.132812 134.277344 114.695312 136.109375 111.507812 C 119.632812 111.507812 104.214844 111.507812 88.792969 111.632812 C 87.761719 111.773438 86.804688 112.121094 85.929688 112.683594 C 85.050781 113.246094 84.335938 113.96875 83.777344 114.847656 C 74.851562 130.011719 66.058594 145.273438 57.398438 160.640625 C 57.019531 161.558594 56.828125 162.519531 56.828125 163.511719 C 56.828125 164.507812 57.019531 165.46875 57.398438 166.386719 C 59.101562 169.855469 61.015625 173.203125 63.140625 176.429688 C 66 171.410156 68.480469 167.390625 70.863281 163.175781 C 77.234375 152.027344 83.800781 140.980469 89.769531 129.609375 C 89.945312 129.164062 90.15625 128.738281 90.40625 128.328125 C 90.65625 127.917969 90.9375 127.535156 91.25 127.175781 C 91.566406 126.816406 91.910156 126.484375 92.28125 126.183594 C 92.652344 125.882812 93.046875 125.617188 93.464844 125.382812 C 93.882812 125.148438 94.316406 124.953125 94.765625 124.796875 C 95.21875 124.636719 95.679688 124.519531 96.152344 124.441406 C 96.621094 124.363281 97.097656 124.324219 97.574219 124.328125 C 98.054688 124.332031 98.527344 124.378906 98.996094 124.460938 C 103.035156 124.789062 107.121094 124.460938 112.210938 124.460938 C 95.613281 153.359375 79.742188 181.527344 63.242188 210.597656 C 55.71875 197.441406 48.972656 184.816406 41.226562 172.941406 C 36.8125 166.210938 36.886719 161.34375 41.226562 154.464844 C 52.332031 136.539062 62.539062 118.035156 73.046875 99.660156 C 73.40625 98.839844 73.882812 98.101562 74.476562 97.433594 C 75.070312 96.765625 75.75 96.207031 76.519531 95.757812 C 77.292969 95.308594 78.113281 94.984375 78.984375 94.792969 C 79.855469 94.601562 80.734375 94.550781 81.621094 94.636719 C 109.054688 94.886719 136.511719 94.761719 165.296875 94.761719 C 163.617188 97.953125 162.4375 100.363281 161.109375 102.671875 C 139.792969 139.625 118.882812 176.832031 96.890625 213.359375 C 91.148438 222.875 91.199219 229.726562 99.398438 237.613281 C 129.464844 185.015625 159.703125 132.519531 190.496094 79.070312 L 85.582031 79.070312 C 86.636719 76.761719 87.210938 75.230469 88.089844 73.824219 C 95.210938 61.273438 102.28125 48.84375 109.703125 36.542969 C 110.363281 35.5625 111.191406 34.761719 112.191406 34.140625 C 113.195312 33.519531 114.277344 33.132812 115.445312 32.980469 C 166.902344 32.792969 218.355469 32.753906 269.808594 32.851562 C 270.554688 32.957031 271.289062 33.109375 272.015625 33.304688 C 225.101562 114.671875 178.359375 195.710938 130.96875 277.753906 L 242.527344 277.753906 C 254.238281 277.753906 254.636719 277.453125 259.078125 265.203125 L 154.4375 265.203125 L 275.148438 55.625 C 276.265625 57.027344 277.3125 58.484375 278.285156 59.992188 C 285.605469 72.542969 292.753906 85.324219 300.273438 97.824219 C 300.796875 98.542969 301.195312 99.320312 301.472656 100.164062 C 301.746094 101.007812 301.882812 101.871094 301.882812 102.757812 C 301.882812 103.644531 301.746094 104.511719 301.472656 105.355469 C 301.195312 106.195312 300.796875 106.976562 300.273438 107.691406 C 280.566406 141.484375 260.972656 175.402344 241.5 209.445312 C 240.546875 211.101562 239.742188 212.808594 238.238281 215.71875 Z M 238.238281 215.71875 \" fill-opacity=\"1\" fill-rule=\"nonzero\" />\n</g>`;\n\n/**\n * Function to generate the SVG image based on initials.\n * @param {string} initials - The initials to be displayed in the SVG image.\n * @returns {SVGElement} - The SVG image element with provided initials or the custom logo if no initials are provided.\n */\nconst get_svg = (initials) => {\n\tlet xmlns = \"http://www.w3.org/2000/svg\";\n\tlet svg = document.createElementNS(xmlns, \"svg\");\n\tsvg.setAttributeNS(null, \"width\", \"200\");\n\tsvg.setAttributeNS(null, \"height\", \"200\");\n\tsvg.setAttributeNS(null, \"fill\", \"none\");\n\tsvg.setAttribute(\n\t\t\"style\",\n\t\t`background-image: linear-gradient(180deg, #112634 0%, #000000 100%);\n\t\tbackground-repeat:no-repeat !important;\n\t\tdisplay: flex;\n\t\talign-items:center;`\n\t);\n\tif (initials) {\n\t\tsvg.innerHTML = `\n\t\t\t<text x=\"50%\" y=\"50%\" fill=\"white\" style=\"font-weight: 600; font-family:'Inter', text-transform: uppercase;\" \n\t\t\tdominant-baseline=\"middle\"  text-anchor=\"middle\" alignment-baseline=\"central\" font-size=\"100\">\n\t\t\t\t${initials}\n\t\t\t</text>\n\t\t`;\n\t} else {\n\t\tsvg.innerHTML = logo_img;\n\t}\n\treturn svg;\n};\n/**\n * Function to extract initials from a name.\n * @param {string} name - The name from which initials will be extracted.\n * @returns {string} - The extracted initials in uppercase, or an empty string if the input name contains non-alphanumeric characters.\n */\nexport const getInitials = (name) => {\n\t//Check if the name is in english\n\tconst english = /^[A-Za-z0-9 ]*$/;\n\tlet initials;\n\t//Replace the non alphanumeric characters in the name\n\tname = name ? name.replace(/[^a-zA-Z0-9 ]/g, \"\") : \"\";\n\tif (english.test(name)) {\n\t\tname = name.trim();\n\t\tlet lname = name.split(\" \");\n\t\tinitials =\n\t\t\tlname[0].charAt(0) + \"\" + (lname.length > 1 ? lname[lname.length - 1].charAt(0) : \"\");\n\t\tinitials = String(initials).toUpperCase();\n\t}\n\treturn initials;\n};\n\n/**\n * Function to create an SVG image element with initials based on a given name.\n * @param {string} name - The name from which initials will be extracted to generate the SVG image.\n * @returns {SVGElement} - The SVG image element with provided initials or the custom logo if no initials are provided.\n */\nexport const getInitialSvg = (name) => {\n\tconst initials = getInitials(name);\n\tif (initials) return get_svg(initials);\n\treturn get_svg();\n};\n\n/**\n * Component to create and return an SVG image based on provided initials or a default logo.\n * @param {string} name - The name from which initials will be extracted to generate the image.\n * @returns {string} - The base64-encoded SVG image data or an empty string if no name is provided or it's not a browser environment.\n */\nexport default function createImg(name) {\n\t// Check if a name is provided and the code is running in a browser environment.\n\tif (name && isBrowser()) {\n\t\t// Generate an SVG image element with initials based on the provided name.\n\t\tlet initials_img = getInitialSvg(name);\n\t\t// Serialize the SVG element to a string.\n\t\tvar s = new XMLSerializer().serializeToString(initials_img);\n\t\t// Encode the SVG string to base64.\n\t\tvar encodedData = window.btoa(s);\n\t\t// Return the base64-encoded SVG image data.\n\t\treturn \"data:image/svg+xml;base64,\" + encodedData;\n\t}\n\t// Return an empty string if no name is provided or it's not a browser environment.\n\treturn \"\";\n}\n","import isBrowser from \"./isBrowser\";\n\n// Scroll behavior options.\nconst scrollOptions = { behavior: \"smooth\", block: \"center\", inline: \"nearest\" };\n\n/**\n * Scrolls to the element with the specified 'id'.\n * @param {string} id - The id of the element to scroll to.\n */\nexport function scrollById(id) {\n\t// Define an interval that runs every 200 milliseconds.\n\tconst interval = setInterval(() => {\n\t\t// Attempt to retrieve the element with the given 'id'.\n\t\tconst element = document.getElementById(id);\n\t\tif (element) {\n\t\t\t// If the element is found, clear the interval to stop checking.\n\t\t\tclearInterval(interval);\n\t\t\t// Scroll the element into view with the specified scroll behavior options.\n\t\t\telement.scrollIntoView(scrollOptions);\n\t\t}\n\t}, 200);\n}\n\n/**\n * Scrolls to the element indicated by the 'href' attribute of the event target.\n * @param {Event} e - The event triggered when calling the function.\n */\nexport default function scrollTo(e) {\n\t// Check if the code is running in a browser environment.\n\tif (isBrowser()) {\n\t\t// Prevent the default action of the event (e.g., following a link).\n\t\te.preventDefault();\n\t\t// Find the element based on the 'href' attribute of the event target.\n\t\tlet doc = document.querySelector(e.target.getAttribute(\"href\"));\n\t\t// Scroll the element into view with the specified scroll behavior options.\n\t\tdoc.scrollIntoView(scrollOptions);\n\t}\n}\n","import { useState, useEffect } from 'react';\n\n// Moved the function to the root level\nfunction getSize() {\n\tif (typeof window !== 'undefined') {\n\t\treturn {\n\t\t\twidth: window.innerWidth,\n\t\t\theight: window.innerHeight,\n\t\t};\n\t}\n\treturn {\n\t\twidth: undefined,\n\t\theight: undefined,\n\t};\n}\n\n/**\n * To get width and height of the screen, use this hook\n * This custom hook tracks the window size and updates the state with the current width and height.\n * @returns {Object} An object containing the width and height of the window.\n */\nexport default function useWindowSize() {\n\tconst [windowSize, setWindowSize] = useState(getSize());\n\n\tuseEffect(() => {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleResize = () => {\n\t\t\tsetWindowSize(getSize());\n\t\t};\n\n\t\twindow.addEventListener('resize', handleResize);\n\t\treturn () => window.removeEventListener('resize', handleResize);\n\t}, []);\n\n\treturn windowSize;\n}\n","import React from 'react';\n\nimport {\n  help_support_data,\n  zintlr_doc_data,\n} from '../../../constants/Profile/HelpAndSupport/help-and-support';\nimport HelpSupportCard from './HelpSupportCard';\nimport ZintlrDocCard from './ZintlrDocCard';\n\nconst HelpSupport = () => {\n  return (\n    <>\n      <ZintlrDocCard data={zintlr_doc_data} />\n      {help_support_data.map((item, index) => (\n        <HelpSupportCard key={index} item={item} colorId={index} />\n      ))}\n    </>\n  );\n};\n\nexport default HelpSupport;\n","/**\n * This function is used to retrieve the value of a specific cookie by its name from the document's cookies.\n * @param {string} name The name of the cookie whose value is to be retrieved.\n * @returns {string} The value of the specified cookie if found, otherwise an empty string.\n */\nconst getCookieValue = (name) => {\n\t// Splitting the cookies string into an array of individual cookie strings.\n\tconst cookies = document.cookie.split(\"; \");\n\n\t// Looping through each cookie to find the one with the specified name.\n\tfor (let i = 0; i < cookies.length; i++) {\n\t\t// Splitting the current cookie string into its name and value.\n\t\tconst cookie = cookies[i].split(\"=\");\n\n\t\t// Checking if the name of the current cookie matches the specified name.\n\t\tif (cookie[0] === name) {\n\t\t\t// If the name matches, return the value of the cookie.\n\t\t\treturn cookie[1];\n\t\t}\n\t}\n\t// If the specified cookie name is not found, return an empty string.\n\treturn \"\";\n};\n\n// Exporting the getCookieValue function as the default export of this module.\nexport default getCookieValue;\n","/**\n * This function takes a URL and formats it to ensure it starts with \"https://\". If the URL is not provided or does not start with \"http\", it will be prefixed with \"https://\" before returning.\n * @param {string} url The URL that needs to be formatted.\n * @returns {string} The formatted URL starting with \"https://\".\n */\nexport default function get_formated_url(url) {\n\t// Check if the URL is not provided (empty or null)\n\tif (!url) {\n\t\t// If URL is not provided, return an empty string\n\t\treturn \"\";\n\t}\n\t// Check if the URL does not start with \"http\"\n\tif (url.substr(0, 4) !== \"http\") {\n\t\t// If URL does not start with \"http\", prefix it with \"https://\" and return the updated URL\n\t\treturn \"https://\" + url;\n\t}\n\t// If URL starts with \"http\", return the URL as it is\n\treturn url;\n}\n","/**\n * This function takes in three parameters and returns a modified string.\n * @param {number} count The number of items to determine whether to add the postfix or not.\n * @param {string} text The main text to which the postfix may be appended.\n * @param {string} postfix The postfix string that will be added to the main text when the count is greater than 1. Default is \"s\".\n * @returns {string} The modified string with the postfix added based on the count value.\n */\nexport default (count, text, postfix = \"s\") => {\n\t// Concatenate the main text and the postfix (if required) and return the result.\n\treturn text + (count > 1 ? postfix : \"\");\n};\n","import { useState, useEffect } from \"react\";\n/**\n * This custom hook is used to track whether an element is currently visible on the screen\n * (in the viewport).\n * @param {React.MutableRefObject} ref A ref that points to the element to be observed\n * for visibility.\n * @returns {boolean} A boolean value representing whether the observed element is\n * currently visible on the screen.\n */\nconst useOnScreen = (ref) => {\n\t// State to keep track of whether the element is intersecting the viewport.\n\tconst [isIntersecting, setIntersecting] = useState(false);\n\n\tuseEffect(() => {\n\t\t// Create a new IntersectionObserver instance.\n\t\tconst observer = new IntersectionObserver(([entry]) => {\n\t\t\t// When the intersection state changes and the element becomes visible on the screen,\n\t\t\t// update the isIntersecting state to true.\n\t\t\tif (!isIntersecting) setIntersecting(entry.isIntersecting);\n\t\t});\n\n\t\t// Check if the ref is available and the element is not yet intersecting.\n\t\t// If both conditions are true, start observing the element.\n\t\tif (ref.current && !isIntersecting) {\n\t\t\tobserver.observe(ref.current);\n\t\t} else {\n\t\t\t// If the element is already intersecting or the ref is not available, stop observing the element.\n\t\t\tobserver.unobserve(ref.current);\n\t\t}\n\n\t\t// Clean up the observer when the component is unmounted or the state isIntersecting changes.\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t};\n\t}, [isIntersecting, ref]);\n\n\t// Return the boolean value indicating whether the element is currently visible on the screen.\n\treturn isIntersecting;\n};\n\nexport default useOnScreen;\n"],"names":["help_support_data","title","description","clickable","url","zintlr_doc_data","HelpSupportCard","_ref","item","React","createElement","className","Link","href","passHref","target","onClick","ZintlrDocCard","icon","propTypes","PropTypes","string","isRequired","node","func","ErrorObject","message","success","code","data","Toast","_ref$type","type","_ref$duration","duration","_ref$position","position","onClose","_useState2","_slicedToArray","useState","isVisible","setIsVisible","useEffect","timer","setTimeout","clearTimeout","style","_objectSpread","padding","borderRadius","boxShadow","display","alignItems","gap","zIndex","animation","top","right","left","bottom","backgroundColor","color","error","warning","info","width","height","viewBox","fill","xmlns","d","background","border","cursor","marginLeft","oneOf","number","m","require$$0","process","env","NODE_ENV","client","createRoot","hydrateRoot","i","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","c","o","usingClientEntryPoint","h","isBrowser","window","get_svg","initials","svg","document","createElementNS","setAttributeNS","setAttribute","innerHTML","concat","getInitialSvg","name","replace","test","lname","trim","split","charAt","length","String","toUpperCase","getInitials","scrollOptions","behavior","block","inline","getSize","innerWidth","innerHeight","undefined","Fragment","map","index","key","colorId","text","arguments","navigator","clipboard","writeText","toastElement","body","appendChild","toastProps","removeChild","render","initials_img","s","XMLSerializer","serializeToString","btoa","cookies","cookie","substr","_ref$domain","domain","_ref$method","method","_ref$endpoint","endpoint","_ref$data","_ref$successToast","successToast","_ref$errorToast","errorToast","_ref$headers","headers","_ref$controller","controller","_ref$forceValidationS","forceValidationSchema","_ref$skipValidation","skipValidation","_ref$showToast","showToast","_ref$consoleMsg","consoleMsg","console","log","_ref$validators","validators","Promise","resolve","reject","responseObj","includes","isMethodProper","validatorKey","validationSchema","yup","object","shape","validate","validateData","then","req_obj","responseType","withCredentials","crossDomain","signal","axios","request","res","responseData","_error$response","_error$response2","_controller$signal","_error$errors","err","errors","join","isCancel","response","status","aborted","e","preventDefault","querySelector","getAttribute","scrollIntoView","count","ref","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","current","observe","unobserve","disconnect","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener"],"mappings":"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","x_google_ignoreList":[6]}