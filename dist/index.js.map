{"version":3,"sources":["../src/components/Toast.js","../src/components/Wrappers/ProfileWrapperCard.jsx","../src/components/Counter.jsx","../src/components/Example.js","../src/components/ExampleCard.jsx","../src/helpers/base64ToFile.js","../src/helpers/capitalizeFirstLetter.js","../src/helpers/changeEmailFormat.js","../src/helpers/checkCreditSumLimits.js","../src/helpers/isBrowser.js","../src/helpers/click_chat_fun.js","../src/helpers/combineTeamAndInvitedata.js","../src/helpers/copy_to_clipboard.js","../src/helpers/create_img.js","../src/helpers/deepClone.js","../src/helpers/downloadCSV.js","../src/helpers/downloadExcel.js","../src/helpers/formatCreditLimits.js","../src/helpers/get_combined_location.js","../src/helpers/get_days_to_month_years.js","../src/helpers/get_domain_name.js","../src/helpers/get_formated_date.js","../src/helpers/get_formated_url.js","../src/helpers/get_invitation_formated_data.js","../src/helpers/get_next_billing_date.js","../src/helpers/get_remaining_days.js","../src/helpers/getCookies.js","../src/helpers/getLockedUnlockProfiles.js","../src/helpers/readExcelCSV.js","../src/helpers/refactor_ln_urls.js","../src/helpers/scrollTo.js","../src/helpers/table-helper.js","../src/helpers/underscoresToNormal.js","../src/helpers/updatePlural.js","../src/helpers/useOnScreen.js","../src/helpers/useQuery.js","../src/helpers/userStateUpdate.js","../src/helpers/useWindowSize.js"],"names":["ToastWrapper","position","expand","richColors","closeButton","props","React","Toaster","ProfileWrapperCard","children","className","id","Counter","initialCount","onCountChange","count","setCount","useState","lastUpdate","setLastUpdate","useEffect","toast","increment","useCallback","prevCount","decrement","reset","resolve","Example","ExampleCard","title","detectMimeType","b64","signatures","s","i","fromBase64ToFile","capitalizeFirstLetter","str","changeEmailFormat","data_emails","emails","a","limitConfigs","checkCreditSumLimits","_ignored","updatedRows","sums","isNonEditable","name","acc","limits","key","value","exceeded","details","label","isBrowser","click_chat_fun","elements","combineTeamAndInviteData","allocated_limits","unallocated_limits","teamData","inviteData","formattedData","member","invite","restructureData","tableData","team_limits","invite_limits","user_id_hash","data","copy_to_clipboard","text","type","textArea","success","fnBrowserDetect","userAgent","browserName","logo_img","get_svg","initials","imageColor","svg","y_margin","getInitials","_name","english","lname","getInitialsSvg","bgColor","createImg","initials_img","encodedData","deepClone","obj","downloadCSV","filename","array","csv","row","csvArray","downloadExcel","wb","utils","index","safeKey","binaryWS","final_filename","writeFile","keyMapping","formatCreditLimits","creditsTeam","get_combined_location","location","get_days_to_month_years","days","moment","get_domain_name","url","get_formated_date","date","get_formated_url","formatTeamData","_a","_b","_c","item","get_next_billing_date","get_remaining_days","date_to_differ","moment_date","getCookieValue","cookies","cookie","checkIfProfileLocked","person_data","checkIfProfileUnLocked","getLockedUnlockProfiles","profiles","unlocked","readExcelCSV","file","callback","reader","e","GetTableFromExcel","bytes","workbook","read","Sheet","refactor_ln_urls","original_url","scrollOptions","scrollToById","interval","element","scrollTo","filter_string","string_to_match","query","filter_array","val","b","table_filter_rows","values","filtered","prop","underscoresNormalText","input","word","updatePlural","postfix","useOnScreen","ref","isIntersecting","setIntersecting","observer","entry","useQuery","useRouter","useMemo","UserContext","createContext","useUser","useContext","useWindowSize","windowSize","setWindowSize","handleResize"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport { Toaster, toast } from 'sonner';\n\n// Toast component that provides the Toaster container\nexport const ToastWrapper = ({\n  position = 'bottom-right',\n  expand = false,\n  richColors = true,\n  closeButton = true,\n  ...props\n}) => {\n  return (\n    <Toaster\n      position={position}\n      expand={expand}\n      richColors={richColors}\n      closeButton={closeButton}\n      {...props}\n    />\n  );\n};\n\n// Export toast functions for direct use\nexport { toast };\n","import React from 'react';\n\nexport const ProfileWrapperCard = ({ children, className = '', id = '' }) => {\n  return (\n    <div id={id} className={`border w-full h-fit bg-white rounded-lg`}>\n      <div className={`p-3 sm:p-7 mb-2 ${className}`}>{children}</div>\n    </div>\n  );\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { toast } from 'sonner';\n\nexport const Counter = ({ initialCount = 0, onCountChange }) => {\n  const [count, setCount] = useState(initialCount);\n  const [lastUpdate, setLastUpdate] = useState(null);\n\n  // Effect to track last update time\n  useEffect(() => {\n    setLastUpdate(new Date().toLocaleTimeString());\n\n    // Notify parent component if provided\n    if (onCountChange) {\n      onCountChange(count);\n    }\n\n    // Show toast on milestone counts\n    if (count !== 0 && count % 10 === 0) {\n      toast.success(`Milestone reached: ${count}!`);\n    }\n  }, [count, onCountChange]);\n\n  // Memoized increment function\n  const increment = useCallback(() => {\n    setCount((prevCount) => prevCount + 1);\n  }, []);\n\n  // Memoized decrement function\n  const decrement = useCallback(() => {\n    setCount((prevCount) => prevCount - 1);\n  }, []);\n\n  // Reset function with confirmation\n  const reset = useCallback(() => {\n    toast.promise(\n      new Promise((resolve) => {\n        setTimeout(() => {\n          setCount(initialCount);\n          resolve();\n        }, 500);\n      }),\n      {\n        loading: 'Resetting counter...',\n        success: 'Counter reset successfully!',\n        error: 'Failed to reset counter',\n      }\n    );\n  }, [initialCount]);\n\n  return (\n    <div className=\"counter-container\">\n      <h2>Counter: {count}</h2>\n      <p>Last updated: {lastUpdate}</p>\n      <div className=\"counter-buttons\">\n        <button onClick={decrement}>-</button>\n        <button onClick={reset}>Reset</button>\n        <button onClick={increment}>+</button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Example = () => {\n  return <div>Example Component</div>;\n};\n","import React from 'react';\n\nexport const ExampleCard = ({ title, children }) => {\n  return (\n    <div className=\"border rounded-lg p-4 bg-white\">\n      <h2 className=\"text-xl font-bold mb-2\">{title}</h2>\n      <div className=\"content\">{children}</div>\n    </div>\n  );\n};\n\n","/**\n * Detects the MIME type of a given base64 encoded string.\n * @param {string} b64 - The base64 encoded string to detect the MIME type for.\n * @returns {string|undefined} - The detected MIME type, or undefined if no match is found.\n */\nfunction detectMimeType(b64) {\n  //Contains base64 signatures and their corresponding MIME types\n  const signatures = {\n    JVBERi0: 'application/pdf',\n    R0lGODdh: 'image/gif',\n    R0lGODlh: 'image/gif',\n    iVBORw0KGgo: 'image/png',\n    AAAA: 'video/mp4',\n    '/': 'image/jpg',\n    i: 'image/png',\n    R: 'image/gif',\n    U: 'image/webp',\n    J: 'application/pdf',\n    A: 'video/mp4',\n    UEsDBBQA: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;',\n  };\n\n  for (const s in signatures) {\n    const i = b64.indexOf(s);\n    // Checking if the signature is found at the beginning of the base64 string\n    if (i === 0 || i === 1) {\n      // Returning the corresponding MIME type\n      return signatures[s];\n    }\n  }\n}\n\n/**\n * Converts a base64 encoded string to a data URL with the appropriate MIME type.\n * @param {string} s - The base64 encoded string to convert.\n * @returns {string|undefined} - The data URL representing the input with detected MIME type, or undefined if detection fails.\n */\nexport const fromBase64ToFile = (s) => {\n  // Constructing the data URL using the detected MIME type and the input base64 string\n  const final = 'data:' + detectMimeType(s) + ';base64,' + s;\n  return final;\n};\n","/**\n * This function capitalizes the initial letter of a given string.\n * @param {string} str The input string to be capitalized.\n * @returns {string} The input string with the initial letter capitalized.\n */\nexport const capitalizeFirstLetter = (str) => {\n  // Get the first character of the input string and convert it to uppercase.\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n","/**\n * This function filters and processes an array of email objects, calculating their accuracy based on certain properties.\n * @param {Object[]} data_emails An array of email objects or undefined.\n * @returns An array of processed email objects with accuracy calculated.\n */\nexport function changeEmailFormat(data_emails) {\n  let emails;\n  // Check if data_emails is not an array, and return an empty array.\n  if (!Array.isArray(data_emails)) {\n    return [];\n  }\n  // Check if data_emails is truthy (not undefined or null).\n  if (data_emails) {\n    //TODO: No need of this, backend is doing the validations and giving accuracy\n    /*emails = data_emails?.map((email) => {\n\t\t\t//Create a copy of the email object using spread operator.\n\t\t\tlet local_email = { ...(email || {}) };\n\t\t\tlet prob = 0;\n\t\t\t//Check if the 'validation' property exists in the email object. and it is true\n\t\t\t//If validation is true, email is validated, 60% email is accurate\n\t\t\tif (local_email?.validation) {\n\t\t\t\tprob = 0.6;\n\t\t\t}\n\t\t\t//Check if the 'smtp' property exists in the email object.\n\t\t\t//If smtp is true, it is 30% accurate,\n\t\t\t//If email is both smtp and validation, it is 90% accurate\n\t\t\tif (local_email?.smtp) {\n\t\t\t\tprob += 0.3;\n\t\t\t}\n\t\t\t//Add only if email has probability greater than 0\n\t\t\tif (prob != 0) {\n\t\t\t\tlocal_email.accuracy = prob;\n\t\t\t\treturn local_email;\n\t\t\t}\n\t\t\t//else return null\n\t\t\treturn null;\n\t\t});.*/\n    // Filter out any null elements from the 'emails' array.\n    emails = data_emails?.filter((a) => a);\n  }\n  // Return the processed array of email objects.\n  return emails;\n}\n","import { toast } from 'sonner';\n\n// Single config list for keys and labels\nconst limitConfigs = [\n  { key: 'no_contact_lists', label: 'No Contact Lists' },\n  { key: 'download_export', label: 'Download & Export' },\n  { key: 'tags_types', label: 'Tags & Types' },\n  { key: 'credit', label: 'Credits' },\n  { key: 'magic_search', label: 'Domain Search' },\n  { key: 'personality_intel', label: 'Personality Intel' },\n  { key: 'zbizlocator', label: 'Local Search' },\n];\n\n/**\n * Ensure each limit’s total allocation (excluding non‑editable/unallocated rows)\n * does not exceed 100%.\n *\n * @param {Array} _ignored - original data (unused)\n * @param {Array} updatedRows - array of row objects with updated .limits\n * @returns {Boolean} true if all sums ≤ 100, false (and toasts) otherwise\n */\nexport const checkCreditSumLimits = (_ignored, updatedRows) => {\n  // Sum each key across filtered rows\n  const sums = updatedRows\n    .filter(({ isNonEditable, name }) => !isNonEditable && name !== 'Unallocated credits')\n    .reduce((acc, { limits }) => {\n      limitConfigs.forEach(({ key }) => {\n        const value = Number(limits[key]) || 0;\n        acc[key] = (acc[key] || 0) + value;\n      });\n      return acc;\n    }, {});\n\n  // Identify keys exceeding 100%\n  const exceeded = limitConfigs.filter(({ key }) => (sums[key] || 0) > 100);\n  if (exceeded.length) {\n    const details = exceeded.map(({ key, label }) => `${label} (${sums[key]}%)`);\n    toast.error(`The following limits exceed 100%: ${details.join(', ')}.`);\n    return false;\n  }\n\n  return true;\n};\n","/**\n * Checks if the code is running in a browser environment.\n * @returns {boolean} Returns true if the code is running in a browser, otherwise false.\n */\nexport const isBrowser = () => {\n  // Check if the 'window' object is defined, indicating that the code is running in a browser environment.\n  return typeof window !== 'undefined';\n};\n","import { isBrowser } from './isBrowser';\n\nexport const click_chat_fun = () => {\n  if (isBrowser()) {\n    var elements = document.getElementsByClassName('cc-157aw cc-1kgzy');\n    if (elements && elements.length > 0) {\n      elements[0].click();\n    }\n  }\n};\n","/**\n  This function combines the team and invite data\n * @param {Array} data - The data to combine\n * @param {Object} options - The options to use\n * @returns {Array} - The combined data\n */\nexport const combineTeamAndInviteData = (allocated_limits, unallocated_limits) => {\n  if (\n    !allocated_limits ||\n    !unallocated_limits ||\n    Object.keys(allocated_limits).length === 0 ||\n    Object.keys(unallocated_limits).length === 0\n  ) {\n    return [];\n  }\n\n  const teamData = allocated_limits['team_limits'] || [];\n  const inviteData = allocated_limits['invite_limits'] || [];\n\n  const formattedData = [\n    ...teamData.map((member) => ({ ...member, isInvited: false })),\n    ...inviteData.map((invite) => ({ ...invite, isInvited: true })),\n  ];\n\n  formattedData.push({\n    ...unallocated_limits,\n    name: 'Unallocated credits',\n    isNonEditable: true,\n  });\n\n  return formattedData;\n};\n\n/**\n This function restructures the data\n * @param {Array} tableData - The data to be restructured\n * @returns {Object} - The restructured data\n */\nexport const restructureData = (tableData) => {\n  const team_limits = {};\n  const invite_limits = {};\n  // Process each entry in tableData\n  Object.entries(tableData).forEach(([user_id_hash, data]) => {\n    if (data.isInvited) {\n      // For invited users, use email as key and pass all data\n      invite_limits[data.email] = { ...data };\n      delete invite_limits[data.email].isInvited; // Remove the isInvited flag\n      delete invite_limits[data.email].email; // Remove email since it's now the key\n    } else {\n      // For team members, use user_id_hash as key and pass all data\n      team_limits[user_id_hash] = { ...data };\n      delete team_limits[user_id_hash].isInvited; // Remove the isInvited flag\n    }\n  });\n\n  return {\n    credit_limits: {\n      team_limits,\n      invite_limits,\n    },\n  };\n};\n","import { toast } from 'sonner';\nimport { isBrowser } from './isBrowser';\n\n/**\n * This function copies the given text to the clipboard\n * and displays a success toast message if executed in a browser environment.\n * @param {string} text The text to be copied to the clipboard.\n * @param {string} type The type of data being copied (e.g., \"Email\"). Default value is \"Email\".\n * @returns {boolean} Returns true if copying was successful, false otherwise\n */\nexport function copy_to_clipboard(text, type = 'Email') {\n  if (!isBrowser()) return false;\n\n  try {\n    // Modern browsers\n    if (navigator.clipboard && window.isSecureContext) {\n      navigator.clipboard.writeText(text);\n      toast.success(`${type} copied to clipboard`);\n      return true;\n    }\n\n    // Fallback for older browsers\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    textArea.style.position = 'fixed';\n    textArea.style.left = '-999999px';\n    textArea.style.top = '-999999px';\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n\n    const success = document.execCommand('copy');\n    textArea.remove();\n\n    if (success) {\n      toast.success(`${type} copied to clipboard`);\n      return true;\n    } else {\n      toast.error('Failed to copy to clipboard');\n      return false;\n    }\n  } catch (error) {\n    toast.error('Failed to copy to clipboard');\n    return false;\n  }\n}\n","import { isBrowser } from './isBrowser';\n\nexport const imageColors = {\n  faint_blue: {\n    bgColor: '#EFEFFF',\n    textColor: 'black',\n  },\n};\n/**\n * This function will the user's browser using userAgent\n * @returns {string} Browser name\n */\nfunction fnBrowserDetect() {\n  let userAgent = navigator.userAgent;\n  let browserName;\n\n  if (userAgent.match(/chrome|chromium|crios/i)) {\n    browserName = 'chrome';\n  } else if (userAgent.match(/firefox|fxios/i)) {\n    browserName = 'firefox';\n  } else if (userAgent.match(/safari/i)) {\n    browserName = 'safari';\n  } else if (userAgent.match(/opr\\//i)) {\n    browserName = 'opera';\n  } else if (userAgent.match(/edg/i)) {\n    browserName = 'edge';\n  } else {\n    browserName = 'No browser detection';\n  }\n\n  return browserName;\n}\n\n/**\n * SVG image representing a default logo with placeholders for initials.\n */\nconst logo_img = `\n<g clip-path=\"url(#0cf21cfe8e)\" transform=\"translate(5, 20) scale(0.5)\">\n<path fill=\"#ffffff\" d=\"M 238.238281 215.71875 C 255.039062 215.71875 270.484375 215.71875 285.882812 215.570312 C 286.886719 215.328125 287.800781 214.894531 288.625 214.265625 C 289.445312 213.636719 290.101562 212.863281 290.59375 211.953125 C 299.421875 196.890625 308.148438 181.828125 316.625 166.765625 C 317.03125 165.753906 317.234375 164.703125 317.234375 163.613281 C 317.234375 162.523438 317.03125 161.472656 316.625 160.464844 C 315.144531 157.265625 313.421875 154.203125 311.457031 151.273438 C 310.230469 153.007812 309.175781 154.238281 308.375 155.617188 C 300.523438 169.425781 292.5 183.234375 284.980469 197.140625 C 282.472656 201.761719 279.585938 203.820312 274.347656 203.191406 C 270.242188 202.960938 266.140625 202.960938 262.035156 203.191406 C 278.382812 174.09375 294.382812 145.828125 310.957031 116.703125 C 319.984375 132.296875 328.507812 146.832031 336.757812 161.59375 C 337.011719 162.59375 337.054688 163.601562 336.882812 164.621094 C 336.714844 165.640625 336.347656 166.578125 335.78125 167.441406 C 324.261719 187.675781 312.621094 207.84375 300.851562 227.945312 C 300.253906 229.003906 299.464844 229.890625 298.484375 230.609375 C 297.503906 231.328125 296.421875 231.8125 295.234375 232.0625 C 266.898438 232.339844 238.566406 232.265625 208.976562 232.265625 C 213.664062 224.003906 217.828125 216.523438 222.117188 209.117188 C 241.046875 176.304688 259.804688 143.316406 279.136719 110.855469 C 282.773438 104.730469 283.425781 100.109375 278.910156 94.738281 C 277.597656 92.972656 276.402344 91.132812 275.324219 89.214844 L 183.777344 248.082031 L 289.265625 248.082031 C 283.675781 257.769531 278.785156 266.558594 273.644531 275.269531 C 269.910156 281.644531 267.402344 290.332031 261.808594 293.546875 C 256.21875 296.757812 247.441406 294.652344 240.070312 294.675781 L 101.679688 294.675781 C 148.996094 212.730469 195.710938 131.792969 243.027344 49.773438 L 131.972656 49.773438 C 120.035156 49.773438 120.035156 49.773438 115.171875 61.75 L 219.960938 61.75 L 98.722656 272.15625 C 89.71875 256.515625 81.167969 242.03125 72.96875 227.09375 C 72.609375 225.941406 72.496094 224.765625 72.636719 223.566406 C 72.777344 222.367188 73.15625 221.25 73.773438 220.214844 C 93.011719 186.574219 112.347656 153 131.769531 119.492188 C 133.125 117.132812 134.277344 114.695312 136.109375 111.507812 C 119.632812 111.507812 104.214844 111.507812 88.792969 111.632812 C 87.761719 111.773438 86.804688 112.121094 85.929688 112.683594 C 85.050781 113.246094 84.335938 113.96875 83.777344 114.847656 C 74.851562 130.011719 66.058594 145.273438 57.398438 160.640625 C 57.019531 161.558594 56.828125 162.519531 56.828125 163.511719 C 56.828125 164.507812 57.019531 165.46875 57.398438 166.386719 C 59.101562 169.855469 61.015625 173.203125 63.140625 176.429688 C 66 171.410156 68.480469 167.390625 70.863281 163.175781 C 77.234375 152.027344 83.800781 140.980469 89.769531 129.609375 C 89.945312 129.164062 90.15625 128.738281 90.40625 128.328125 C 90.65625 127.917969 90.9375 127.535156 91.25 127.175781 C 91.566406 126.816406 91.910156 126.484375 92.28125 126.183594 C 92.652344 125.882812 93.046875 125.617188 93.464844 125.382812 C 93.882812 125.148438 94.316406 124.953125 94.765625 124.796875 C 95.21875 124.636719 95.679688 124.519531 96.152344 124.441406 C 96.621094 124.363281 97.097656 124.324219 97.574219 124.328125 C 98.054688 124.332031 98.527344 124.378906 98.996094 124.460938 C 103.035156 124.789062 107.121094 124.460938 112.210938 124.460938 C 95.613281 153.359375 79.742188 181.527344 63.242188 210.597656 C 55.71875 197.441406 48.972656 184.816406 41.226562 172.941406 C 36.8125 166.210938 36.886719 161.34375 41.226562 154.464844 C 52.332031 136.539062 62.539062 118.035156 73.046875 99.660156 C 73.40625 98.839844 73.882812 98.101562 74.476562 97.433594 C 75.070312 96.765625 75.75 96.207031 76.519531 95.757812 C 77.292969 95.308594 78.113281 94.984375 78.984375 94.792969 C 79.855469 94.601562 80.734375 94.550781 81.621094 94.636719 C 109.054688 94.886719 136.511719 94.761719 165.296875 94.761719 C 163.617188 97.953125 162.4375 100.363281 161.109375 102.671875 C 139.792969 139.625 118.882812 176.832031 96.890625 213.359375 C 91.148438 222.875 91.199219 229.726562 99.398438 237.613281 C 129.464844 185.015625 159.703125 132.519531 190.496094 79.070312 L 85.582031 79.070312 C 86.636719 76.761719 87.210938 75.230469 88.089844 73.824219 C 95.210938 61.273438 102.28125 48.84375 109.703125 36.542969 C 110.363281 35.5625 111.191406 34.761719 112.191406 34.140625 C 113.195312 33.519531 114.277344 33.132812 115.445312 32.980469 C 166.902344 32.792969 218.355469 32.753906 269.808594 32.851562 C 270.554688 32.957031 271.289062 33.109375 272.015625 33.304688 C 225.101562 114.671875 178.359375 195.710938 130.96875 277.753906 L 242.527344 277.753906 C 254.238281 277.753906 254.636719 277.453125 259.078125 265.203125 L 154.4375 265.203125 L 275.148438 55.625 C 276.265625 57.027344 277.3125 58.484375 278.285156 59.992188 C 285.605469 72.542969 292.753906 85.324219 300.273438 97.824219 C 300.796875 98.542969 301.195312 99.320312 301.472656 100.164062 C 301.746094 101.007812 301.882812 101.871094 301.882812 102.757812 C 301.882812 103.644531 301.746094 104.511719 301.472656 105.355469 C 301.195312 106.195312 300.796875 106.976562 300.273438 107.691406 C 280.566406 141.484375 260.972656 175.402344 241.5 209.445312 C 240.546875 211.101562 239.742188 212.808594 238.238281 215.71875 Z M 238.238281 215.71875 \" fill-opacity=\"1\" fill-rule=\"nonzero\" />\n</g>`;\n\n/**\n * Function to generate the SVG image based on initials.\n * @param {string} initials - The initials to be displayed in the SVG image.\n * @param {string?} imageColor - If null, default gradient black will be used as background\n * @returns {SVGElement} - The SVG image element with provided initials or the custom logo if no initials are provided.\n */\nconst get_svg = (initials, imageColor = null) => {\n  let xmlns = 'http://www.w3.org/2000/svg';\n  let svg = document.createElementNS(xmlns, 'svg');\n  svg.setAttributeNS(null, 'width', '200');\n  svg.setAttributeNS(null, 'height', '200');\n  svg.setAttributeNS(null, 'fill', 'none');\n  svg.setAttribute(\n    'style',\n    `${\n      imageColor\n        ? `background:${imageColor?.bgColor}`\n        : 'background-image: linear-gradient(180deg, #112634 0%, #000000 100%)'\n    };\n\t\tbackground-repeat:no-repeat !important;\n\t\tdisplay: flex;\n\t\talign-items:center;`\n  );\n  if (initials) {\n    let y_margin = '50%';\n    //In firefox, the margin issue is coming, to solve that\n    if (isBrowser() && fnBrowserDetect() === 'firefox') {\n      y_margin = '55%';\n    }\n    svg.innerHTML = `\n\t\t\t<text x=\"50%\" y=${y_margin} fill=\"${\n        imageColor?.textColor ?? 'white'\n      }\" style=\"font-weight: 700; text-transform: uppercase; font-family: 'Roboto', sans-serif;\" \n\t\t\tdominant-baseline=\"middle\"  text-anchor=\"middle\" alignment-baseline=\"central\" font-size=\"90\">\n\t\t\t\t${initials}\n\t\t\t</text>\n\t\t`;\n  } else {\n    svg.innerHTML = logo_img;\n  }\n  return svg;\n};\n\n/**\n * Function to extract initials from a name.\n * @param {string} name - The name from which initials will be extracted.\n * @returns {string} - The extracted initials in uppercase, or an empty string if the input name contains non-alphanumeric characters.\n */\nexport const getInitials = (_name) => {\n  let initials;\n  //Check if the name is in english\n  const english = /^[A-Za-z0-9 ]*$/;\n  //Replace the non alphanumeric characters in the name\n  _name = _name ? _name.replace(/[^a-zA-Z0-9 ]/g, '') : '';\n  if (english.test(_name)) {\n    let name = _name.trim().toUpperCase();\n    let lname = name.split(' ');\n    lname = lname.map((a) => a.trim());\n    initials =\n      lname[0].charAt(0) + '' + (lname.length > 1 ? lname[lname.length - 1].charAt(0) : '');\n    initials = String(initials).toUpperCase();\n  }\n  return initials;\n};\n\n/**\n * Function to create an SVG image element with initials based on a given name.\n * @param {string} name - The name from which initials will be extracted to generate the SVG image.\n * @param {string?} bgColor - The color of the background of the image. If null, default black color will be used\n * @returns {SVGElement} - The SVG image element with provided initials or the custom logo if no initials are provided.\n */\nexport const getInitialsSvg = (_name, bgColor = null) => {\n  const initials = getInitials(_name);\n  if (initials) return get_svg(initials, bgColor);\n  return get_svg();\n};\n\n/**\n * Component to create and return an SVG image based on provided initials or a default logo.\n * @param {string} name - The name from which initials will be extracted to generate the image.\n * @param {string?} bgColor - The color of the background of the image. If null, default black color will be used\n * @returns {string} - The base64-encoded SVG image data or an empty string if no name is provided or it's not a browser environment.\n */\nexport const createImg = (name, bgColor = null) => {\n  // Check if a name is provided and the code is running in a browser environment.\n  if (name && isBrowser()) {\n    // Generate an SVG image element with initials based on the provided name.\n    let initials_img = getInitialsSvg(name, bgColor);\n    // Serialize the SVG element to a string.\n    var s = new XMLSerializer().serializeToString(initials_img);\n    // Encode the SVG string to base64.\n    var encodedData = window.btoa(s);\n    // Return the base64-encoded SVG image data.\n    return 'data:image/svg+xml;base64,' + encodedData;\n  }\n  // Return an empty string if no name is provided or it's not a browser environment.\n  return '';\n};\n","/**\n * Deep‑clone any JSON‑serializable value.\n * Falls back to JSON.parse/JSON.stringify if structuredClone isn't available.\n */\nexport const deepClone = (obj) => {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n};\n","import { toast } from 'sonner';\n\n/**\n * Downloads an array of data as a CSV file and displays a success toast.\n * @param {string} filename - The desired name for the downloaded file.\n * @param {Array} array - An array of objects containing the data to be downloaded.\n * @returns {void}\n */\nexport const downloadCSV = (filename, array) => {\n  // Convert each object in the array to an array of its values\n  const csv = array.map((row) => Object.values(row));\n\n  // Insert the keys of the first object as the header row at the beginning of the CSV\n  csv.unshift(Object.keys(array[0]));\n\n  // Join the CSV array using line breaks\n  const csvArray = csv.join('\\r\\n');\n\n  // Create a new anchor element to trigger the download\n  const a = document.createElement('a');\n\n  // Set the href attribute to encode the CSV data\n  a.href = 'data:attachment/csv,' + encodeURIComponent(csvArray);\n\n  // Open the download in a new tab/window\n  a.target = '_blank';\n\n  // Set the suggested filename for the downloaded file\n  a.download = filename;\n\n  // Simulate a click on the anchor element to trigger the download\n  a.click();\n\n  // Display a toast indicating successful file download\n  toast.success('Downloaded file successfully');\n};\n","import { toast } from 'sonner';\nimport { utils, writeFile } from 'xlsx';\n\n/**\n * Downloads data as an Excel (.xlsx) file.\n *\n * @param {string} filename - The name of the output Excel file.\n * @param {object} data - Data to be written into the Excel file.\n * @returns {void}\n */\nexport const downloadExcel = (filename, data) => {\n  // Check if there is any data to write to the Excel file\n  if (Object.keys(data).length === 0) {\n    return;\n  }\n  // Create a new Workbook\n  const wb = utils.book_new();\n  // Name your sheet\n  Object.keys(data).map((key, index) => {\n    // Ensure the sheet name does not exceed 31 characters\n    const safeKey = key.length > 31 ? key.slice(0, 28) + `_${index}` : key;\n\n    const binaryWS = utils.json_to_sheet(data[key]); // Convert data to a worksheet\n    utils.book_append_sheet(wb, binaryWS, safeKey); // Append the worksheet to the workbook\n  });\n  // Export your excel\n  let final_filename = filename.trim().replace('.xlsx', '') + '.xlsx';\n  // Write the workbook to a file with the final filename\n  writeFile(wb, final_filename);\n  // Display a success toast message\n  toast.success('Downloaded file successfully');\n};\n","const keyMapping = {\n  credit: 'Lookup/Ids',\n  magic_search: 'Domain search',\n  personality_intel: 'Personality',\n  zbizlocator: 'Local search',\n};\n\n// format the credits response\nexport const formatCreditLimits = (creditsTeam) => {\n  if (!creditsTeam) return [];\n  return Object.entries(creditsTeam).map(([key, value]) => ({\n    name: keyMapping[key] || key,\n    ...value,\n  }));\n};\n","/**\n * This function takes a location object as input and combines its city, state, and country properties into a single string.\n * @param {Object} location An object containing location details.\n * @param {string} location.city The city name (optional).\n * @param {string} location.state The state or province name (optional).\n * @param {string} location.country The country name (optional).\n * @returns {string} The combined location string.\n */\nexport const get_combined_location = (location) => {\n  // Create an array containing the city, state, and country properties from the location object.\n  const location_array = [location?.city, location?.state, location?.country]; //, location?.zipcode\n  // Use the filter method to remove any undefined or null elements from the array, leaving only the non-empty values.\n  // Then, join the non-empty values with a comma and space to create the final combined location string.\n  return location_array.filter((a) => a).join(', ');\n};\n","import moment from 'moment';\n\n/**\n * Return the no of days in year or months or days\n * @param {days} -> the number of days\n * @returns {date} -> return in 2years/ 4 months/ 5 days format.\n */\nexport const get_days_to_month_years = (days) => {\n  return [\n    moment.duration(days, 'days').years() &&\n      `${moment.duration(days, 'days').years()} year${\n        moment.duration(days, 'days').years() > 1 ? 's' : ''\n      }`,\n    moment.duration(days, 'days').months() &&\n      `${moment.duration(days, 'days').months()} month${\n        moment.duration(days, 'days').months() > 1 ? 's' : ''\n      }`,\n    (moment.duration(days, 'days').days() > 0 ||\n      (moment.duration(days, 'days').years() === 0 &&\n        moment.duration(days, 'days').months() === 0)) &&\n      `${moment.duration(days, 'days').days()} day${\n        moment.duration(days, 'days').days() > 1 ? 's' : ''\n      }`,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n};\n","/**\n * This function extracts the domain name from a given URL.\n * @param {string} url The input URL from which the domain name will be extracted.\n * @returns {string} The extracted domain name.\n */\nexport const get_domain_name = (url) => {\n  // Check if the URL is provided. If not, return an empty string.\n  if (!url) {\n    return '';\n  }\n\n  // Create a new URL object from the input URL.\n  const url_obj = new URL(url);\n\n  // Return the hostname of the URL, which represents the domain name.\n  return url_obj.hostname;\n};\n","/**\n * Return the date in DD MMM YYYY format\n * @param {Date} date -> Date to format\n * @returns {Date}\n */\nexport const get_formated_date = (date) => {\n  return new Date(date).toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric',\n  });\n};\n","/**\n * This function takes a URL and formats it to ensure it starts with \"https://\". If the URL is not provided or does not start with \"http\", it will be prefixed with \"https://\" before returning.\n * @param {string} url The URL that needs to be formatted.\n * @returns {string} The formatted URL starting with \"https://\".\n */\nexport const get_formated_url = (url) => {\n  // Check if the URL is not provided (empty or null)\n  if (!url) {\n    // If URL is not provided, return an empty string\n    return '';\n  }\n  // Check if the URL does not start with \"http\"\n  if (url.substr(0, 4) !== 'http') {\n    // If URL does not start with \"http\", prefix it with \"https://\" and return the updated URL\n    return 'https://' + url;\n  }\n  // If URL starts with \"http\", return the URL as it is\n  return url;\n};\n","/**\n * Formats raw team data into a structured format suitable for use within the application.\n * This function takes an array of team invitation data and maps it into a structured array of objects,\n * each containing user data, role, invitation status, creation date, and team invitation ID.\n *\n * Input validation is performed to ensure the data is an array.\n *\n * @param {Array} data - An array of objects representing raw team invitation data.\n * @returns {Array} - An array of formatted objects containing team member details.\n * @throws {Error} - Throws an error if the input is not an array.\n * TODO: Update the Response of Invitation Data from Backend so that we dont want to format data again and again.\n */\n\nexport const formatTeamData = (data) => {\n  if (!Array.isArray(data)) {\n    return [];\n  }\n\n  let formattedData = [];\n\n  if (data[0]?.invitation) {\n    const item = data[0]?.invitation;\n    formattedData.push({\n      user_data: {\n        email: item.send_to_email_id,\n      },\n      role: item.role,\n      invitation_status: item.invitation_status,\n      create_datetime: item.invitation_status === 2 ? item.create_datetime : null,\n      team_invitations_id: item.team_invitations_id,\n    });\n  }\n\n  return data[0]?.invitation\n    ? formattedData\n    : data.map((item) => ({\n        user_data: {\n          email: item.send_to_email_id,\n        },\n        role: item.role,\n        invitation_status: item.invitation_status,\n        create_datetime: item.invitation_status === 2 ? item.create_datetime : null,\n        team_invitations_id: item.team_invitations_id,\n      }));\n};\n","import moment from 'moment';\nimport { get_formated_date } from './get_formated_date';\n/**\n * Return the one day next to the date in DD MMM YYYY format\n * @param {Date} date -> fomrats the date and then\n * @returns {Date} -> adding one day to it.\n */\nexport const get_next_billing_date = (date) => {\n  return get_formated_date(moment(date).add(1, 'days').toISOString());\n};\n","import moment from 'moment';\n\n/**\n * Calculates the number of remaining days between the provided date and a reference date.\n * @param {Date} date_to_differ The date to calculate remaining days for.\n * @param {Date?} date Optional. The reference date. Defaults to the current date.\n * @returns {number} The number of remaining days.\n */\nexport const get_remaining_days = (date_to_differ, date = new Date()) => {\n  // Convert the reference date to a Moment.js object.\n  let moment_date = moment(date);\n\n  // Convert the target date to a Moment.js object for comparison.\n  const expiry_date = moment(date_to_differ);\n\n  // Calculate the difference in days between the reference and target dates.\n  return expiry_date.diff(moment_date, 'days');\n};\n","/**\n * This function is used to retrieve the value of a specific cookie by its name from the document's cookies.\n * @param {string} name The name of the cookie whose value is to be retrieved.\n * @returns {string} The value of the specified cookie if found, otherwise an empty string.\n */\nexport const getCookieValue = (name) => {\n  // Splitting the cookies string into an array of individual cookie strings.\n  const cookies = document.cookie.split('; ');\n\n  // Looping through each cookie to find the one with the specified name.\n  for (let i = 0; i < cookies.length; i++) {\n    // Splitting the current cookie string into its name and value.\n    const cookie = cookies[i].split('=');\n\n    // Checking if the name of the current cookie matches the specified name.\n    if (cookie[0] === name) {\n      // If the name matches, return the value of the cookie.\n      return cookie[1];\n    }\n  }\n  // If the specified cookie name is not found, return an empty string.\n  return '';\n};\n\n// Exporting the getCookieValue function as the default export of this module.\nexport default getCookieValue;\n","// import changeEmailFormat from \"./changeEmailFormat\";\n\n/**\n * Get person's contact details\n * @param {Object} person_data -> Person data\n * @returns {Object}\n */\n// const get_contact_details = (person_data) => {\n// \t//get phone number and formatted emails\n// \treturn {\n// \t\tphone: person_data?.phone,\n// \t\temails: changeEmailFormat(person_data?.emails),\n// \t};\n// };\n\n/**\n * Check if person is locked\n * @param {Object} person_data -> Person data\n * @returns {boolean}\n */\nexport const checkIfProfileLocked = (person_data) => {\n  //get the contact details of person\n  // const contact_details = get_contact_details(person_data);\n  //Check if person is locked and has at least one email or phone number\n  return !person_data.unlocked;\n  /*&&\n\t\t((contact_details.emails && contact_details.emails?.length > 0) ||\n\t\t\t(contact_details.phone && contact_details.phone?.length > 0))*/\n};\n\n/**\n * Check if person is unlocked\n * @param {Object} person_data -> Person data\n * @returns {boolean}\n */\nexport const checkIfProfileUnLocked = (person_data) => {\n  // const contact_details = get_contact_details(person_data);\n  //Check if person is unlocked or does not have any email or phone number\n  return person_data.unlocked;\n  /*||\n\t\t!(\n\t\t\t(contact_details.emails && contact_details.emails?.length > 0) ||\n\t\t\t(contact_details.phone && contact_details.phone?.length > 0)\n\t\t)*/\n};\n\n/**\n * get the locked or unlocked profiles in the array of person data\n * @param {Object[]} profiles -> array of Person data\n * @param {boolean?} [unlocked=true] -> Flag to check unlock or lock status, if true check unlock status of profile\n * @returns {Object[]} Locked/Unlocked profiles\n */\nexport const getLockedUnlockProfiles = (profiles = [], unlocked = true) => {\n  return profiles.filter((person_data) => {\n    if (unlocked) {\n      //If no data for emails and phones, let them download\n      return checkIfProfileUnLocked(person_data);\n    }\n    return checkIfProfileLocked(person_data);\n  });\n};\n","import { read, utils } from 'xlsx';\n\n/**\n * This function reads any Excel or CSV from user import\n * @param {File} file - The Excel/CSV file to be read.\n * @param {Function} callback - Function to call when file has been read\n *\n * Callback has the array of objects from the file\n */\nexport const readExcelCSV = (file, callback = () => {}) => {\n  if (file) {\n    const reader = new FileReader();\n    //If the readAsBinaryString function available in the browser\n    if (reader.readAsBinaryString) {\n      reader.onload = function (e) {\n        callback(GetTableFromExcel(e.target.result));\n      };\n      reader.readAsBinaryString(file);\n    } else {\n      //For IE Browser.\n      reader.onload = function (e) {\n        var data = '';\n        var bytes = new Uint8Array(e.target.result);\n        for (let i = 0; i < bytes.byteLength; i++) {\n          data += String.fromCharCode(bytes[i]);\n        }\n        callback(GetTableFromExcel(data));\n      };\n      reader.readAsArrayBuffer(file);\n    }\n  }\n};\n\nfunction GetTableFromExcel(data) {\n  //Read the Excel File data in binary\n  const workbook = read(data, {\n    type: 'binary',\n  });\n\n  //get the name of First Sheet.\n  const Sheet = workbook.SheetNames[0];\n\n  //Read all rows from First Sheet into an JSON array.\n  const excelRows = utils.sheet_to_row_object_array(workbook.Sheets[Sheet]);\n\n  return excelRows;\n}\n","// For Linkedin URLs\nexport const refactor_ln_urls = (original_url) => {\n  let url = original_url;\n  //we need to get only username\n  if (url.includes('linkedin.com/in/')) {\n    //Get the linkedin user name, get only username\n    const username = url\n      .replace(/(https?:\\/\\/(www.|de.)?linkedin.com\\/(mwlite\\/|m\\/)?in\\/\\/?)/g, '')\n      .split('/')?.[0];\n    //Create linkedin url using username\n    url = 'https://linkedin.com/in/' + username;\n  }\n  //If linkedin company, we have to add this because sometimes\n  //linkedin.com/company/username/about/ or /jobs or anything comes\n  //we need to get only company slug\n  if (url.includes('linkedin.com/company/')) {\n    //Get the linkedin company name, get only username\n    const username = url\n      .replace(/(https?:\\/\\/(www.|de.)?linkedin.com\\/(mwlite\\/|m\\/)?company\\/\\/?)/g, '')\n      .split('/')?.[0];\n    //Create linkedin url using username\n    url = 'https://linkedin.com/company/' + username;\n  }\n  return url;\n};\n","import { isBrowser } from './isBrowser';\n\n// Scroll behavior options.\nconst scrollOptions = { behavior: 'smooth', block: 'start', inline: 'nearest' };\n\n/**\n * Scrolls to the element with the specified 'id'.\n * @param {string} id - The id of the element to scroll to.\n */\nexport const scrollToById = (id) => {\n  // Define an interval that runs every 200 milliseconds.\n  const interval = setInterval(() => {\n    // Attempt to retrieve the element with the given 'id'.\n    const element = document.getElementById(id);\n    if (element) {\n      // If the element is found, clear the interval to stop checking.\n      clearInterval(interval);\n      // Scroll the element into view with the specified scroll behavior options.\n      element.scrollIntoView(scrollOptions);\n    }\n  }, 200);\n};\n\n/**\n * Scrolls to the element indicated by the 'href' attribute of the event target.\n * @param {Event} e - The event triggered when calling the function.\n */\nexport const scrollTo = (e) => {\n  // Check if the code is running in a browser environment.\n  if (isBrowser()) {\n    // Prevent the default action of the event (e.g., following a link).\n    e.preventDefault();\n    // Find the element based on the 'href' attribute of the event target.\n    let doc = document.querySelector(e.target.getAttribute('href'));\n    // Scroll the element into view with the specified scroll behavior options.\n    doc.scrollIntoView(scrollOptions);\n  }\n};\n","/**\n * This file contains the helper function for Table Component\n */\n\n/**\n * Compare a given string with a query to determine\n * if they match after trimming and case normalization.\n *\n * @param {string} string_to_match - The string to be compared.\n * @param {string} query - The query string for comparison.\n * @returns {boolean} True if the strings match, otherwise false.\n */\nconst filter_string = (string_to_match, query) => {\n  // If either the string or the query is empty, return false.\n  if (!string_to_match || !query) {\n    return false;\n  }\n  // Convert both the string and the query to lowercase after trimming\n  // and check if the query is included in the string.\n  if (string_to_match?.trim().toLowerCase().includes(query?.trim().toLowerCase())) {\n    return true; // If the query is found in the string, return true.\n  }\n  return false; // If no match is found, return false.\n};\n\n/**\n * Filter an array of values or objects based on a query value.\n *\n * @param {Array} array - The array to be filtered.\n * @param {string} val - The query value for filtering.\n * @returns {boolean} True if a matching value is found, otherwise false.\n */\nconst filter_array = (array = [], val) => {\n  // Check if any element in the array matches the given query value.\n  return array.some((a) => {\n    if (typeof a === 'object') {\n      // If the element is an object, check if any of its values match the query.\n      return Object.values(a).some((b) => filter_string(b, val));\n    }\n    // If the element is not an object, directly check if it matches the query.\n    return filter_string(a, val);\n  });\n};\n\n/**\n * Filter rows based on a given field name, values, and a query.\n *\n * @param {string} element - Field name for which we will check the data e.g. full_name.\n * @param {Object|Array|string} values - Values to be filtered.\n * @param {string} query - Query value for filtering.\n * @returns {boolean} True if a match is found, otherwise false.\n */\nexport const table_filter_rows = (element, values, query) => {\n  // If the element is missing, return false.\n  if (!element) {\n    return false;\n  }\n\n  //If field name has \".\", it means it's an key from the object\n  //Split it, e.g. user_data.name -> we have to match the query for name in user_data\n  const props = element.split('.');\n  let string_to_match;\n\n  //If values is object and values has the item field\n  if (typeof values === 'object' && values[element]) {\n    //Get the value of the field\n    string_to_match = values[element];\n  } else {\n    //else check if values is not array, it contains the first item from the props\n    //e.g. Check if values contains \"user_data\"\n    string_to_match =\n      typeof values === 'object' && !Array.isArray(values) ? values[props[0]] : values;\n  }\n  //If no value found to match, return false\n  if (!string_to_match) {\n    return false;\n  }\n  //Else start filtering\n  let filtered = false;\n\n  // If the string_to_match is an array, use filter_array function for filtering.\n  if (Array.isArray(string_to_match)) {\n    filtered = filter_array(string_to_match, query);\n  } else if (typeof string_to_match === 'object') {\n    // Understand by example\n    // props->[\"user_data\", \"name\"]\n    if (props.length > 1) {\n      let i = 0,\n        prop;\n      //now we have user_data in the obj\n      let obj = { ...values };\n      //TODO: Something is wrong here, i should start with 1, do check\n      for (; i < props.length - 1; i++) {\n        prop = props[i];\n        obj = obj[prop];\n      }\n      string_to_match = obj[props[i]];\n      // If nested property filtering matches, return true.\n      if (table_filter_rows('', string_to_match, query)) {\n        return true;\n      }\n    } else {\n      // Use filter_rows function on nested object values.\n      filtered = Object.values(string_to_match).some((a) => table_filter_rows('', a, query));\n    }\n  } else {\n    // Convert string_to_match to string and use filter_string function for filtering.\n    string_to_match += '';\n    filtered = filter_string(string_to_match, query);\n  }\n  return filtered;\n};\n","/**\n * This function converts an underscore-separated string into a normal text format with capitalized words.\n * @param {string} input The underscore-separated string to be converted (e.g., 'work_phone').\n * @returns {string} The converted string with spaces and capitalized words (e.g., 'Work Phone').\n */\n\nexport const underscoresNormalText = (input) => {\n  return input\n    .split('_') // Split the string into parts by underscores\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1)) // Capitalize each part\n    .join(' '); // Join the parts with spaces\n};\n","/**\n * This function takes in three parameters and returns a modified string.\n * @param {number} count The number of items to determine whether to add the postfix or not.\n * @param {string} text The main text to which the postfix may be appended.\n * @param {string} postfix The postfix string that will be added to the main text when the count is greater than 1. Default is \"s\".\n * @returns {string} The modified string with the postfix added based on the count value.\n */\nexport const updatePlural = (count, text, postfix = 's') => {\n  // Concatenate the main text and the postfix (if required) and return the result.\n  return text + (count > 1 ? postfix : '');\n};\n","import { useState, useEffect } from 'react';\n/**\n * This custom hook is used to track whether an element is currently visible on the screen\n * (in the viewport).\n * @param {React.MutableRefObject} ref A ref that points to the element to be observed\n * for visibility.\n * @returns {boolean} A boolean value representing whether the observed element is\n * currently visible on the screen.\n */\nexport const useOnScreen = (ref) => {\n  // State to keep track of whether the element is intersecting the viewport.\n  const [isIntersecting, setIntersecting] = useState(false);\n\n  useEffect(() => {\n    // Create a new IntersectionObserver instance.\n    const observer = new IntersectionObserver(([entry]) => {\n      // When the intersection state changes and the element becomes visible on the screen,\n      // update the isIntersecting state to true.\n      if (!isIntersecting) setIntersecting(entry.isIntersecting);\n    });\n\n    // Check if the ref is available and the element is not yet intersecting.\n    // If both conditions are true, start observing the element.\n    if (ref.current && !isIntersecting) {\n      observer.observe(ref.current);\n    } else {\n      // If the element is already intersecting or the ref is not available, stop observing the element.\n      observer.unobserve(ref.current);\n    }\n\n    // Clean up the observer when the component is unmounted or the state isIntersecting changes.\n    return () => {\n      observer.disconnect();\n    };\n  }, [isIntersecting, ref]);\n\n  // Return the boolean value indicating whether the element is currently visible on the screen.\n  return isIntersecting;\n};\n","import { useRouter } from 'next/router';\nimport { useMemo } from 'react';\n\n/**\n * This function Extract Search Params from URL\n * e.g. www.zintlr/id?=someId\n */\nexport const useQuery = () => {\n  const { query } = useRouter();\n  return useMemo(() => query, [query]);\n};\n","import { createContext, useContext } from 'react';\n\n/**\n * This code defines a context and a custom hook for the all pages.\n * provides a default value containing different user properties which can be used all over the website\n * Also contains the banner data to show\n */\nexport const UserContext = createContext({\n  details: undefined, //user details page\n  isLoggedIn: undefined, //to check if user is logged in or not\n  bannerData: undefined, //to store the banner data\n});\n\n// Creating a custom hook called useUser,\n// which will allow components to access the UserContext.\nexport const useUser = () => useContext(UserContext);\n","import { useState, useCallback, useEffect } from 'react';\nimport { isBrowser } from './isBrowser';\n\n/**\n * To get width and height of the screen, use this hook\n * This custom hook tracks the window size and updates the state with the current width and height.\n * @returns {Object} An object containing the width and height of the window.\n */\nexport const useWindowSize = () => {\n  // State to hold the current window size\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  // Handler to be called on window resize\n  const handleResize = useCallback(() => {\n    // Set window width/height to state\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n  }, [setWindowSize]);\n\n  useEffect(() => {\n    // Check if the code is running in a browser environment\n    if (isBrowser) {\n      // Add event listener for window resize events\n      window.addEventListener('resize', handleResize);\n\n      // Call the handler right away to update state with the initial window size\n      handleResize();\n\n      // Remove the event listener on cleanup to avoid memory leaks\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [handleResize]);\n\n  // Return the current window size\n  return windowSize;\n};\n"]}