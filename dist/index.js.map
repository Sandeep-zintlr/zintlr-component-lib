{"version":3,"sources":["../src/components/Toast.js","../src/components/Wrappers/ProfileWrapperCard.jsx","../src/helpers/base64ToFile.js","../src/helpers/capitalizeFirstLetter.js","../src/helpers/changeEmailFormat.js","../src/helpers/checkCreditSumLimits.js","../src/helpers/isBrowser.js","../src/helpers/click_chat_fun.js","../src/helpers/combineTeamAndInvitedata.js","../src/helpers/copy_to_clipboard.js","../src/helpers/create_img.js","../src/helpers/deepClone.js","../src/helpers/downloadCSV.js","../src/helpers/downloadExcel.js","../src/helpers/formatCreditLimits.js","../src/helpers/get_combined_location.js","../src/helpers/get_days_to_month_years.js","../src/helpers/get_domain_name.js","../src/helpers/get_formated_date.js","../src/helpers/get_formated_url.js","../src/helpers/get_invitation_formated_data.js","../src/helpers/get_next_billing_date.js","../src/helpers/get_remaining_days.js","../src/helpers/getCookies.js","../src/helpers/getLockedUnlockProfiles.js","../src/helpers/readExcelCSV.js","../src/helpers/refactor_ln_urls.js","../src/helpers/scrollTo.js","../src/helpers/table-helper.js","../src/helpers/underscoresToNormal.js","../src/helpers/updatePlural.js","../src/helpers/useOnScreen.js","../src/helpers/useQuery.js","../src/helpers/userStateUpdate.js","../src/helpers/useWindowSize.js","../src/helpers/data_formatter.js","../src/handlers/_common.handlers.js","../src/handlers/request-handler.js","../src/handlers/_server_request.handler.js"],"names":["ToastWrapper","position","expand","richColors","closeButton","props","React","Toaster","ProfileWrapperCard","children","className","id","detectMimeType","b64","signatures","s","i","fromBase64ToFile","capitalizeFirstLetter","str","changeEmailFormat","data_emails","emails","a","limitConfigs","checkCreditSumLimits","_ignored","updatedRows","sums","isNonEditable","name","acc","limits","key","value","exceeded","details","label","toast","isBrowser","click_chat_fun","elements","combineTeamAndInviteData","allocated_limits","unallocated_limits","teamData","inviteData","formattedData","member","invite","restructureData","tableData","team_limits","invite_limits","user_id_hash","data","copy_to_clipboard","text","type","textArea","success","fnBrowserDetect","userAgent","browserName","logo_img","get_svg","initials","imageColor","svg","y_margin","getInitials","_name","english","lname","getInitialsSvg","bgColor","createImg","initials_img","encodedData","error","deepClone","obj","downloadCSV","filename","array","csv","row","csvArray","downloadExcel","wb","utils","index","safeKey","binaryWS","final_filename","writeFile","keyMapping","formatCreditLimits","creditsTeam","get_combined_location","location","get_days_to_month_years","days","moment","get_domain_name","url","get_formated_date","date","get_formated_url","formatTeamData","_a","_b","_c","item","get_next_billing_date","get_remaining_days","date_to_differ","moment_date","getCookieValue","cookies","cookie","checkIfProfileLocked","person_data","checkIfProfileUnLocked","getLockedUnlockProfiles","profiles","unlocked","readExcelCSV","file","callback","reader","e","GetTableFromExcel","bytes","workbook","read","Sheet","refactor_ln_urls","original_url","scrollOptions","scrollToById","interval","element","scrollTo","filter_string","string_to_match","query","filter_array","val","b","table_filter_rows","values","filtered","prop","underscoresNormalText","input","word","updatePlural","count","postfix","useOnScreen","ref","isIntersecting","setIntersecting","useState","useEffect","observer","entry","useQuery","useRouter","useMemo","UserContext","createContext","useUser","useContext","useWindowSize","windowSize","setWindowSize","handleResize","useCallback","formatPhoneNumbers","subtype","ph","formatEmails","email","formatContactDetails","from","verify_and_decrypt_jwt","token","secret","T","getIP","request","ip","forwardedFor","ErrorObject","isMethodProper","method","requestAbortCode","request_caller","endpoint","successToast","errorToast","headers","controller","forceValidationSchema","skipValidation","yup_validators","domain","urls","logFn","resolve","reject","responseObj","validationSchema","validations","Y","req_obj","axios","res","_d","_e","err","serverRequestHandler","req","isAuthRequired","successCallback","errorCallback","isSourceRequired","platformSource","options","isLoggedIn","errorObj","access_token","ipAddress","result"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport { Toaster, toast } from 'sonner';\n\n// Toast component that provides the Toaster container\nexport const ToastWrapper = ({\n  position = 'bottom-right',\n  expand = false,\n  richColors = true,\n  closeButton = true,\n  ...props\n}) => {\n  return (\n    <Toaster\n      position={position}\n      expand={expand}\n      richColors={richColors}\n      closeButton={closeButton}\n      {...props}\n    />\n  );\n};\n\n// Export toast functions for direct use\nexport { toast };\n","import React from 'react';\n\nexport const ProfileWrapperCard = ({ children, className = '', id = '' }) => {\n  return (\n    <div id={id} className={`border w-full h-fit bg-white rounded-lg`}>\n      <div className={`p-3 sm:p-7 mb-2 ${className}`}>{children}</div>\n    </div>\n  );\n};\n","/**\n * Detects the MIME type of a given base64 encoded string.\n * @param {string} b64 - The base64 encoded string to detect the MIME type for.\n * @returns {string|undefined} - The detected MIME type, or undefined if no match is found.\n */\nfunction detectMimeType(b64) {\n  //Contains base64 signatures and their corresponding MIME types\n  const signatures = {\n    JVBERi0: 'application/pdf',\n    R0lGODdh: 'image/gif',\n    R0lGODlh: 'image/gif',\n    iVBORw0KGgo: 'image/png',\n    AAAA: 'video/mp4',\n    '/': 'image/jpg',\n    i: 'image/png',\n    R: 'image/gif',\n    U: 'image/webp',\n    J: 'application/pdf',\n    A: 'video/mp4',\n    UEsDBBQA: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;',\n  };\n\n  for (const s in signatures) {\n    const i = b64.indexOf(s);\n    // Checking if the signature is found at the beginning of the base64 string\n    if (i === 0 || i === 1) {\n      // Returning the corresponding MIME type\n      return signatures[s];\n    }\n  }\n}\n\n/**\n * Converts a base64 encoded string to a data URL with the appropriate MIME type.\n * @param {string} s - The base64 encoded string to convert.\n * @returns {string|undefined} - The data URL representing the input with detected MIME type, or undefined if detection fails.\n */\nexport const fromBase64ToFile = (s) => {\n  // Constructing the data URL using the detected MIME type and the input base64 string\n  const final = 'data:' + detectMimeType(s) + ';base64,' + s;\n  return final;\n};\n","/**\n * This function capitalizes the initial letter of a given string.\n * @param {string} str The input string to be capitalized.\n * @returns {string} The input string with the initial letter capitalized.\n */\nexport const capitalizeFirstLetter = (str) => {\n  // Get the first character of the input string and convert it to uppercase.\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n","/**\n * This function filters and processes an array of email objects, calculating their accuracy based on certain properties.\n * @param {Object[]} data_emails An array of email objects or undefined.\n * @returns An array of processed email objects with accuracy calculated.\n */\nexport const changeEmailFormat = (data_emails) => {\n  let emails;\n  // Check if data_emails is not an array, and return an empty array.\n  if (!Array.isArray(data_emails)) {\n    return [];\n  }\n  // Check if data_emails is truthy (not undefined or null).\n  if (data_emails) {\n    //TODO: No need of this, backend is doing the validations and giving accuracy\n    /*emails = data_emails?.map((email) => {\n\t\t\t\t//Create a copy of the email object using spread operator.\n\t\t\t\tlet local_email = { ...(email || {}) };\n\t\t\t\tlet prob = 0;\n\t\t\t\t//Check if the 'validation' property exists in the email object. and it is true\n\t\t\t\t//If validation is true, email is validated, 60% email is accurate\n\t\t\t\tif (local_email?.validation) {\n\t\t\t\t\tprob = 0.6;\n\t\t\t\t}\n\t\t\t\t//Check if the 'smtp' property exists in the email object.\n\t\t\t\t//If smtp is true, it is 30% accurate,\n\t\t\t\t//If email is both smtp and validation, it is 90% accurate\n\t\t\t\tif (local_email?.smtp) {\n\t\t\t\t\tprob += 0.3;\n\t\t\t\t}\n\t\t\t\t//Add only if email has probability greater than 0\n\t\t\t\tif (prob != 0) {\n\t\t\t\t\tlocal_email.accuracy = prob;\n\t\t\t\t\treturn local_email;\n\t\t\t\t}\n\t\t\t\t//else return null\n\t\t\t\treturn null;\n\t\t\t});.*/\n    // Filter out any null elements from the 'emails' array.\n    emails = data_emails?.filter((a) => a);\n  }\n  // Return the processed array of email objects.\n  return emails;\n};\n","import { toast } from 'sonner';\n\n// Single config list for keys and labels\nconst limitConfigs = [\n  { key: 'no_contact_lists', label: 'No Contact Lists' },\n  { key: 'download_export', label: 'Download & Export' },\n  { key: 'tags_types', label: 'Tags & Types' },\n  { key: 'credit', label: 'Credits' },\n  { key: 'magic_search', label: 'Domain Search' },\n  { key: 'personality_intel', label: 'Personality Intel' },\n  { key: 'zbizlocator', label: 'Local Search' },\n];\n\n/**\n * Ensure each limit’s total allocation (excluding non‑editable/unallocated rows)\n * does not exceed 100%.\n *\n * @param {Array} _ignored - original data (unused)\n * @param {Array} updatedRows - array of row objects with updated .limits\n * @returns {Boolean} true if all sums ≤ 100, false (and toasts) otherwise\n */\nexport const checkCreditSumLimits = (_ignored, updatedRows) => {\n  // Sum each key across filtered rows\n  const sums = updatedRows\n    .filter(({ isNonEditable, name }) => !isNonEditable && name !== 'Unallocated credits')\n    .reduce((acc, { limits }) => {\n      limitConfigs.forEach(({ key }) => {\n        const value = Number(limits[key]) || 0;\n        acc[key] = (acc[key] || 0) + value;\n      });\n      return acc;\n    }, {});\n\n  // Identify keys exceeding 100%\n  const exceeded = limitConfigs.filter(({ key }) => (sums[key] || 0) > 100);\n  if (exceeded.length) {\n    const details = exceeded.map(({ key, label }) => `${label} (${sums[key]}%)`);\n    toast.error(`The following limits exceed 100%: ${details.join(', ')}.`);\n    return false;\n  }\n\n  return true;\n};\n","/**\n * Checks if the code is running in a browser environment.\n * @returns {boolean} Returns true if the code is running in a browser, otherwise false.\n */\nexport const isBrowser = () => {\n  // Check if the 'window' object is defined, indicating that the code is running in a browser environment.\n  return typeof window !== 'undefined';\n};\n","import { isBrowser } from './isBrowser';\n\nexport const click_chat_fun = () => {\n  if (isBrowser()) {\n    var elements = document.getElementsByClassName('cc-157aw cc-1kgzy');\n    if (elements && elements.length > 0) {\n      elements[0].click();\n    }\n  }\n};\n","/**\n  This function combines the team and invite data\n * @param {Array} data - The data to combine\n * @param {Object} options - The options to use\n * @returns {Array} - The combined data\n */\nexport const combineTeamAndInviteData = (allocated_limits, unallocated_limits) => {\n  if (\n    !allocated_limits ||\n    !unallocated_limits ||\n    Object.keys(allocated_limits).length === 0 ||\n    Object.keys(unallocated_limits).length === 0\n  ) {\n    return [];\n  }\n\n  const teamData = allocated_limits['team_limits'] || [];\n  const inviteData = allocated_limits['invite_limits'] || [];\n\n  const formattedData = [\n    ...teamData.map((member) => ({ ...member, isInvited: false })),\n    ...inviteData.map((invite) => ({ ...invite, isInvited: true })),\n  ];\n\n  formattedData.push({\n    ...unallocated_limits,\n    name: 'Unallocated credits',\n    isNonEditable: true,\n  });\n\n  return formattedData;\n};\n\n/**\n This function restructures the data\n * @param {Array} tableData - The data to be restructured\n * @returns {Object} - The restructured data\n */\nexport const restructureData = (tableData) => {\n  const team_limits = {};\n  const invite_limits = {};\n  // Process each entry in tableData\n  Object.entries(tableData).forEach(([user_id_hash, data]) => {\n    if (data.isInvited) {\n      // For invited users, use email as key and pass all data\n      invite_limits[data.email] = { ...data };\n      delete invite_limits[data.email].isInvited; // Remove the isInvited flag\n      delete invite_limits[data.email].email; // Remove email since it's now the key\n    } else {\n      // For team members, use user_id_hash as key and pass all data\n      team_limits[user_id_hash] = { ...data };\n      delete team_limits[user_id_hash].isInvited; // Remove the isInvited flag\n    }\n  });\n\n  return {\n    credit_limits: {\n      team_limits,\n      invite_limits,\n    },\n  };\n};\n","import { toast } from 'sonner';\nimport { isBrowser } from './isBrowser';\n\n/**\n * This function copies the given text to the clipboard\n * and displays a success toast message if executed in a browser environment.\n * @param {string} text The text to be copied to the clipboard.\n * @param {string} type The type of data being copied (e.g., \"Email\"). Default value is \"Email\".\n * @returns {boolean} Returns true if copying was successful, false otherwise\n */\nexport function copy_to_clipboard(text, type = 'Email') {\n  if (!isBrowser()) return false;\n\n  try {\n    // Modern browsers\n    if (navigator.clipboard && window.isSecureContext) {\n      navigator.clipboard.writeText(text);\n      toast.success(`${type} copied to clipboard`);\n      return true;\n    }\n\n    // Fallback for older browsers\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    textArea.style.position = 'fixed';\n    textArea.style.left = '-999999px';\n    textArea.style.top = '-999999px';\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n\n    const success = document.execCommand('copy');\n    textArea.remove();\n\n    if (success) {\n      toast.success(`${type} copied to clipboard`);\n      return true;\n    } else {\n      toast.error('Failed to copy to clipboard');\n      return false;\n    }\n  } catch (error) {\n    toast.error('Failed to copy to clipboard');\n    return false;\n  }\n}\n","import { isBrowser } from './isBrowser';\n\nexport const imageColors = {\n  faint_blue: {\n    bgColor: '#EFEFFF',\n    textColor: 'black',\n  },\n};\n/**\n * This function will the user's browser using userAgent\n * @returns {string} Browser name\n */\nfunction fnBrowserDetect() {\n  let userAgent = navigator.userAgent;\n  let browserName;\n\n  if (userAgent.match(/chrome|chromium|crios/i)) {\n    browserName = 'chrome';\n  } else if (userAgent.match(/firefox|fxios/i)) {\n    browserName = 'firefox';\n  } else if (userAgent.match(/safari/i)) {\n    browserName = 'safari';\n  } else if (userAgent.match(/opr\\//i)) {\n    browserName = 'opera';\n  } else if (userAgent.match(/edg/i)) {\n    browserName = 'edge';\n  } else {\n    browserName = 'No browser detection';\n  }\n\n  return browserName;\n}\n\n/**\n * SVG image representing a default logo with placeholders for initials.\n */\nconst logo_img = `\n<g clip-path=\"url(#0cf21cfe8e)\" transform=\"translate(5, 20) scale(0.5)\">\n<path fill=\"#ffffff\" d=\"M 238.238281 215.71875 C 255.039062 215.71875 270.484375 215.71875 285.882812 215.570312 C 286.886719 215.328125 287.800781 214.894531 288.625 214.265625 C 289.445312 213.636719 290.101562 212.863281 290.59375 211.953125 C 299.421875 196.890625 308.148438 181.828125 316.625 166.765625 C 317.03125 165.753906 317.234375 164.703125 317.234375 163.613281 C 317.234375 162.523438 317.03125 161.472656 316.625 160.464844 C 315.144531 157.265625 313.421875 154.203125 311.457031 151.273438 C 310.230469 153.007812 309.175781 154.238281 308.375 155.617188 C 300.523438 169.425781 292.5 183.234375 284.980469 197.140625 C 282.472656 201.761719 279.585938 203.820312 274.347656 203.191406 C 270.242188 202.960938 266.140625 202.960938 262.035156 203.191406 C 278.382812 174.09375 294.382812 145.828125 310.957031 116.703125 C 319.984375 132.296875 328.507812 146.832031 336.757812 161.59375 C 337.011719 162.59375 337.054688 163.601562 336.882812 164.621094 C 336.714844 165.640625 336.347656 166.578125 335.78125 167.441406 C 324.261719 187.675781 312.621094 207.84375 300.851562 227.945312 C 300.253906 229.003906 299.464844 229.890625 298.484375 230.609375 C 297.503906 231.328125 296.421875 231.8125 295.234375 232.0625 C 266.898438 232.339844 238.566406 232.265625 208.976562 232.265625 C 213.664062 224.003906 217.828125 216.523438 222.117188 209.117188 C 241.046875 176.304688 259.804688 143.316406 279.136719 110.855469 C 282.773438 104.730469 283.425781 100.109375 278.910156 94.738281 C 277.597656 92.972656 276.402344 91.132812 275.324219 89.214844 L 183.777344 248.082031 L 289.265625 248.082031 C 283.675781 257.769531 278.785156 266.558594 273.644531 275.269531 C 269.910156 281.644531 267.402344 290.332031 261.808594 293.546875 C 256.21875 296.757812 247.441406 294.652344 240.070312 294.675781 L 101.679688 294.675781 C 148.996094 212.730469 195.710938 131.792969 243.027344 49.773438 L 131.972656 49.773438 C 120.035156 49.773438 120.035156 49.773438 115.171875 61.75 L 219.960938 61.75 L 98.722656 272.15625 C 89.71875 256.515625 81.167969 242.03125 72.96875 227.09375 C 72.609375 225.941406 72.496094 224.765625 72.636719 223.566406 C 72.777344 222.367188 73.15625 221.25 73.773438 220.214844 C 93.011719 186.574219 112.347656 153 131.769531 119.492188 C 133.125 117.132812 134.277344 114.695312 136.109375 111.507812 C 119.632812 111.507812 104.214844 111.507812 88.792969 111.632812 C 87.761719 111.773438 86.804688 112.121094 85.929688 112.683594 C 85.050781 113.246094 84.335938 113.96875 83.777344 114.847656 C 74.851562 130.011719 66.058594 145.273438 57.398438 160.640625 C 57.019531 161.558594 56.828125 162.519531 56.828125 163.511719 C 56.828125 164.507812 57.019531 165.46875 57.398438 166.386719 C 59.101562 169.855469 61.015625 173.203125 63.140625 176.429688 C 66 171.410156 68.480469 167.390625 70.863281 163.175781 C 77.234375 152.027344 83.800781 140.980469 89.769531 129.609375 C 89.945312 129.164062 90.15625 128.738281 90.40625 128.328125 C 90.65625 127.917969 90.9375 127.535156 91.25 127.175781 C 91.566406 126.816406 91.910156 126.484375 92.28125 126.183594 C 92.652344 125.882812 93.046875 125.617188 93.464844 125.382812 C 93.882812 125.148438 94.316406 124.953125 94.765625 124.796875 C 95.21875 124.636719 95.679688 124.519531 96.152344 124.441406 C 96.621094 124.363281 97.097656 124.324219 97.574219 124.328125 C 98.054688 124.332031 98.527344 124.378906 98.996094 124.460938 C 103.035156 124.789062 107.121094 124.460938 112.210938 124.460938 C 95.613281 153.359375 79.742188 181.527344 63.242188 210.597656 C 55.71875 197.441406 48.972656 184.816406 41.226562 172.941406 C 36.8125 166.210938 36.886719 161.34375 41.226562 154.464844 C 52.332031 136.539062 62.539062 118.035156 73.046875 99.660156 C 73.40625 98.839844 73.882812 98.101562 74.476562 97.433594 C 75.070312 96.765625 75.75 96.207031 76.519531 95.757812 C 77.292969 95.308594 78.113281 94.984375 78.984375 94.792969 C 79.855469 94.601562 80.734375 94.550781 81.621094 94.636719 C 109.054688 94.886719 136.511719 94.761719 165.296875 94.761719 C 163.617188 97.953125 162.4375 100.363281 161.109375 102.671875 C 139.792969 139.625 118.882812 176.832031 96.890625 213.359375 C 91.148438 222.875 91.199219 229.726562 99.398438 237.613281 C 129.464844 185.015625 159.703125 132.519531 190.496094 79.070312 L 85.582031 79.070312 C 86.636719 76.761719 87.210938 75.230469 88.089844 73.824219 C 95.210938 61.273438 102.28125 48.84375 109.703125 36.542969 C 110.363281 35.5625 111.191406 34.761719 112.191406 34.140625 C 113.195312 33.519531 114.277344 33.132812 115.445312 32.980469 C 166.902344 32.792969 218.355469 32.753906 269.808594 32.851562 C 270.554688 32.957031 271.289062 33.109375 272.015625 33.304688 C 225.101562 114.671875 178.359375 195.710938 130.96875 277.753906 L 242.527344 277.753906 C 254.238281 277.753906 254.636719 277.453125 259.078125 265.203125 L 154.4375 265.203125 L 275.148438 55.625 C 276.265625 57.027344 277.3125 58.484375 278.285156 59.992188 C 285.605469 72.542969 292.753906 85.324219 300.273438 97.824219 C 300.796875 98.542969 301.195312 99.320312 301.472656 100.164062 C 301.746094 101.007812 301.882812 101.871094 301.882812 102.757812 C 301.882812 103.644531 301.746094 104.511719 301.472656 105.355469 C 301.195312 106.195312 300.796875 106.976562 300.273438 107.691406 C 280.566406 141.484375 260.972656 175.402344 241.5 209.445312 C 240.546875 211.101562 239.742188 212.808594 238.238281 215.71875 Z M 238.238281 215.71875 \" fill-opacity=\"1\" fill-rule=\"nonzero\" />\n</g>`;\n\n/**\n * Function to generate the SVG image based on initials.\n * @param {string} initials - The initials to be displayed in the SVG image.\n * @param {string?} imageColor - If null, default gradient black will be used as background\n * @returns {SVGElement} - The SVG image element with provided initials or the custom logo if no initials are provided.\n */\nconst get_svg = (initials, imageColor = null) => {\n  let xmlns = 'http://www.w3.org/2000/svg';\n  let svg = document.createElementNS(xmlns, 'svg');\n  svg.setAttributeNS(null, 'width', '200');\n  svg.setAttributeNS(null, 'height', '200');\n  svg.setAttributeNS(null, 'fill', 'none');\n  svg.setAttribute(\n    'style',\n    `${\n      imageColor\n        ? `background:${imageColor?.bgColor}`\n        : 'background-image: linear-gradient(180deg, #112634 0%, #000000 100%)'\n    };\n\t\tbackground-repeat:no-repeat !important;\n\t\tdisplay: flex;\n\t\talign-items:center;`\n  );\n  if (initials) {\n    let y_margin = '50%';\n    //In firefox, the margin issue is coming, to solve that\n    if (isBrowser() && fnBrowserDetect() === 'firefox') {\n      y_margin = '55%';\n    }\n    svg.innerHTML = `\n\t\t\t<text x=\"50%\" y=${y_margin} fill=\"${\n        imageColor?.textColor ?? 'white'\n      }\" style=\"font-weight: 700; text-transform: uppercase; font-family: 'Roboto', sans-serif;\"\n\t\t\tdominant-baseline=\"middle\"  text-anchor=\"middle\" alignment-baseline=\"central\" font-size=\"90\">\n\t\t\t\t${initials}\n\t\t\t</text>\n\t\t`;\n  } else {\n    svg.innerHTML = logo_img;\n  }\n  return svg;\n};\n\n/**\n * Function to extract initials from a name.\n * @param {string} name - The name from which initials will be extracted.\n * @returns {string} - The extracted initials in uppercase, or an empty string if the input name contains non-alphanumeric characters.\n */\nexport const getInitials = (_name) => {\n  let initials;\n  //Check if the name is in english\n  const english = /^[A-Za-z0-9 ]*$/;\n  //Replace the non alphanumeric characters in the name\n  _name = _name ? _name.replace(/[^a-zA-Z0-9 ]/g, '') : '';\n  if (english.test(_name)) {\n    let name = _name.trim().toUpperCase();\n    let lname = name.split(' ');\n    lname = lname.map((a) => a.trim());\n    initials =\n      lname[0].charAt(0) + '' + (lname.length > 1 ? lname[lname.length - 1].charAt(0) : '');\n    initials = String(initials).toUpperCase();\n  }\n  return initials;\n};\n\n/**\n * Function to create an SVG image element with initials based on a given name.\n * @param {string} name - The name from which initials will be extracted to generate the SVG image.\n * @param {string?} bgColor - The color of the background of the image. If null, default black color will be used\n * @returns {SVGElement} - The SVG image element with provided initials or the custom logo if no initials are provided.\n */\nexport const getInitialsSvg = (_name, bgColor = null) => {\n  const initials = getInitials(_name);\n  if (initials) return get_svg(initials, bgColor);\n  return get_svg();\n};\n\n/**\n * Component to create and return an SVG image based on provided initials or a default logo.\n * @param {string} name - The name from which initials will be extracted to generate the image.\n * @param {string?} bgColor - The color of the background of the image. If null, default black color will be used\n * @returns {string} - The base64-encoded SVG image data or an empty string if no name is provided or it's not a browser environment.\n */\nexport const createImg = (name, bgColor = null) => {\n  try {\n    // Check if we're in a browser environment and have required APIs\n    if (typeof window === 'undefined' || !window.btoa || !window.XMLSerializer) {\n      console.warn('createImg requires browser environment with btoa and XMLSerializer support');\n      return '';\n    }\n\n    // Check if a name is provided and the code is running in a browser environment.\n    if (name && isBrowser()) {\n      // Generate an SVG image element with initials based on the provided name.\n      let initials_img = getInitialsSvg(name, bgColor);\n      // Serialize the SVG element to a string.\n      var s = new XMLSerializer().serializeToString(initials_img);\n      // Encode the SVG string to base64.\n      var encodedData = window.btoa(s);\n      // Return the base64-encoded SVG image data.\n      return 'data:image/svg+xml;base64,' + encodedData;\n    }\n  } catch (error) {\n    console.warn('Error creating image:', error);\n  }\n  // Return an empty string if no name is provided or it's not a browser environment.\n  return '';\n};\n","/**\n * Deep‑clone any JSON‑serializable value.\n * Falls back to JSON.parse/JSON.stringify if structuredClone isn't available.\n */\nexport const deepClone = (obj) => {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n};\n","import { toast } from 'sonner';\n\n/**\n * Downloads an array of data as a CSV file and displays a success toast.\n * @param {string} filename - The desired name for the downloaded file.\n * @param {Array} array - An array of objects containing the data to be downloaded.\n * @returns {void}\n */\nexport const downloadCSV = (filename, array) => {\n  // Convert each object in the array to an array of its values\n  const csv = array.map((row) => Object.values(row));\n\n  // Insert the keys of the first object as the header row at the beginning of the CSV\n  csv.unshift(Object.keys(array[0]));\n\n  // Join the CSV array using line breaks\n  const csvArray = csv.join('\\r\\n');\n\n  // Create a new anchor element to trigger the download\n  const a = document.createElement('a');\n\n  // Set the href attribute to encode the CSV data\n  a.href = 'data:attachment/csv,' + encodeURIComponent(csvArray);\n\n  // Open the download in a new tab/window\n  a.target = '_blank';\n\n  // Set the suggested filename for the downloaded file\n  a.download = filename;\n\n  // Simulate a click on the anchor element to trigger the download\n  a.click();\n\n  // Display a toast indicating successful file download\n  toast.success('Downloaded file successfully');\n};\n","import { toast } from 'sonner';\nimport { utils, writeFile } from 'xlsx';\n\n/**\n * Downloads data as an Excel (.xlsx) file.\n *\n * @param {string} filename - The name of the output Excel file.\n * @param {object} data - Data to be written into the Excel file.\n * @returns {void}\n */\nexport const downloadExcel = (filename, data) => {\n  // Check if there is any data to write to the Excel file\n  if (Object.keys(data).length === 0) {\n    return;\n  }\n  // Create a new Workbook\n  const wb = utils.book_new();\n  // Name your sheet\n  Object.keys(data).map((key, index) => {\n    // Ensure the sheet name does not exceed 31 characters\n    const safeKey = key.length > 31 ? key.slice(0, 28) + `_${index}` : key;\n\n    const binaryWS = utils.json_to_sheet(data[key]); // Convert data to a worksheet\n    utils.book_append_sheet(wb, binaryWS, safeKey); // Append the worksheet to the workbook\n  });\n  // Export your excel\n  let final_filename = filename.trim().replace('.xlsx', '') + '.xlsx';\n  // Write the workbook to a file with the final filename\n  writeFile(wb, final_filename);\n  // Display a success toast message\n  toast.success('Downloaded file successfully');\n};\n","const keyMapping = {\n  credit: 'Lookup/Ids',\n  magic_search: 'Domain search',\n  personality_intel: 'Personality',\n  zbizlocator: 'Local search',\n};\n\n// format the credits response\nexport const formatCreditLimits = (creditsTeam) => {\n  if (!creditsTeam) return [];\n  return Object.entries(creditsTeam).map(([key, value]) => ({\n    name: keyMapping[key] || key,\n    ...value,\n  }));\n};\n","/**\n * This function takes a location object as input and combines its city, state, and country properties into a single string.\n * @param {Object} location An object containing location details.\n * @param {string} location.city The city name (optional).\n * @param {string} location.state The state or province name (optional).\n * @param {string} location.country The country name (optional).\n * @returns {string} The combined location string.\n */\nexport const get_combined_location = (location) => {\n  // Create an array containing the city, state, and country properties from the location object.\n  const location_array = [location?.city, location?.state, location?.country]; //, location?.zipcode\n  // Use the filter method to remove any undefined or null elements from the array, leaving only the non-empty values.\n  // Then, join the non-empty values with a comma and space to create the final combined location string.\n  return location_array.filter((a) => a).join(', ');\n};\n","import moment from 'moment';\n\n/**\n * Return the no of days in year or months or days\n * @param {days} -> the number of days\n * @returns {date} -> return in 2years/ 4 months/ 5 days format.\n */\nexport const get_days_to_month_years = (days) => {\n  return [\n    moment.duration(days, 'days').years() &&\n      `${moment.duration(days, 'days').years()} year${\n        moment.duration(days, 'days').years() > 1 ? 's' : ''\n      }`,\n    moment.duration(days, 'days').months() &&\n      `${moment.duration(days, 'days').months()} month${\n        moment.duration(days, 'days').months() > 1 ? 's' : ''\n      }`,\n    (moment.duration(days, 'days').days() > 0 ||\n      (moment.duration(days, 'days').years() === 0 &&\n        moment.duration(days, 'days').months() === 0)) &&\n      `${moment.duration(days, 'days').days()} day${\n        moment.duration(days, 'days').days() > 1 ? 's' : ''\n      }`,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n};\n","/**\n * This function extracts the domain name from a given URL.\n * @param {string} url The input URL from which the domain name will be extracted.\n * @returns {string} The extracted domain name.\n */\nexport const get_domain_name = (url) => {\n  // Check if the URL is provided. If not, return an empty string.\n  if (!url) {\n    return '';\n  }\n\n  // Create a new URL object from the input URL.\n  const url_obj = new URL(url);\n\n  // Return the hostname of the URL, which represents the domain name.\n  return url_obj.hostname;\n};\n","/**\n * Return the date in DD MMM YYYY format\n * @param {Date} date -> Date to format\n * @returns {Date}\n */\nexport const get_formated_date = (date) => {\n  return new Date(date).toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric',\n  });\n};\n","/**\n * This function takes a URL and formats it to ensure it starts with \"https://\". If the URL is not provided or does not start with \"http\", it will be prefixed with \"https://\" before returning.\n * @param {string} url The URL that needs to be formatted.\n * @returns {string} The formatted URL starting with \"https://\".\n */\nexport const get_formated_url = (url) => {\n  // Check if the URL is not provided (empty or null)\n  if (!url) {\n    // If URL is not provided, return an empty string\n    return '';\n  }\n  // Check if the URL does not start with \"http\"\n  if (url.substr(0, 4) !== 'http') {\n    // If URL does not start with \"http\", prefix it with \"https://\" and return the updated URL\n    return 'https://' + url;\n  }\n  // If URL starts with \"http\", return the URL as it is\n  return url;\n};\n","/**\n * Formats raw team data into a structured format suitable for use within the application.\n * This function takes an array of team invitation data and maps it into a structured array of objects,\n * each containing user data, role, invitation status, creation date, and team invitation ID.\n *\n * Input validation is performed to ensure the data is an array.\n *\n * @param {Array} data - An array of objects representing raw team invitation data.\n * @returns {Array} - An array of formatted objects containing team member details.\n * @throws {Error} - Throws an error if the input is not an array.\n * TODO: Update the Response of Invitation Data from Backend so that we dont want to format data again and again.\n */\n\nexport const formatTeamData = (data) => {\n  if (!Array.isArray(data)) {\n    return [];\n  }\n\n  let formattedData = [];\n\n  if (data[0]?.invitation) {\n    const item = data[0]?.invitation;\n    formattedData.push({\n      user_data: {\n        email: item.send_to_email_id,\n      },\n      role: item.role,\n      invitation_status: item.invitation_status,\n      create_datetime: item.invitation_status === 2 ? item.create_datetime : null,\n      team_invitations_id: item.team_invitations_id,\n    });\n  }\n\n  return data[0]?.invitation\n    ? formattedData\n    : data.map((item) => ({\n        user_data: {\n          email: item.send_to_email_id,\n        },\n        role: item.role,\n        invitation_status: item.invitation_status,\n        create_datetime: item.invitation_status === 2 ? item.create_datetime : null,\n        team_invitations_id: item.team_invitations_id,\n      }));\n};\n","import moment from 'moment';\nimport { get_formated_date } from './get_formated_date';\n/**\n * Return the one day next to the date in DD MMM YYYY format\n * @param {Date} date -> fomrats the date and then\n * @returns {Date} -> adding one day to it.\n */\nexport const get_next_billing_date = (date) => {\n  return get_formated_date(moment(date).add(1, 'days').toISOString());\n};\n","import moment from 'moment';\n\n/**\n * Calculates the number of remaining days between the provided date and a reference date.\n * @param {Date} date_to_differ The date to calculate remaining days for.\n * @param {Date?} date Optional. The reference date. Defaults to the current date.\n * @returns {number} The number of remaining days.\n */\nexport const get_remaining_days = (date_to_differ, date = new Date()) => {\n  // Convert the reference date to a Moment.js object.\n  let moment_date = moment(date);\n\n  // Convert the target date to a Moment.js object for comparison.\n  const expiry_date = moment(date_to_differ);\n\n  // Calculate the difference in days between the reference and target dates.\n  return expiry_date.diff(moment_date, 'days');\n};\n","/**\n * This function is used to retrieve the value of a specific cookie by its name from the document's cookies.\n * @param {string} name The name of the cookie whose value is to be retrieved.\n * @returns {string} The value of the specified cookie if found, otherwise an empty string.\n */\nexport const getCookieValue = (name) => {\n  // Splitting the cookies string into an array of individual cookie strings.\n  const cookies = document.cookie.split('; ');\n\n  // Looping through each cookie to find the one with the specified name.\n  for (let i = 0; i < cookies.length; i++) {\n    // Splitting the current cookie string into its name and value.\n    const cookie = cookies[i].split('=');\n\n    // Checking if the name of the current cookie matches the specified name.\n    if (cookie[0] === name) {\n      // If the name matches, return the value of the cookie.\n      return cookie[1];\n    }\n  }\n  // If the specified cookie name is not found, return an empty string.\n  return '';\n};\n","// import changeEmailFormat from \"./changeEmailFormat\";\n\n/**\n * Get person's contact details\n * @param {Object} person_data -> Person data\n * @returns {Object}\n */\n// const get_contact_details = (person_data) => {\n// \t//get phone number and formatted emails\n// \treturn {\n// \t\tphone: person_data?.phone,\n// \t\temails: changeEmailFormat(person_data?.emails),\n// \t};\n// };\n\n/**\n * Check if person is locked\n * @param {Object} person_data -> Person data\n * @returns {boolean}\n */\nexport const checkIfProfileLocked = (person_data) => {\n  //get the contact details of person\n  // const contact_details = get_contact_details(person_data);\n  //Check if person is locked and has at least one email or phone number\n  return !person_data.unlocked;\n  /*&&\n\t\t((contact_details.emails && contact_details.emails?.length > 0) ||\n\t\t\t(contact_details.phone && contact_details.phone?.length > 0))*/\n};\n\n/**\n * Check if person is unlocked\n * @param {Object} person_data -> Person data\n * @returns {boolean}\n */\nexport const checkIfProfileUnLocked = (person_data) => {\n  // const contact_details = get_contact_details(person_data);\n  //Check if person is unlocked or does not have any email or phone number\n  return person_data.unlocked;\n  /*||\n\t\t!(\n\t\t\t(contact_details.emails && contact_details.emails?.length > 0) ||\n\t\t\t(contact_details.phone && contact_details.phone?.length > 0)\n\t\t)*/\n};\n\n/**\n * get the locked or unlocked profiles in the array of person data\n * @param {Object[]} profiles -> array of Person data\n * @param {boolean?} [unlocked=true] -> Flag to check unlock or lock status, if true check unlock status of profile\n * @returns {Object[]} Locked/Unlocked profiles\n */\nexport const getLockedUnlockProfiles = (profiles = [], unlocked = true) => {\n  return profiles.filter((person_data) => {\n    if (unlocked) {\n      //If no data for emails and phones, let them download\n      return checkIfProfileUnLocked(person_data);\n    }\n    return checkIfProfileLocked(person_data);\n  });\n};\n","import { read, utils } from 'xlsx';\n\n/**\n * This function reads any Excel or CSV from user import\n * @param {File} file - The Excel/CSV file to be read.\n * @param {Function} callback - Function to call when file has been read\n *\n * Callback has the array of objects from the file\n */\nexport const readExcelCSV = (file, callback = () => {}) => {\n  if (file) {\n    const reader = new FileReader();\n    //If the readAsBinaryString function available in the browser\n    if (reader.readAsBinaryString) {\n      reader.onload = function (e) {\n        callback(GetTableFromExcel(e.target.result));\n      };\n      reader.readAsBinaryString(file);\n    } else {\n      //For IE Browser.\n      reader.onload = function (e) {\n        var data = '';\n        var bytes = new Uint8Array(e.target.result);\n        for (let i = 0; i < bytes.byteLength; i++) {\n          data += String.fromCharCode(bytes[i]);\n        }\n        callback(GetTableFromExcel(data));\n      };\n      reader.readAsArrayBuffer(file);\n    }\n  }\n};\n\nfunction GetTableFromExcel(data) {\n  //Read the Excel File data in binary\n  const workbook = read(data, {\n    type: 'binary',\n  });\n\n  //get the name of First Sheet.\n  const Sheet = workbook.SheetNames[0];\n\n  //Read all rows from First Sheet into an JSON array.\n  const excelRows = utils.sheet_to_row_object_array(workbook.Sheets[Sheet]);\n\n  return excelRows;\n}\n","// For Linkedin URLs\nexport const refactor_ln_urls = (original_url) => {\n  let url = original_url;\n  //we need to get only username\n  if (url.includes('linkedin.com/in/')) {\n    //Get the linkedin user name, get only username\n    const username = url\n      .replace(/(https?:\\/\\/(www.|de.)?linkedin.com\\/(mwlite\\/|m\\/)?in\\/\\/?)/g, '')\n      .split('/')?.[0];\n    //Create linkedin url using username\n    url = 'https://linkedin.com/in/' + username;\n  }\n  //If linkedin company, we have to add this because sometimes\n  //linkedin.com/company/username/about/ or /jobs or anything comes\n  //we need to get only company slug\n  if (url.includes('linkedin.com/company/')) {\n    //Get the linkedin company name, get only username\n    const username = url\n      .replace(/(https?:\\/\\/(www.|de.)?linkedin.com\\/(mwlite\\/|m\\/)?company\\/\\/?)/g, '')\n      .split('/')?.[0];\n    //Create linkedin url using username\n    url = 'https://linkedin.com/company/' + username;\n  }\n  return url;\n};\n","import { isBrowser } from './isBrowser';\n\n// Scroll behavior options.\nconst scrollOptions = { behavior: 'smooth', block: 'start', inline: 'nearest' };\n\n/**\n * Scrolls to the element with the specified 'id'.\n * @param {string} id - The id of the element to scroll to.\n */\nexport const scrollToById = (id) => {\n  // Define an interval that runs every 200 milliseconds.\n  const interval = setInterval(() => {\n    // Attempt to retrieve the element with the given 'id'.\n    const element = document.getElementById(id);\n    if (element) {\n      // If the element is found, clear the interval to stop checking.\n      clearInterval(interval);\n      // Scroll the element into view with the specified scroll behavior options.\n      element.scrollIntoView(scrollOptions);\n    }\n  }, 200);\n};\n\n/**\n * Scrolls to the element indicated by the 'href' attribute of the event target.\n * @param {Event} e - The event triggered when calling the function.\n */\nexport const scrollTo = (e) => {\n  // Check if the code is running in a browser environment.\n  if (isBrowser()) {\n    // Prevent the default action of the event (e.g., following a link).\n    e.preventDefault();\n    // Find the element based on the 'href' attribute of the event target.\n    let doc = document.querySelector(e.target.getAttribute('href'));\n    // Scroll the element into view with the specified scroll behavior options.\n    doc.scrollIntoView(scrollOptions);\n  }\n};\n","/**\n * This file contains the helper function for Table Component\n */\n\n/**\n * Compare a given string with a query to determine\n * if they match after trimming and case normalization.\n *\n * @param {string} string_to_match - The string to be compared.\n * @param {string} query - The query string for comparison.\n * @returns {boolean} True if the strings match, otherwise false.\n */\nconst filter_string = (string_to_match, query) => {\n  // If either the string or the query is empty, return false.\n  if (!string_to_match || !query) {\n    return false;\n  }\n  // Convert both the string and the query to lowercase after trimming\n  // and check if the query is included in the string.\n  if (string_to_match?.trim().toLowerCase().includes(query?.trim().toLowerCase())) {\n    return true; // If the query is found in the string, return true.\n  }\n  return false; // If no match is found, return false.\n};\n\n/**\n * Filter an array of values or objects based on a query value.\n *\n * @param {Array} array - The array to be filtered.\n * @param {string} val - The query value for filtering.\n * @returns {boolean} True if a matching value is found, otherwise false.\n */\nconst filter_array = (array = [], val) => {\n  // Check if any element in the array matches the given query value.\n  return array.some((a) => {\n    if (typeof a === 'object') {\n      // If the element is an object, check if any of its values match the query.\n      return Object.values(a).some((b) => filter_string(b, val));\n    }\n    // If the element is not an object, directly check if it matches the query.\n    return filter_string(a, val);\n  });\n};\n\n/**\n * Filter rows based on a given field name, values, and a query.\n *\n * @param {string} element - Field name for which we will check the data e.g. full_name.\n * @param {Object|Array|string} values - Values to be filtered.\n * @param {string} query - Query value for filtering.\n * @returns {boolean} True if a match is found, otherwise false.\n */\nexport const table_filter_rows = (element, values, query) => {\n  // If the element is missing, return false.\n  if (!element) {\n    return false;\n  }\n\n  //If field name has \".\", it means it's an key from the object\n  //Split it, e.g. user_data.name -> we have to match the query for name in user_data\n  const props = element.split('.');\n  let string_to_match;\n\n  //If values is object and values has the item field\n  if (typeof values === 'object' && values[element]) {\n    //Get the value of the field\n    string_to_match = values[element];\n  } else {\n    //else check if values is not array, it contains the first item from the props\n    //e.g. Check if values contains \"user_data\"\n    string_to_match =\n      typeof values === 'object' && !Array.isArray(values) ? values[props[0]] : values;\n  }\n  //If no value found to match, return false\n  if (!string_to_match) {\n    return false;\n  }\n  //Else start filtering\n  let filtered = false;\n\n  // If the string_to_match is an array, use filter_array function for filtering.\n  if (Array.isArray(string_to_match)) {\n    filtered = filter_array(string_to_match, query);\n  } else if (typeof string_to_match === 'object') {\n    // Understand by example\n    // props->[\"user_data\", \"name\"]\n    if (props.length > 1) {\n      let i = 0,\n        prop;\n      //now we have user_data in the obj\n      let obj = { ...values };\n      //TODO: Something is wrong here, i should start with 1, do check\n      for (; i < props.length - 1; i++) {\n        prop = props[i];\n        obj = obj[prop];\n      }\n      string_to_match = obj[props[i]];\n      // If nested property filtering matches, return true.\n      if (table_filter_rows('', string_to_match, query)) {\n        return true;\n      }\n    } else {\n      // Use filter_rows function on nested object values.\n      filtered = Object.values(string_to_match).some((a) => table_filter_rows('', a, query));\n    }\n  } else {\n    // Convert string_to_match to string and use filter_string function for filtering.\n    string_to_match += '';\n    filtered = filter_string(string_to_match, query);\n  }\n  return filtered;\n};\n","/**\n * This function converts an underscore-separated string into a normal text format with capitalized words.\n * @param {string} input The underscore-separated string to be converted (e.g., 'work_phone').\n * @returns {string} The converted string with spaces and capitalized words (e.g., 'Work Phone').\n */\n\nexport const underscoresNormalText = (input) => {\n  return input\n    .split('_') // Split the string into parts by underscores\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1)) // Capitalize each part\n    .join(' '); // Join the parts with spaces\n};\n","/**\n * This function takes in three parameters and returns a modified string.\n * @param {number} count The number of items to determine whether to add the postfix or not.\n * @param {string} text The main text to which the postfix may be appended.\n * @param {string} postfix The postfix string that will be added to the main text when the count is greater than 1. Default is \"s\".\n * @returns {string} The modified string with the postfix added based on the count value.\n */\nexport const updatePlural = (count, text, postfix = 's') => {\n  // Concatenate the main text and the postfix (if required) and return the result.\n  return text + (count > 1 ? postfix : '');\n};\n","import { useState, useEffect } from 'react';\n/**\n * This custom hook is used to track whether an element is currently visible on the screen\n * (in the viewport).\n * @param {React.MutableRefObject} ref A ref that points to the element to be observed\n * for visibility.\n * @returns {boolean} A boolean value representing whether the observed element is\n * currently visible on the screen.\n */\nexport const useOnScreen = (ref) => {\n  // State to keep track of whether the element is intersecting the viewport.\n  const [isIntersecting, setIntersecting] = useState(false);\n\n  useEffect(() => {\n    // Create a new IntersectionObserver instance.\n    const observer = new IntersectionObserver(([entry]) => {\n      // When the intersection state changes and the element becomes visible on the screen,\n      // update the isIntersecting state to true.\n      if (!isIntersecting) setIntersecting(entry.isIntersecting);\n    });\n\n    // Check if the ref is available and the element is not yet intersecting.\n    // If both conditions are true, start observing the element.\n    if (ref.current && !isIntersecting) {\n      observer.observe(ref.current);\n    } else {\n      // If the element is already intersecting or the ref is not available, stop observing the element.\n      observer.unobserve(ref.current);\n    }\n\n    // Clean up the observer when the component is unmounted or the state isIntersecting changes.\n    return () => {\n      observer.disconnect();\n    };\n  }, [isIntersecting, ref]);\n\n  // Return the boolean value indicating whether the element is currently visible on the screen.\n  return isIntersecting;\n};\n","import { useRouter } from 'next/router';\nimport { useMemo } from 'react';\n\n/**\n * This function Extract Search Params from URL\n * e.g. www.zintlr/id?=someId\n */\nexport const useQuery = () => {\n  const { query } = useRouter();\n  return useMemo(() => query, [query]);\n};\n","import { createContext, useContext } from 'react';\n\n/**\n * This code defines a context and a custom hook for the all pages.\n * provides a default value containing different user properties which can be used all over the website\n * Also contains the banner data to show\n */\nexport const UserContext = createContext({\n  details: undefined, //user details page\n  isLoggedIn: undefined, //to check if user is logged in or not\n  bannerData: undefined, //to store the banner data\n});\n\n// Creating a custom hook called useUser,\n// which will allow components to access the UserContext.\nexport const useUser = () => useContext(UserContext);\n","import { useState, useCallback, useEffect } from 'react';\nimport { isBrowser } from './isBrowser';\n\n/**\n * To get width and height of the screen, use this hook\n * This custom hook tracks the window size and updates the state with the current width and height.\n * @returns {Object} An object containing the width and height of the window.\n */\nexport const useWindowSize = () => {\n  // State to hold the current window size\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  // Handler to be called on window resize\n  const handleResize = useCallback(() => {\n    // Set window width/height to state\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n  }, [setWindowSize]);\n\n  useEffect(() => {\n    // Check if the code is running in a browser environment\n    if (isBrowser) {\n      // Add event listener for window resize events\n      window.addEventListener('resize', handleResize);\n\n      // Call the handler right away to update state with the initial window size\n      handleResize();\n\n      // Remove the event listener on cleanup to avoid memory leaks\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [handleResize]);\n\n  // Return the current window size\n  return windowSize;\n};\n","/**\n * Formats phone numbers from input data into a structured array\n * @param {Object} data - Input data containing phone information\n * @returns {Array} Array of tuples containing phone type and numbers\n */\nexport const formatPhoneNumbers = (data) => {\n  // Early return if no phone data exists\n  if (!data?.phone?.length) return [];\n\n  // Handle case where phone is an array of strings\n  if (typeof data.phone[0] === 'string') {\n    return [['', data.phone]];\n  }\n\n  // Group phone numbers by subtype using reduce\n  return Object.entries(\n    data.phone.reduce((acc, { subtype = '', ph }) => {\n      // Skip if phone number is falsy\n      if (!ph) return acc;\n\n      // Initialize array for subtype if doesn't exist\n      if (!acc[subtype]) {\n        acc[subtype] = [];\n      }\n\n      acc[subtype].push(ph);\n      return acc;\n    }, {})\n  );\n};\n\n/**\n * Formats email addresses into an array of objects\n * @param {Array} emails - Array of email addresses\n * @returns {Array} Array of objects with email addresses\n */\nexport const formatEmails = (emails) => {\n  return emails?.map((email) => ({ address: email }));\n};\n\n/**\n * Formats contact details from raw data into a structured object\n * Common Contact Formatter\n * @param {Object} data - Raw contact data\n * @param {string} from - Source of the contact data\n * @returns {Object} Formatted contact details object containing name, phone, emails and other info\n */\nexport const formatContactDetails = (data, from) => {\n  // Construct and return formatted contact object\n  return {\n    // Get name from either person_name or full_name\n    name: data?.person_name || data?.full_name,\n    // Format phone numbers using person_phs or phone data\n    phone: formatPhoneNumbers(data?.person_phs || data?.phone),\n    // Format emails using person_emails or use existing emails array\n    emails: formatEmails(data?.person_emails) || data?.emails,\n    // Get ID from either person_din or _id\n    _id: data?.person_din || data?._id,\n    // Group additional info like flags and credits\n    info: {\n      flags: data?.person_flags,\n      credits: data?.email_credits + data?.phone_credits,\n      email_credits: data?.email_credits,\n      phone_credits: data?.phone_credits,\n    },\n    // Social media links\n    linkedin_url: data?.social_urls?.linkedin_url,\n    // Source and unlock status\n    from: from,\n    isEmailUnlocked: data?.email_unlocked,\n    isPhoneUnlocked: data?.phone_unlocked,\n  };\n};\n","import * as jwt from 'jsonwebtoken';\n\nconst crypto = require('crypto');\n\n/**\n * Hashing function to hash text by using SHA256\n * @param {object} obj\n * @param {string} secrete\n * @returns {string} JWT Token\n */\nexport function create_jwt(obj, secrete, options) {\n  return jwt.sign(obj, secrete, options);\n}\n\nexport function verify_and_decrypt_jwt(token, secret) {\n  try {\n    return jwt.verify(token, secret);\n  } catch (_) {\n    // console.error('JWT verification error:', error.message);\n    return null;\n  }\n}\n\n/**\n * Hashing function to hash text by using SHA256\n * @param {string} text\n * @param {string} secrete\n * @returns {string} Hashed value of string using SHA256 Algo\n */\nexport function hashing(text, secrete) {\n  return crypto.createHmac('sha256', secrete).update(text).digest('hex');\n}\n\n/**\n * Retrieves the client's IP address from the request object.\n * @param {Object} request The request object containing client information.\n * @returns {string} The client's IP address.\n */\nexport function getIP(request) {\n  let ip = request.ip ?? request?.['x-real-ip'];\n  let forwardedFor = request?.['x-forwarded-for'];\n  //If cloudflare is enabled,then it changes x-forwarded-for with cloudflare ip, use cf-connecting-ip to get the real ip\n  if (process.env.CLOUDFLARE_ENABLED === 'true') {\n    forwardedFor = request?.['cf-connecting-ip'];\n  }\n  // Consider cloudflare data more one priority list, replacing ip with forwardedFor data of cf.\n  if (forwardedFor) {\n    try {\n      if (Array.isArray(forwardedFor)) {\n        ip = forwardedFor?.[0];\n      } else {\n        ip = forwardedFor.split(',')?.[0];\n      }\n    } catch (_) {\n      ip = 'Unknown';\n    }\n  }\n  if (!ip) {\n    ip = 'Unknown';\n  }\n  return ip;\n}\n","// packages/api-client/src/request-caller.js\nimport axios from 'axios';\nimport { toast } from '../components/Toast.js';\nimport * as yup from 'yup';\nimport { getIP } from './_common.handlers.js';\n\nexport const ErrorObject = {\n  message: '',\n  success: false,\n  code: 400,\n  data: {},\n};\n\nexport function isMethodProper(method) {\n  return ['post', 'put', 'delete'].includes(method);\n}\n\nexport const requestAbortCode = -100;\n\n/**\n * Core request handler - accepts all configuration as parameters\n */\nexport function request_caller({\n  method = 'post',\n  endpoint = '',\n  data = {},\n  successToast = false,\n  errorToast = true,\n  headers = {},\n  controller = null,\n  forceValidationSchema = null,\n  skipValidation = false,\n  // Configuration dependencies\n  yup_validators = {},\n  domain,\n  urls = {},\n  // Toast and logging functions\n  logFn = null,\n}) {\n  return new Promise((resolve, reject) => {\n    const responseObj = { ...ErrorObject };\n\n    // Method validation\n    if (!isMethodProper(method)) {\n      responseObj.message = 'Method is not allowed';\n      reject(responseObj);\n      return;\n    }\n\n    // Logging if function provided\n    // Why we need to log the endpoint, urls.api?.prospecting?.search_results, yup_validators[endpoint] ?\n    if (logFn) {\n      logFn(endpoint, urls.api?.prospecting?.search_results, yup_validators[endpoint]);\n    }\n\n    // Validation logic\n    if (!skipValidation) {\n      if (yup_validators[endpoint] || yup_validators[forceValidationSchema]) {\n        let validationSchema = yup_validators[endpoint];\n        if (forceValidationSchema) {\n          validationSchema = yup_validators[forceValidationSchema];\n        }\n        const validations = yup.object().shape(validationSchema);\n        try {\n          if (logFn) {\n            logFn('====================================');\n            logFn(data);\n            logFn('====================================');\n          }\n          validations.validateSync(data);\n        } catch (error) {\n          responseObj.message = error.errors.join(', ');\n          toast.error(responseObj.message);\n          reject(responseObj);\n          return;\n        }\n      }\n    }\n    // This is for the server side request to get the ip address ( Node is changing the ip address thats why we are using this method )\n    if (headers) {\n      data['browser-ip-address'] = getIP(headers);\n    }\n\n    const req_obj = {\n      method: method,\n      url: domain + endpoint,\n      data: method !== 'get' ? data : {},\n      responseType: 'json',\n      headers: headers,\n      withCredentials: true,\n      crossDomain: true,\n    };\n\n    if (controller && controller instanceof AbortController) {\n      req_obj.signal = controller.signal;\n    }\n\n    // Axios request\n    axios\n      .request(req_obj)\n      .then((res) => {\n        const data = res.data;\n        if (data.success) {\n          if (successToast) {\n            toast.success(data.message);\n          }\n          resolve(data);\n        } else {\n          if (errorToast) {\n            toast.error(data.message);\n          }\n          reject(data);\n        }\n      })\n      .catch((error) => {\n        let err = {};\n\n        if (error && error?.response?.status === 0 && error?.message) {\n          responseObj.message = error.message;\n          err = responseObj;\n        } else if (\n          error &&\n          error?.response?.data?.success === false &&\n          error?.response?.data?.message\n        ) {\n          err = error.response.data;\n        } else if (axios.isCancel(error)) {\n          responseObj.code = requestAbortCode;\n          responseObj.message = 'Cancelled';\n          err = responseObj;\n        } else {\n          if (logFn) {\n            logFn([error], 'error');\n          }\n          responseObj.message =\n            'Something went wrong on our side. Please try again. Sorry for the inconvenience';\n          err = responseObj;\n        }\n\n        if (controller && controller instanceof AbortController && controller.signal.aborted) {\n          err.code = requestAbortCode;\n        }\n\n        if (\n          !controller ||\n          (controller && controller instanceof AbortController && !controller.signal.aborted)\n        ) {\n          if (logFn) {\n            logFn([err.message, 'hey', errorToast], 'error');\n          }\n          if (errorToast) {\n            toast.error(err.message);\n          }\n        }\n        reject(err);\n      });\n  });\n}\n\nexport default request_caller;\n","import axios from 'axios';\nimport { ErrorObject } from './request-handler';\nimport { getIP, verify_and_decrypt_jwt } from './_common.handlers';\n\nconst cookie = require('cookie');\n\n/**\n * This method is the global method for calling API request on the server.\n * @param {object} CustomRequestObject\n * @param {string} CustomRequestObject.method - Accepted methods \"get\", \"post\", \"put\", \"delete\"\n * @param {string} CustomRequestObject.endpoint - API Endpoint.\n * @param {object} CustomRequestObject.data - Data to send with Request.\n * @param {Request} CustomRequestObject.req - Request Object from the request\n * @param {Response} CustomRequestObject.res - Response Object for the request\n * @param {Boolean} CustomRequestObject.isAuthRequired - Authentication\n * @param {Function} CustomRequestObject.successCallback - Callback function for successful response\n * @param {Function} CustomRequestObject.errorCallback - Callback function for failed response\n * @param {string} CustomRequestObject.apiUrl - Base API URL\n * @param {string} CustomRequestObject.captchaToken - Captcha token for authenticity\n * @param {string} CustomRequestObject.platformSource - Platform source identifier\n * @param {Function} CustomRequestObject.getIP - Function to get IP from headers\n * @param {Function} CustomRequestObject.verifyAndDecryptJWT - Function to decrypt JWT\n * @param {Function} CustomRequestObject.parseCookies - Function to parse cookies\n * @param {Function} CustomRequestObject.logFn - Logging function\n */\nexport function serverRequestHandler({\n  method = 'get',\n  endpoint = '',\n  data = {},\n  req = null,\n  res = null,\n  isAuthRequired = false,\n  successCallback = () => {},\n  errorCallback = () => {},\n  isSourceRequired = false,\n  platformSource,\n  logFn = console.log,\n}) {\n  if (!req || !res) {\n    return;\n  }\n\n  data = {\n    ...req.body,\n    ...data,\n    ...(isSourceRequired && { source: platformSource }),\n  };\n\n  const headers = {};\n  // Captcha token is just to check the authenticity\n  headers['Captcha-Token'] = process.env.CAPTCHA_TOKEN;\n\n  let options = {\n    method: method,\n    url: process.env.API_URL + endpoint,\n    headers: headers,\n  };\n\n  const cookies = cookie.parse(req.headers.cookie || '{}');\n\n  //If auth is required or it doesn't matter if logged in or not\n  //e.g. Pricing page shows different packages for users\n  //If auth is requrired\n  if (isAuthRequired) {\n    let isLoggedIn = req.headers.cookie;\n\n    if (isLoggedIn) {\n      //Check if key, access token and auth token are present\n      isLoggedIn = cookies.key && cookies.access_token;\n    }\n\n    //If not logged in and it doesn't work without authentication, throw error\n    if (!isLoggedIn) {\n      const errorObj = { ...ErrorObject };\n      errorObj['message'] = 'Log in first';\n      errorObj.code = 400;\n      res.status(errorObj.code).json(errorObj);\n      return;\n    }\n    //If logged in, decrypt key and access_token coming from cookies\n    // const key = cipher_decryption(cookies.key, process.env.CIPHER);\n    // const access_token = cipher_decryption(cookies.access_token, process.env.CIPHER);\n\n    // The above cipher_decryption is creating irregularity across the platforms,\n    // That's why we are using consistent encryption using jwt.\n    const key = verify_and_decrypt_jwt(cookies.key, process.env.CIPHER);\n    const access_token = verify_and_decrypt_jwt(cookies.access_token, process.env.CIPHER);\n\n    //Add token in headers\n    options.headers.Authorization = `${data?.ltd ? process.env.LTD_KEY : access_token}`;\n    data.key = data?.ltd ? null : key;\n  }\n\n  // Get IP address from request data or fallback to getIP helper\n  const ipAddress = data['browser-ip-address'] || getIP(req.headers);\n\n  // Only delete if it exists to avoid unnecessary operation\n  if (data['browser-ip-address']) {\n    delete data['browser-ip-address'];\n  }\n\n  options.headers['client-ip-address'] = ipAddress;\n  data.ip_address = ipAddress;\n\n  options = {\n    ...options,\n    params: method === 'get' ? data : {},\n    data: method !== 'get' ? data : {},\n    responseType: 'json',\n  };\n\n  if (logFn) {\n    logFn(options);\n  }\n\n  return axios\n    .request(options)\n    .then((result) => {\n      if (result?.data?.success) {\n        //Cache for get requests\n        if (method === 'get') {\n          res.setHeader('Cache-Control', 'public, s-maxage=59, stale-while-revalidate=59');\n        }\n        successCallback(result.data);\n        res.status(200).send(JSON.stringify(result.data));\n      } else {\n        res.status(400).json(result.data);\n      }\n    })\n    .catch((error) => {\n      let err = error?.response?.data || { ...ErrorObject };\n\n      if (logFn) {\n        logFn('================================================');\n        logFn(error);\n        logFn('================================================');\n      }\n\n      if (error && error?.response?.status === 0 && error?.message) {\n        err = { ...ErrorObject };\n        err.message = error.message;\n        err.code = 500;\n      }\n      if (error && error?.response?.status === 502) {\n        err = { ...ErrorObject };\n        err.message = 'Server is down.';\n        err.code = 500;\n      }\n\n      errorCallback(err);\n      res.status(err?.code === 500 ? 500 : 400).json(err);\n    });\n}\n\nexport default serverRequestHandler;\n"]}