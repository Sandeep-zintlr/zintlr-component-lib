{"version":3,"sources":["../src/components/Toast.js","../src/components/Wrappers/ProfileWrapperCard.jsx","../src/helpers/base64ToFile.js","../src/helpers/capitalizeFirstLetter.js","../src/helpers/changeEmailFormat.js","../src/helpers/checkCreditSumLimits.js","../src/helpers/isBrowser.js","../src/helpers/click_chat_fun.js","../src/helpers/combineTeamAndInvitedata.js","../src/helpers/copy_to_clipboard.js","../src/helpers/create_img.js","../src/helpers/deepClone.js","../src/helpers/downloadCSV.js","../src/helpers/downloadExcel.js","../src/helpers/formatCreditLimits.js","../src/helpers/get_combined_location.js","../src/helpers/get_days_to_month_years.js","../src/helpers/get_domain_name.js","../src/helpers/get_formated_date.js","../src/helpers/get_formated_url.js","../src/helpers/get_invitation_formated_data.js","../src/helpers/get_next_billing_date.js","../src/helpers/get_remaining_days.js","../src/helpers/getCookies.js","../src/helpers/getLockedUnlockProfiles.js","../src/helpers/readExcelCSV.js","../src/helpers/refactor_ln_urls.js","../src/helpers/scrollTo.js","../src/helpers/table-helper.js","../src/helpers/underscoresToNormal.js","../src/helpers/updatePlural.js","../src/helpers/useOnScreen.js","../src/helpers/useQuery.js","../src/helpers/userStateUpdate.js","../src/helpers/useWindowSize.js","../src/helpers/data_formatter.js","../src/handlers/_common.handlers.js","../src/configs/validator-config.js","../src/handlers/request-handler.js","../src/handlers/_server_request.handler.js"],"names":["ToastWrapper","position","expand","richColors","closeButton","props","React","Toaster","ProfileWrapperCard","children","className","id","detectMimeType","b64","signatures","s","i","fromBase64ToFile","capitalizeFirstLetter","str","changeEmailFormat","data_emails","emails","a","limitConfigs","checkCreditSumLimits","_ignored","updatedRows","sums","isNonEditable","name","acc","limits","key","value","exceeded","details","label","toast","isBrowser","click_chat_fun","elements","combineTeamAndInviteData","allocated_limits","unallocated_limits","teamData","inviteData","formattedData","member","invite","restructureData","tableData","team_limits","invite_limits","user_id_hash","data","copy_to_clipboard","text","type","textArea","success","fnBrowserDetect","userAgent","browserName","logo_img","get_svg","initials","imageColor","svg","y_margin","getInitials","_name","english","lname","getInitialsSvg","bgColor","createImg","initials_img","encodedData","error","deepClone","obj","downloadCSV","filename","array","csv","row","csvArray","downloadExcel","wb","utils","index","safeKey","binaryWS","final_filename","writeFile","keyMapping","formatCreditLimits","creditsTeam","get_combined_location","location","get_days_to_month_years","days","moment","get_domain_name","url","get_formated_date","date","get_formated_url","formatTeamData","_a","_b","_c","item","get_next_billing_date","get_remaining_days","date_to_differ","moment_date","getCookieValue","cookies","cookie","checkIfProfileLocked","person_data","checkIfProfileUnLocked","getLockedUnlockProfiles","profiles","unlocked","readExcelCSV","file","callback","reader","e","GetTableFromExcel","bytes","workbook","read","Sheet","refactor_ln_urls","original_url","scrollOptions","scrollToById","interval","element","scrollTo","filter_string","string_to_match","query","filter_array","val","b","table_filter_rows","values","filtered","prop","underscoresNormalText","input","word","updatePlural","count","postfix","useOnScreen","ref","isIntersecting","setIntersecting","useState","useEffect","observer","entry","useQuery","useRouter","useMemo","UserContext","createContext","useUser","useContext","useWindowSize","windowSize","setWindowSize","handleResize","useCallback","formatPhoneNumbers","subtype","ph","formatEmails","email","formatContactDetails","from","verify_and_decrypt_jwt","token","secret","P","getIP","request","ip","forwardedFor","validationConfig","isConfigInitialized","setValidationConfig","config","getValidationSchema","endpoint","schema","getAllValidationSchemas","isValidationConfigInitialized","resetValidationConfig","ErrorObject","isMethodProper","method","requestAbortCode","request_caller","successToast","errorToast","headers","controller","forceValidationSchema","skipValidation","domain","logFn","resolve","reject","responseObj","finalDomain","validationSchema","validations","Y","req_obj","axios","res","_d","_e","err","parseCookies","cookieString","serverRequestHandler","req","isAuthRequired","successCallback","errorCallback","isSourceRequired","apiUrl","API_URL","options","isLoggedIn","errorObj","access_token","visitorId","ipAddress","result"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport { Toaster, toast } from 'sonner';\n\n// Toast component that provides the Toaster container\nexport const ToastWrapper = ({\n  position = 'bottom-right',\n  expand = false,\n  richColors = true,\n  closeButton = true,\n  ...props\n}) => {\n  return (\n    <Toaster\n      position={position}\n      expand={expand}\n      richColors={richColors}\n      closeButton={closeButton}\n      {...props}\n    />\n  );\n};\n\n// Export toast functions for direct use\nexport { toast };\n","import React from 'react';\n\nexport const ProfileWrapperCard = ({ children, className = '', id = '' }) => {\n  return (\n    <div id={id} className={`border w-full h-fit bg-white rounded-lg`}>\n      <div className={`p-3 sm:p-7 mb-2 ${className}`}>{children}</div>\n    </div>\n  );\n};\n","/**\n * Detects the MIME type of a given base64 encoded string.\n * @param {string} b64 - The base64 encoded string to detect the MIME type for.\n * @returns {string|undefined} - The detected MIME type, or undefined if no match is found.\n */\nfunction detectMimeType(b64) {\n  //Contains base64 signatures and their corresponding MIME types\n  const signatures = {\n    JVBERi0: 'application/pdf',\n    R0lGODdh: 'image/gif',\n    R0lGODlh: 'image/gif',\n    iVBORw0KGgo: 'image/png',\n    AAAA: 'video/mp4',\n    '/': 'image/jpg',\n    i: 'image/png',\n    R: 'image/gif',\n    U: 'image/webp',\n    J: 'application/pdf',\n    A: 'video/mp4',\n    UEsDBBQA: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;',\n  };\n\n  for (const s in signatures) {\n    const i = b64.indexOf(s);\n    // Checking if the signature is found at the beginning of the base64 string\n    if (i === 0 || i === 1) {\n      // Returning the corresponding MIME type\n      return signatures[s];\n    }\n  }\n}\n\n/**\n * Converts a base64 encoded string to a data URL with the appropriate MIME type.\n * @param {string} s - The base64 encoded string to convert.\n * @returns {string|undefined} - The data URL representing the input with detected MIME type, or undefined if detection fails.\n */\nexport const fromBase64ToFile = (s) => {\n  // Constructing the data URL using the detected MIME type and the input base64 string\n  const final = 'data:' + detectMimeType(s) + ';base64,' + s;\n  return final;\n};\n","/**\n * This function capitalizes the initial letter of a given string.\n * @param {string} str The input string to be capitalized.\n * @returns {string} The input string with the initial letter capitalized.\n */\nexport const capitalizeFirstLetter = (str) => {\n  // Get the first character of the input string and convert it to uppercase.\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n","/**\n * This function filters and processes an array of email objects, calculating their accuracy based on certain properties.\n * @param {Object[]} data_emails An array of email objects or undefined.\n * @returns An array of processed email objects with accuracy calculated.\n */\nexport const changeEmailFormat = (data_emails) => {\n  let emails;\n  // Check if data_emails is not an array, and return an empty array.\n  if (!Array.isArray(data_emails)) {\n    return [];\n  }\n  // Check if data_emails is truthy (not undefined or null).\n  if (data_emails) {\n    //TODO: No need of this, backend is doing the validations and giving accuracy\n    /*emails = data_emails?.map((email) => {\n\t\t\t\t//Create a copy of the email object using spread operator.\n\t\t\t\tlet local_email = { ...(email || {}) };\n\t\t\t\tlet prob = 0;\n\t\t\t\t//Check if the 'validation' property exists in the email object. and it is true\n\t\t\t\t//If validation is true, email is validated, 60% email is accurate\n\t\t\t\tif (local_email?.validation) {\n\t\t\t\t\tprob = 0.6;\n\t\t\t\t}\n\t\t\t\t//Check if the 'smtp' property exists in the email object.\n\t\t\t\t//If smtp is true, it is 30% accurate,\n\t\t\t\t//If email is both smtp and validation, it is 90% accurate\n\t\t\t\tif (local_email?.smtp) {\n\t\t\t\t\tprob += 0.3;\n\t\t\t\t}\n\t\t\t\t//Add only if email has probability greater than 0\n\t\t\t\tif (prob != 0) {\n\t\t\t\t\tlocal_email.accuracy = prob;\n\t\t\t\t\treturn local_email;\n\t\t\t\t}\n\t\t\t\t//else return null\n\t\t\t\treturn null;\n\t\t\t});.*/\n    // Filter out any null elements from the 'emails' array.\n    emails = data_emails?.filter((a) => a);\n  }\n  // Return the processed array of email objects.\n  return emails;\n};\n","import { toast } from 'sonner';\n\n// Single config list for keys and labels\nconst limitConfigs = [\n  { key: 'no_contact_lists', label: 'No Contact Lists' },\n  { key: 'download_export', label: 'Download & Export' },\n  { key: 'tags_types', label: 'Tags & Types' },\n  { key: 'credit', label: 'Credits' },\n  { key: 'magic_search', label: 'Domain Search' },\n  { key: 'personality_intel', label: 'Personality Intel' },\n  { key: 'zbizlocator', label: 'Local Search' },\n];\n\n/**\n * Ensure each limit’s total allocation (excluding non‑editable/unallocated rows)\n * does not exceed 100%.\n *\n * @param {Array} _ignored - original data (unused)\n * @param {Array} updatedRows - array of row objects with updated .limits\n * @returns {Boolean} true if all sums ≤ 100, false (and toasts) otherwise\n */\nexport const checkCreditSumLimits = (_ignored, updatedRows) => {\n  // Sum each key across filtered rows\n  const sums = updatedRows\n    .filter(({ isNonEditable, name }) => !isNonEditable && name !== 'Unallocated credits')\n    .reduce((acc, { limits }) => {\n      limitConfigs.forEach(({ key }) => {\n        const value = Number(limits[key]) || 0;\n        acc[key] = (acc[key] || 0) + value;\n      });\n      return acc;\n    }, {});\n\n  // Identify keys exceeding 100%\n  const exceeded = limitConfigs.filter(({ key }) => (sums[key] || 0) > 100);\n  if (exceeded.length) {\n    const details = exceeded.map(({ key, label }) => `${label} (${sums[key]}%)`);\n    toast.error(`The following limits exceed 100%: ${details.join(', ')}.`);\n    return false;\n  }\n\n  return true;\n};\n","/**\n * Checks if the code is running in a browser environment.\n * @returns {boolean} Returns true if the code is running in a browser, otherwise false.\n */\nexport const isBrowser = () => {\n  // Check if the 'window' object is defined, indicating that the code is running in a browser environment.\n  return typeof window !== 'undefined';\n};\n","import { isBrowser } from './isBrowser';\n\nexport const click_chat_fun = () => {\n  if (isBrowser()) {\n    var elements = document.getElementsByClassName('cc-157aw cc-1kgzy');\n    if (elements && elements.length > 0) {\n      elements[0].click();\n    }\n  }\n};\n","/**\n  This function combines the team and invite data\n * @param {Array} data - The data to combine\n * @param {Object} options - The options to use\n * @returns {Array} - The combined data\n */\nexport const combineTeamAndInviteData = (allocated_limits, unallocated_limits) => {\n  if (\n    !allocated_limits ||\n    !unallocated_limits ||\n    Object.keys(allocated_limits).length === 0 ||\n    Object.keys(unallocated_limits).length === 0\n  ) {\n    return [];\n  }\n\n  const teamData = allocated_limits['team_limits'] || [];\n  const inviteData = allocated_limits['invite_limits'] || [];\n\n  const formattedData = [\n    ...teamData.map((member) => ({ ...member, isInvited: false })),\n    ...inviteData.map((invite) => ({ ...invite, isInvited: true })),\n  ];\n\n  formattedData.push({\n    ...unallocated_limits,\n    name: 'Unallocated credits',\n    isNonEditable: true,\n  });\n\n  return formattedData;\n};\n\n/**\n This function restructures the data\n * @param {Array} tableData - The data to be restructured\n * @returns {Object} - The restructured data\n */\nexport const restructureData = (tableData) => {\n  const team_limits = {};\n  const invite_limits = {};\n  // Process each entry in tableData\n  Object.entries(tableData).forEach(([user_id_hash, data]) => {\n    if (data.isInvited) {\n      // For invited users, use email as key and pass all data\n      invite_limits[data.email] = { ...data };\n      delete invite_limits[data.email].isInvited; // Remove the isInvited flag\n      delete invite_limits[data.email].email; // Remove email since it's now the key\n    } else {\n      // For team members, use user_id_hash as key and pass all data\n      team_limits[user_id_hash] = { ...data };\n      delete team_limits[user_id_hash].isInvited; // Remove the isInvited flag\n    }\n  });\n\n  return {\n    credit_limits: {\n      team_limits,\n      invite_limits,\n    },\n  };\n};\n","import { toast } from 'sonner';\nimport { isBrowser } from './isBrowser';\n\n/**\n * This function copies the given text to the clipboard\n * and displays a success toast message if executed in a browser environment.\n * @param {string} text The text to be copied to the clipboard.\n * @param {string} type The type of data being copied (e.g., \"Email\"). Default value is \"Email\".\n * @returns {boolean} Returns true if copying was successful, false otherwise\n */\nexport function copy_to_clipboard(text, type = 'Email') {\n  if (!isBrowser()) return false;\n\n  try {\n    // Modern browsers\n    if (navigator.clipboard && window.isSecureContext) {\n      navigator.clipboard.writeText(text);\n      toast.success(`${type} copied to clipboard`);\n      return true;\n    }\n\n    // Fallback for older browsers\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    textArea.style.position = 'fixed';\n    textArea.style.left = '-999999px';\n    textArea.style.top = '-999999px';\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n\n    const success = document.execCommand('copy');\n    textArea.remove();\n\n    if (success) {\n      toast.success(`${type} copied to clipboard`);\n      return true;\n    } else {\n      toast.error('Failed to copy to clipboard');\n      return false;\n    }\n  } catch (error) {\n    toast.error('Failed to copy to clipboard');\n    return false;\n  }\n}\n","import { isBrowser } from './isBrowser';\n\nexport const imageColors = {\n  faint_blue: {\n    bgColor: '#EFEFFF',\n    textColor: 'black',\n  },\n};\n/**\n * This function will the user's browser using userAgent\n * @returns {string} Browser name\n */\nfunction fnBrowserDetect() {\n  let userAgent = navigator.userAgent;\n  let browserName;\n\n  if (userAgent.match(/chrome|chromium|crios/i)) {\n    browserName = 'chrome';\n  } else if (userAgent.match(/firefox|fxios/i)) {\n    browserName = 'firefox';\n  } else if (userAgent.match(/safari/i)) {\n    browserName = 'safari';\n  } else if (userAgent.match(/opr\\//i)) {\n    browserName = 'opera';\n  } else if (userAgent.match(/edg/i)) {\n    browserName = 'edge';\n  } else {\n    browserName = 'No browser detection';\n  }\n\n  return browserName;\n}\n\n/**\n * SVG image representing a default logo with placeholders for initials.\n */\nconst logo_img = `\n<g clip-path=\"url(#0cf21cfe8e)\" transform=\"translate(5, 20) scale(0.5)\">\n<path fill=\"#ffffff\" d=\"M 238.238281 215.71875 C 255.039062 215.71875 270.484375 215.71875 285.882812 215.570312 C 286.886719 215.328125 287.800781 214.894531 288.625 214.265625 C 289.445312 213.636719 290.101562 212.863281 290.59375 211.953125 C 299.421875 196.890625 308.148438 181.828125 316.625 166.765625 C 317.03125 165.753906 317.234375 164.703125 317.234375 163.613281 C 317.234375 162.523438 317.03125 161.472656 316.625 160.464844 C 315.144531 157.265625 313.421875 154.203125 311.457031 151.273438 C 310.230469 153.007812 309.175781 154.238281 308.375 155.617188 C 300.523438 169.425781 292.5 183.234375 284.980469 197.140625 C 282.472656 201.761719 279.585938 203.820312 274.347656 203.191406 C 270.242188 202.960938 266.140625 202.960938 262.035156 203.191406 C 278.382812 174.09375 294.382812 145.828125 310.957031 116.703125 C 319.984375 132.296875 328.507812 146.832031 336.757812 161.59375 C 337.011719 162.59375 337.054688 163.601562 336.882812 164.621094 C 336.714844 165.640625 336.347656 166.578125 335.78125 167.441406 C 324.261719 187.675781 312.621094 207.84375 300.851562 227.945312 C 300.253906 229.003906 299.464844 229.890625 298.484375 230.609375 C 297.503906 231.328125 296.421875 231.8125 295.234375 232.0625 C 266.898438 232.339844 238.566406 232.265625 208.976562 232.265625 C 213.664062 224.003906 217.828125 216.523438 222.117188 209.117188 C 241.046875 176.304688 259.804688 143.316406 279.136719 110.855469 C 282.773438 104.730469 283.425781 100.109375 278.910156 94.738281 C 277.597656 92.972656 276.402344 91.132812 275.324219 89.214844 L 183.777344 248.082031 L 289.265625 248.082031 C 283.675781 257.769531 278.785156 266.558594 273.644531 275.269531 C 269.910156 281.644531 267.402344 290.332031 261.808594 293.546875 C 256.21875 296.757812 247.441406 294.652344 240.070312 294.675781 L 101.679688 294.675781 C 148.996094 212.730469 195.710938 131.792969 243.027344 49.773438 L 131.972656 49.773438 C 120.035156 49.773438 120.035156 49.773438 115.171875 61.75 L 219.960938 61.75 L 98.722656 272.15625 C 89.71875 256.515625 81.167969 242.03125 72.96875 227.09375 C 72.609375 225.941406 72.496094 224.765625 72.636719 223.566406 C 72.777344 222.367188 73.15625 221.25 73.773438 220.214844 C 93.011719 186.574219 112.347656 153 131.769531 119.492188 C 133.125 117.132812 134.277344 114.695312 136.109375 111.507812 C 119.632812 111.507812 104.214844 111.507812 88.792969 111.632812 C 87.761719 111.773438 86.804688 112.121094 85.929688 112.683594 C 85.050781 113.246094 84.335938 113.96875 83.777344 114.847656 C 74.851562 130.011719 66.058594 145.273438 57.398438 160.640625 C 57.019531 161.558594 56.828125 162.519531 56.828125 163.511719 C 56.828125 164.507812 57.019531 165.46875 57.398438 166.386719 C 59.101562 169.855469 61.015625 173.203125 63.140625 176.429688 C 66 171.410156 68.480469 167.390625 70.863281 163.175781 C 77.234375 152.027344 83.800781 140.980469 89.769531 129.609375 C 89.945312 129.164062 90.15625 128.738281 90.40625 128.328125 C 90.65625 127.917969 90.9375 127.535156 91.25 127.175781 C 91.566406 126.816406 91.910156 126.484375 92.28125 126.183594 C 92.652344 125.882812 93.046875 125.617188 93.464844 125.382812 C 93.882812 125.148438 94.316406 124.953125 94.765625 124.796875 C 95.21875 124.636719 95.679688 124.519531 96.152344 124.441406 C 96.621094 124.363281 97.097656 124.324219 97.574219 124.328125 C 98.054688 124.332031 98.527344 124.378906 98.996094 124.460938 C 103.035156 124.789062 107.121094 124.460938 112.210938 124.460938 C 95.613281 153.359375 79.742188 181.527344 63.242188 210.597656 C 55.71875 197.441406 48.972656 184.816406 41.226562 172.941406 C 36.8125 166.210938 36.886719 161.34375 41.226562 154.464844 C 52.332031 136.539062 62.539062 118.035156 73.046875 99.660156 C 73.40625 98.839844 73.882812 98.101562 74.476562 97.433594 C 75.070312 96.765625 75.75 96.207031 76.519531 95.757812 C 77.292969 95.308594 78.113281 94.984375 78.984375 94.792969 C 79.855469 94.601562 80.734375 94.550781 81.621094 94.636719 C 109.054688 94.886719 136.511719 94.761719 165.296875 94.761719 C 163.617188 97.953125 162.4375 100.363281 161.109375 102.671875 C 139.792969 139.625 118.882812 176.832031 96.890625 213.359375 C 91.148438 222.875 91.199219 229.726562 99.398438 237.613281 C 129.464844 185.015625 159.703125 132.519531 190.496094 79.070312 L 85.582031 79.070312 C 86.636719 76.761719 87.210938 75.230469 88.089844 73.824219 C 95.210938 61.273438 102.28125 48.84375 109.703125 36.542969 C 110.363281 35.5625 111.191406 34.761719 112.191406 34.140625 C 113.195312 33.519531 114.277344 33.132812 115.445312 32.980469 C 166.902344 32.792969 218.355469 32.753906 269.808594 32.851562 C 270.554688 32.957031 271.289062 33.109375 272.015625 33.304688 C 225.101562 114.671875 178.359375 195.710938 130.96875 277.753906 L 242.527344 277.753906 C 254.238281 277.753906 254.636719 277.453125 259.078125 265.203125 L 154.4375 265.203125 L 275.148438 55.625 C 276.265625 57.027344 277.3125 58.484375 278.285156 59.992188 C 285.605469 72.542969 292.753906 85.324219 300.273438 97.824219 C 300.796875 98.542969 301.195312 99.320312 301.472656 100.164062 C 301.746094 101.007812 301.882812 101.871094 301.882812 102.757812 C 301.882812 103.644531 301.746094 104.511719 301.472656 105.355469 C 301.195312 106.195312 300.796875 106.976562 300.273438 107.691406 C 280.566406 141.484375 260.972656 175.402344 241.5 209.445312 C 240.546875 211.101562 239.742188 212.808594 238.238281 215.71875 Z M 238.238281 215.71875 \" fill-opacity=\"1\" fill-rule=\"nonzero\" />\n</g>`;\n\n/**\n * Function to generate the SVG image based on initials.\n * @param {string} initials - The initials to be displayed in the SVG image.\n * @param {string?} imageColor - If null, default gradient black will be used as background\n * @returns {SVGElement} - The SVG image element with provided initials or the custom logo if no initials are provided.\n */\nconst get_svg = (initials, imageColor = null) => {\n  let xmlns = 'http://www.w3.org/2000/svg';\n  let svg = document.createElementNS(xmlns, 'svg');\n  svg.setAttributeNS(null, 'width', '200');\n  svg.setAttributeNS(null, 'height', '200');\n  svg.setAttributeNS(null, 'fill', 'none');\n  svg.setAttribute(\n    'style',\n    `${\n      imageColor\n        ? `background:${imageColor?.bgColor}`\n        : 'background-image: linear-gradient(180deg, #112634 0%, #000000 100%)'\n    };\n\t\tbackground-repeat:no-repeat !important;\n\t\tdisplay: flex;\n\t\talign-items:center;`\n  );\n  if (initials) {\n    let y_margin = '50%';\n    //In firefox, the margin issue is coming, to solve that\n    if (isBrowser() && fnBrowserDetect() === 'firefox') {\n      y_margin = '55%';\n    }\n    svg.innerHTML = `\n\t\t\t<text x=\"50%\" y=${y_margin} fill=\"${\n        imageColor?.textColor ?? 'white'\n      }\" style=\"font-weight: 700; text-transform: uppercase; font-family: 'Roboto', sans-serif;\"\n\t\t\tdominant-baseline=\"middle\"  text-anchor=\"middle\" alignment-baseline=\"central\" font-size=\"90\">\n\t\t\t\t${initials}\n\t\t\t</text>\n\t\t`;\n  } else {\n    svg.innerHTML = logo_img;\n  }\n  return svg;\n};\n\n/**\n * Function to extract initials from a name.\n * @param {string} name - The name from which initials will be extracted.\n * @returns {string} - The extracted initials in uppercase, or an empty string if the input name contains non-alphanumeric characters.\n */\nexport const getInitials = (_name) => {\n  let initials;\n  //Check if the name is in english\n  const english = /^[A-Za-z0-9 ]*$/;\n  //Replace the non alphanumeric characters in the name\n  _name = _name ? _name.replace(/[^a-zA-Z0-9 ]/g, '') : '';\n  if (english.test(_name)) {\n    let name = _name.trim().toUpperCase();\n    let lname = name.split(' ');\n    lname = lname.map((a) => a.trim());\n    initials =\n      lname[0].charAt(0) + '' + (lname.length > 1 ? lname[lname.length - 1].charAt(0) : '');\n    initials = String(initials).toUpperCase();\n  }\n  return initials;\n};\n\n/**\n * Function to create an SVG image element with initials based on a given name.\n * @param {string} name - The name from which initials will be extracted to generate the SVG image.\n * @param {string?} bgColor - The color of the background of the image. If null, default black color will be used\n * @returns {SVGElement} - The SVG image element with provided initials or the custom logo if no initials are provided.\n */\nexport const getInitialsSvg = (_name, bgColor = null) => {\n  const initials = getInitials(_name);\n  if (initials) return get_svg(initials, bgColor);\n  return get_svg();\n};\n\n/**\n * Component to create and return an SVG image based on provided initials or a default logo.\n * @param {string} name - The name from which initials will be extracted to generate the image.\n * @param {string?} bgColor - The color of the background of the image. If null, default black color will be used\n * @returns {string} - The base64-encoded SVG image data or an empty string if no name is provided or it's not a browser environment.\n */\nexport const createImg = (name, bgColor = null) => {\n  try {\n    // Check if we're in a browser environment and have required APIs\n    if (typeof window === 'undefined' || !window.btoa || !window.XMLSerializer) {\n      console.warn('createImg requires browser environment with btoa and XMLSerializer support');\n      return '';\n    }\n\n    // Check if a name is provided and the code is running in a browser environment.\n    if (name && isBrowser()) {\n      // Generate an SVG image element with initials based on the provided name.\n      let initials_img = getInitialsSvg(name, bgColor);\n      // Serialize the SVG element to a string.\n      var s = new XMLSerializer().serializeToString(initials_img);\n      // Encode the SVG string to base64.\n      var encodedData = window.btoa(s);\n      // Return the base64-encoded SVG image data.\n      return 'data:image/svg+xml;base64,' + encodedData;\n    }\n  } catch (error) {\n    console.warn('Error creating image:', error);\n  }\n  // Return an empty string if no name is provided or it's not a browser environment.\n  return '';\n};\n","/**\n * Deep‑clone any JSON‑serializable value.\n * Falls back to JSON.parse/JSON.stringify if structuredClone isn't available.\n */\nexport const deepClone = (obj) => {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n};\n","import { toast } from 'sonner';\n\n/**\n * Downloads an array of data as a CSV file and displays a success toast.\n * @param {string} filename - The desired name for the downloaded file.\n * @param {Array} array - An array of objects containing the data to be downloaded.\n * @returns {void}\n */\nexport const downloadCSV = (filename, array) => {\n  // Convert each object in the array to an array of its values\n  const csv = array.map((row) => Object.values(row));\n\n  // Insert the keys of the first object as the header row at the beginning of the CSV\n  csv.unshift(Object.keys(array[0]));\n\n  // Join the CSV array using line breaks\n  const csvArray = csv.join('\\r\\n');\n\n  // Create a new anchor element to trigger the download\n  const a = document.createElement('a');\n\n  // Set the href attribute to encode the CSV data\n  a.href = 'data:attachment/csv,' + encodeURIComponent(csvArray);\n\n  // Open the download in a new tab/window\n  a.target = '_blank';\n\n  // Set the suggested filename for the downloaded file\n  a.download = filename;\n\n  // Simulate a click on the anchor element to trigger the download\n  a.click();\n\n  // Display a toast indicating successful file download\n  toast.success('Downloaded file successfully');\n};\n","import { toast } from 'sonner';\nimport { utils, writeFile } from 'xlsx';\n\n/**\n * Downloads data as an Excel (.xlsx) file.\n *\n * @param {string} filename - The name of the output Excel file.\n * @param {object} data - Data to be written into the Excel file.\n * @returns {void}\n */\nexport const downloadExcel = (filename, data) => {\n  // Check if there is any data to write to the Excel file\n  if (Object.keys(data).length === 0) {\n    return;\n  }\n  // Create a new Workbook\n  const wb = utils.book_new();\n  // Name your sheet\n  Object.keys(data).map((key, index) => {\n    // Ensure the sheet name does not exceed 31 characters\n    const safeKey = key.length > 31 ? key.slice(0, 28) + `_${index}` : key;\n\n    const binaryWS = utils.json_to_sheet(data[key]); // Convert data to a worksheet\n    utils.book_append_sheet(wb, binaryWS, safeKey); // Append the worksheet to the workbook\n  });\n  // Export your excel\n  let final_filename = filename.trim().replace('.xlsx', '') + '.xlsx';\n  // Write the workbook to a file with the final filename\n  writeFile(wb, final_filename);\n  // Display a success toast message\n  toast.success('Downloaded file successfully');\n};\n","const keyMapping = {\n  credit: 'Lookup/Ids',\n  magic_search: 'Domain search',\n  personality_intel: 'Personality',\n  zbizlocator: 'Local search',\n};\n\n// format the credits response\nexport const formatCreditLimits = (creditsTeam) => {\n  if (!creditsTeam) return [];\n  return Object.entries(creditsTeam).map(([key, value]) => ({\n    name: keyMapping[key] || key,\n    ...value,\n  }));\n};\n","/**\n * This function takes a location object as input and combines its city, state, and country properties into a single string.\n * @param {Object} location An object containing location details.\n * @param {string} location.city The city name (optional).\n * @param {string} location.state The state or province name (optional).\n * @param {string} location.country The country name (optional).\n * @returns {string} The combined location string.\n */\nexport const get_combined_location = (location) => {\n  // Create an array containing the city, state, and country properties from the location object.\n  const location_array = [location?.city, location?.state, location?.country]; //, location?.zipcode\n  // Use the filter method to remove any undefined or null elements from the array, leaving only the non-empty values.\n  // Then, join the non-empty values with a comma and space to create the final combined location string.\n  return location_array.filter((a) => a).join(', ');\n};\n","import moment from 'moment';\n\n/**\n * Return the no of days in year or months or days\n * @param {days} -> the number of days\n * @returns {date} -> return in 2years/ 4 months/ 5 days format.\n */\nexport const get_days_to_month_years = (days) => {\n  return [\n    moment.duration(days, 'days').years() &&\n      `${moment.duration(days, 'days').years()} year${\n        moment.duration(days, 'days').years() > 1 ? 's' : ''\n      }`,\n    moment.duration(days, 'days').months() &&\n      `${moment.duration(days, 'days').months()} month${\n        moment.duration(days, 'days').months() > 1 ? 's' : ''\n      }`,\n    (moment.duration(days, 'days').days() > 0 ||\n      (moment.duration(days, 'days').years() === 0 &&\n        moment.duration(days, 'days').months() === 0)) &&\n      `${moment.duration(days, 'days').days()} day${\n        moment.duration(days, 'days').days() > 1 ? 's' : ''\n      }`,\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n};\n","/**\n * This function extracts the domain name from a given URL.\n * @param {string} url The input URL from which the domain name will be extracted.\n * @returns {string} The extracted domain name.\n */\nexport const get_domain_name = (url) => {\n  // Check if the URL is provided. If not, return an empty string.\n  if (!url) {\n    return '';\n  }\n\n  // Create a new URL object from the input URL.\n  const url_obj = new URL(url);\n\n  // Return the hostname of the URL, which represents the domain name.\n  return url_obj.hostname;\n};\n","/**\n * Return the date in DD MMM YYYY format\n * @param {Date} date -> Date to format\n * @returns {Date}\n */\nexport const get_formated_date = (date) => {\n  return new Date(date).toLocaleDateString('en-US', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric',\n  });\n};\n","/**\n * This function takes a URL and formats it to ensure it starts with \"https://\". If the URL is not provided or does not start with \"http\", it will be prefixed with \"https://\" before returning.\n * @param {string} url The URL that needs to be formatted.\n * @returns {string} The formatted URL starting with \"https://\".\n */\nexport const get_formated_url = (url) => {\n  // Check if the URL is not provided (empty or null)\n  if (!url) {\n    // If URL is not provided, return an empty string\n    return '';\n  }\n  // Check if the URL does not start with \"http\"\n  if (url.substr(0, 4) !== 'http') {\n    // If URL does not start with \"http\", prefix it with \"https://\" and return the updated URL\n    return 'https://' + url;\n  }\n  // If URL starts with \"http\", return the URL as it is\n  return url;\n};\n","/**\n * Formats raw team data into a structured format suitable for use within the application.\n * This function takes an array of team invitation data and maps it into a structured array of objects,\n * each containing user data, role, invitation status, creation date, and team invitation ID.\n *\n * Input validation is performed to ensure the data is an array.\n *\n * @param {Array} data - An array of objects representing raw team invitation data.\n * @returns {Array} - An array of formatted objects containing team member details.\n * @throws {Error} - Throws an error if the input is not an array.\n * TODO: Update the Response of Invitation Data from Backend so that we dont want to format data again and again.\n */\n\nexport const formatTeamData = (data) => {\n  if (!Array.isArray(data)) {\n    return [];\n  }\n\n  let formattedData = [];\n\n  if (data[0]?.invitation) {\n    const item = data[0]?.invitation;\n    formattedData.push({\n      user_data: {\n        email: item.send_to_email_id,\n      },\n      role: item.role,\n      invitation_status: item.invitation_status,\n      create_datetime: item.invitation_status === 2 ? item.create_datetime : null,\n      team_invitations_id: item.team_invitations_id,\n    });\n  }\n\n  return data[0]?.invitation\n    ? formattedData\n    : data.map((item) => ({\n        user_data: {\n          email: item.send_to_email_id,\n        },\n        role: item.role,\n        invitation_status: item.invitation_status,\n        create_datetime: item.invitation_status === 2 ? item.create_datetime : null,\n        team_invitations_id: item.team_invitations_id,\n      }));\n};\n","import moment from 'moment';\nimport { get_formated_date } from './get_formated_date';\n/**\n * Return the one day next to the date in DD MMM YYYY format\n * @param {Date} date -> fomrats the date and then\n * @returns {Date} -> adding one day to it.\n */\nexport const get_next_billing_date = (date) => {\n  return get_formated_date(moment(date).add(1, 'days').toISOString());\n};\n","import moment from 'moment';\n\n/**\n * Calculates the number of remaining days between the provided date and a reference date.\n * @param {Date} date_to_differ The date to calculate remaining days for.\n * @param {Date?} date Optional. The reference date. Defaults to the current date.\n * @returns {number} The number of remaining days.\n */\nexport const get_remaining_days = (date_to_differ, date = new Date()) => {\n  // Convert the reference date to a Moment.js object.\n  let moment_date = moment(date);\n\n  // Convert the target date to a Moment.js object for comparison.\n  const expiry_date = moment(date_to_differ);\n\n  // Calculate the difference in days between the reference and target dates.\n  return expiry_date.diff(moment_date, 'days');\n};\n","/**\n * This function is used to retrieve the value of a specific cookie by its name from the document's cookies.\n * @param {string} name The name of the cookie whose value is to be retrieved.\n * @returns {string} The value of the specified cookie if found, otherwise an empty string.\n */\nexport const getCookieValue = (name) => {\n  // Splitting the cookies string into an array of individual cookie strings.\n  const cookies = document.cookie.split('; ');\n\n  // Looping through each cookie to find the one with the specified name.\n  for (let i = 0; i < cookies.length; i++) {\n    // Splitting the current cookie string into its name and value.\n    const cookie = cookies[i].split('=');\n\n    // Checking if the name of the current cookie matches the specified name.\n    if (cookie[0] === name) {\n      // If the name matches, return the value of the cookie.\n      return cookie[1];\n    }\n  }\n  // If the specified cookie name is not found, return an empty string.\n  return '';\n};\n","// import changeEmailFormat from \"./changeEmailFormat\";\n\n/**\n * Get person's contact details\n * @param {Object} person_data -> Person data\n * @returns {Object}\n */\n// const get_contact_details = (person_data) => {\n// \t//get phone number and formatted emails\n// \treturn {\n// \t\tphone: person_data?.phone,\n// \t\temails: changeEmailFormat(person_data?.emails),\n// \t};\n// };\n\n/**\n * Check if person is locked\n * @param {Object} person_data -> Person data\n * @returns {boolean}\n */\nexport const checkIfProfileLocked = (person_data) => {\n  //get the contact details of person\n  // const contact_details = get_contact_details(person_data);\n  //Check if person is locked and has at least one email or phone number\n  return !person_data.unlocked;\n  /*&&\n\t\t((contact_details.emails && contact_details.emails?.length > 0) ||\n\t\t\t(contact_details.phone && contact_details.phone?.length > 0))*/\n};\n\n/**\n * Check if person is unlocked\n * @param {Object} person_data -> Person data\n * @returns {boolean}\n */\nexport const checkIfProfileUnLocked = (person_data) => {\n  // const contact_details = get_contact_details(person_data);\n  //Check if person is unlocked or does not have any email or phone number\n  return person_data.unlocked;\n  /*||\n\t\t!(\n\t\t\t(contact_details.emails && contact_details.emails?.length > 0) ||\n\t\t\t(contact_details.phone && contact_details.phone?.length > 0)\n\t\t)*/\n};\n\n/**\n * get the locked or unlocked profiles in the array of person data\n * @param {Object[]} profiles -> array of Person data\n * @param {boolean?} [unlocked=true] -> Flag to check unlock or lock status, if true check unlock status of profile\n * @returns {Object[]} Locked/Unlocked profiles\n */\nexport const getLockedUnlockProfiles = (profiles = [], unlocked = true) => {\n  return profiles.filter((person_data) => {\n    if (unlocked) {\n      //If no data for emails and phones, let them download\n      return checkIfProfileUnLocked(person_data);\n    }\n    return checkIfProfileLocked(person_data);\n  });\n};\n","import { read, utils } from 'xlsx';\n\n/**\n * This function reads any Excel or CSV from user import\n * @param {File} file - The Excel/CSV file to be read.\n * @param {Function} callback - Function to call when file has been read\n *\n * Callback has the array of objects from the file\n */\nexport const readExcelCSV = (file, callback = () => {}) => {\n  if (file) {\n    const reader = new FileReader();\n    //If the readAsBinaryString function available in the browser\n    if (reader.readAsBinaryString) {\n      reader.onload = function (e) {\n        callback(GetTableFromExcel(e.target.result));\n      };\n      reader.readAsBinaryString(file);\n    } else {\n      //For IE Browser.\n      reader.onload = function (e) {\n        var data = '';\n        var bytes = new Uint8Array(e.target.result);\n        for (let i = 0; i < bytes.byteLength; i++) {\n          data += String.fromCharCode(bytes[i]);\n        }\n        callback(GetTableFromExcel(data));\n      };\n      reader.readAsArrayBuffer(file);\n    }\n  }\n};\n\nfunction GetTableFromExcel(data) {\n  //Read the Excel File data in binary\n  const workbook = read(data, {\n    type: 'binary',\n  });\n\n  //get the name of First Sheet.\n  const Sheet = workbook.SheetNames[0];\n\n  //Read all rows from First Sheet into an JSON array.\n  const excelRows = utils.sheet_to_row_object_array(workbook.Sheets[Sheet]);\n\n  return excelRows;\n}\n","// For Linkedin URLs\nexport const refactor_ln_urls = (original_url) => {\n  let url = original_url;\n  //we need to get only username\n  if (url.includes('linkedin.com/in/')) {\n    //Get the linkedin user name, get only username\n    const username = url\n      .replace(/(https?:\\/\\/(www.|de.)?linkedin.com\\/(mwlite\\/|m\\/)?in\\/\\/?)/g, '')\n      .split('/')?.[0];\n    //Create linkedin url using username\n    url = 'https://linkedin.com/in/' + username;\n  }\n  //If linkedin company, we have to add this because sometimes\n  //linkedin.com/company/username/about/ or /jobs or anything comes\n  //we need to get only company slug\n  if (url.includes('linkedin.com/company/')) {\n    //Get the linkedin company name, get only username\n    const username = url\n      .replace(/(https?:\\/\\/(www.|de.)?linkedin.com\\/(mwlite\\/|m\\/)?company\\/\\/?)/g, '')\n      .split('/')?.[0];\n    //Create linkedin url using username\n    url = 'https://linkedin.com/company/' + username;\n  }\n  return url;\n};\n","import { isBrowser } from './isBrowser';\n\n// Scroll behavior options.\nconst scrollOptions = { behavior: 'smooth', block: 'start', inline: 'nearest' };\n\n/**\n * Scrolls to the element with the specified 'id'.\n * @param {string} id - The id of the element to scroll to.\n */\nexport const scrollToById = (id) => {\n  // Define an interval that runs every 200 milliseconds.\n  const interval = setInterval(() => {\n    // Attempt to retrieve the element with the given 'id'.\n    const element = document.getElementById(id);\n    if (element) {\n      // If the element is found, clear the interval to stop checking.\n      clearInterval(interval);\n      // Scroll the element into view with the specified scroll behavior options.\n      element.scrollIntoView(scrollOptions);\n    }\n  }, 200);\n};\n\n/**\n * Scrolls to the element indicated by the 'href' attribute of the event target.\n * @param {Event} e - The event triggered when calling the function.\n */\nexport const scrollTo = (e) => {\n  // Check if the code is running in a browser environment.\n  if (isBrowser()) {\n    // Prevent the default action of the event (e.g., following a link).\n    e.preventDefault();\n    // Find the element based on the 'href' attribute of the event target.\n    let doc = document.querySelector(e.target.getAttribute('href'));\n    // Scroll the element into view with the specified scroll behavior options.\n    doc.scrollIntoView(scrollOptions);\n  }\n};\n","/**\n * This file contains the helper function for Table Component\n */\n\n/**\n * Compare a given string with a query to determine\n * if they match after trimming and case normalization.\n *\n * @param {string} string_to_match - The string to be compared.\n * @param {string} query - The query string for comparison.\n * @returns {boolean} True if the strings match, otherwise false.\n */\nconst filter_string = (string_to_match, query) => {\n  // If either the string or the query is empty, return false.\n  if (!string_to_match || !query) {\n    return false;\n  }\n  // Convert both the string and the query to lowercase after trimming\n  // and check if the query is included in the string.\n  if (string_to_match?.trim().toLowerCase().includes(query?.trim().toLowerCase())) {\n    return true; // If the query is found in the string, return true.\n  }\n  return false; // If no match is found, return false.\n};\n\n/**\n * Filter an array of values or objects based on a query value.\n *\n * @param {Array} array - The array to be filtered.\n * @param {string} val - The query value for filtering.\n * @returns {boolean} True if a matching value is found, otherwise false.\n */\nconst filter_array = (array = [], val) => {\n  // Check if any element in the array matches the given query value.\n  return array.some((a) => {\n    if (typeof a === 'object') {\n      // If the element is an object, check if any of its values match the query.\n      return Object.values(a).some((b) => filter_string(b, val));\n    }\n    // If the element is not an object, directly check if it matches the query.\n    return filter_string(a, val);\n  });\n};\n\n/**\n * Filter rows based on a given field name, values, and a query.\n *\n * @param {string} element - Field name for which we will check the data e.g. full_name.\n * @param {Object|Array|string} values - Values to be filtered.\n * @param {string} query - Query value for filtering.\n * @returns {boolean} True if a match is found, otherwise false.\n */\nexport const table_filter_rows = (element, values, query) => {\n  // If the element is missing, return false.\n  if (!element) {\n    return false;\n  }\n\n  //If field name has \".\", it means it's an key from the object\n  //Split it, e.g. user_data.name -> we have to match the query for name in user_data\n  const props = element.split('.');\n  let string_to_match;\n\n  //If values is object and values has the item field\n  if (typeof values === 'object' && values[element]) {\n    //Get the value of the field\n    string_to_match = values[element];\n  } else {\n    //else check if values is not array, it contains the first item from the props\n    //e.g. Check if values contains \"user_data\"\n    string_to_match =\n      typeof values === 'object' && !Array.isArray(values) ? values[props[0]] : values;\n  }\n  //If no value found to match, return false\n  if (!string_to_match) {\n    return false;\n  }\n  //Else start filtering\n  let filtered = false;\n\n  // If the string_to_match is an array, use filter_array function for filtering.\n  if (Array.isArray(string_to_match)) {\n    filtered = filter_array(string_to_match, query);\n  } else if (typeof string_to_match === 'object') {\n    // Understand by example\n    // props->[\"user_data\", \"name\"]\n    if (props.length > 1) {\n      let i = 0,\n        prop;\n      //now we have user_data in the obj\n      let obj = { ...values };\n      //TODO: Something is wrong here, i should start with 1, do check\n      for (; i < props.length - 1; i++) {\n        prop = props[i];\n        obj = obj[prop];\n      }\n      string_to_match = obj[props[i]];\n      // If nested property filtering matches, return true.\n      if (table_filter_rows('', string_to_match, query)) {\n        return true;\n      }\n    } else {\n      // Use filter_rows function on nested object values.\n      filtered = Object.values(string_to_match).some((a) => table_filter_rows('', a, query));\n    }\n  } else {\n    // Convert string_to_match to string and use filter_string function for filtering.\n    string_to_match += '';\n    filtered = filter_string(string_to_match, query);\n  }\n  return filtered;\n};\n","/**\n * This function converts an underscore-separated string into a normal text format with capitalized words.\n * @param {string} input The underscore-separated string to be converted (e.g., 'work_phone').\n * @returns {string} The converted string with spaces and capitalized words (e.g., 'Work Phone').\n */\n\nexport const underscoresNormalText = (input) => {\n  return input\n    .split('_') // Split the string into parts by underscores\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1)) // Capitalize each part\n    .join(' '); // Join the parts with spaces\n};\n","/**\n * This function takes in three parameters and returns a modified string.\n * @param {number} count The number of items to determine whether to add the postfix or not.\n * @param {string} text The main text to which the postfix may be appended.\n * @param {string} postfix The postfix string that will be added to the main text when the count is greater than 1. Default is \"s\".\n * @returns {string} The modified string with the postfix added based on the count value.\n */\nexport const updatePlural = (count, text, postfix = 's') => {\n  // Concatenate the main text and the postfix (if required) and return the result.\n  return text + (count > 1 ? postfix : '');\n};\n","import { useState, useEffect } from 'react';\n/**\n * This custom hook is used to track whether an element is currently visible on the screen\n * (in the viewport).\n * @param {React.MutableRefObject} ref A ref that points to the element to be observed\n * for visibility.\n * @returns {boolean} A boolean value representing whether the observed element is\n * currently visible on the screen.\n */\nexport const useOnScreen = (ref) => {\n  // State to keep track of whether the element is intersecting the viewport.\n  const [isIntersecting, setIntersecting] = useState(false);\n\n  useEffect(() => {\n    // Create a new IntersectionObserver instance.\n    const observer = new IntersectionObserver(([entry]) => {\n      // When the intersection state changes and the element becomes visible on the screen,\n      // update the isIntersecting state to true.\n      if (!isIntersecting) setIntersecting(entry.isIntersecting);\n    });\n\n    // Check if the ref is available and the element is not yet intersecting.\n    // If both conditions are true, start observing the element.\n    if (ref.current && !isIntersecting) {\n      observer.observe(ref.current);\n    } else {\n      // If the element is already intersecting or the ref is not available, stop observing the element.\n      observer.unobserve(ref.current);\n    }\n\n    // Clean up the observer when the component is unmounted or the state isIntersecting changes.\n    return () => {\n      observer.disconnect();\n    };\n  }, [isIntersecting, ref]);\n\n  // Return the boolean value indicating whether the element is currently visible on the screen.\n  return isIntersecting;\n};\n","import { useRouter } from 'next/router';\nimport { useMemo } from 'react';\n\n/**\n * This function Extract Search Params from URL\n * e.g. www.zintlr/id?=someId\n */\nexport const useQuery = () => {\n  const { query } = useRouter();\n  return useMemo(() => query, [query]);\n};\n","import { createContext, useContext } from 'react';\n\n/**\n * This code defines a context and a custom hook for the all pages.\n * provides a default value containing different user properties which can be used all over the website\n * Also contains the banner data to show\n */\nexport const UserContext = createContext({\n  details: undefined, //user details page\n  isLoggedIn: undefined, //to check if user is logged in or not\n  bannerData: undefined, //to store the banner data\n});\n\n// Creating a custom hook called useUser,\n// which will allow components to access the UserContext.\nexport const useUser = () => useContext(UserContext);\n","import { useState, useCallback, useEffect } from 'react';\nimport { isBrowser } from './isBrowser';\n\n/**\n * To get width and height of the screen, use this hook\n * This custom hook tracks the window size and updates the state with the current width and height.\n * @returns {Object} An object containing the width and height of the window.\n */\nexport const useWindowSize = () => {\n  // State to hold the current window size\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  // Handler to be called on window resize\n  const handleResize = useCallback(() => {\n    // Set window width/height to state\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n  }, [setWindowSize]);\n\n  useEffect(() => {\n    // Check if the code is running in a browser environment\n    if (isBrowser) {\n      // Add event listener for window resize events\n      window.addEventListener('resize', handleResize);\n\n      // Call the handler right away to update state with the initial window size\n      handleResize();\n\n      // Remove the event listener on cleanup to avoid memory leaks\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [handleResize]);\n\n  // Return the current window size\n  return windowSize;\n};\n","/**\n * Formats phone numbers from input data into a structured array\n * @param {Object} data - Input data containing phone information\n * @returns {Array} Array of tuples containing phone type and numbers\n */\nexport const formatPhoneNumbers = (data) => {\n  // Early return if no phone data exists\n  if (!data?.phone?.length) return [];\n\n  // Handle case where phone is an array of strings\n  if (typeof data.phone[0] === 'string') {\n    return [['', data.phone]];\n  }\n\n  // Group phone numbers by subtype using reduce\n  return Object.entries(\n    data.phone.reduce((acc, { subtype = '', ph }) => {\n      // Skip if phone number is falsy\n      if (!ph) return acc;\n\n      // Initialize array for subtype if doesn't exist\n      if (!acc[subtype]) {\n        acc[subtype] = [];\n      }\n\n      acc[subtype].push(ph);\n      return acc;\n    }, {})\n  );\n};\n\n/**\n * Formats email addresses into an array of objects\n * @param {Array} emails - Array of email addresses\n * @returns {Array} Array of objects with email addresses\n */\nexport const formatEmails = (emails) => {\n  return emails?.map((email) => ({ address: email }));\n};\n\n/**\n * Formats contact details from raw data into a structured object\n * Common Contact Formatter\n * @param {Object} data - Raw contact data\n * @param {string} from - Source of the contact data\n * @returns {Object} Formatted contact details object containing name, phone, emails and other info\n */\nexport const formatContactDetails = (data, from) => {\n  // Construct and return formatted contact object\n  return {\n    // Get name from either person_name or full_name\n    name: data?.person_name || data?.full_name,\n    // Format phone numbers using person_phs or phone data\n    phone: formatPhoneNumbers(data?.person_phs || data?.phone),\n    // Format emails using person_emails or use existing emails array\n    emails: formatEmails(data?.person_emails) || data?.emails,\n    // Get ID from either person_din or _id\n    _id: data?.person_din || data?._id,\n    // Group additional info like flags and credits\n    info: {\n      flags: data?.person_flags,\n      credits: data?.email_credits + data?.phone_credits,\n      email_credits: data?.email_credits,\n      phone_credits: data?.phone_credits,\n    },\n    // Social media links\n    linkedin_url: data?.social_urls?.linkedin_url,\n    // Source and unlock status\n    from: from,\n    isEmailUnlocked: data?.email_unlocked,\n    isPhoneUnlocked: data?.phone_unlocked,\n  };\n};\n","import * as jwt from 'jsonwebtoken';\n\n/**\n * Hashing function to hash text by using SHA256\n * @param {object} obj\n * @param {string} secrete\n * @returns {string} JWT Token\n */\nexport function create_jwt(obj, secrete, options) {\n  return jwt.sign(obj, secrete, options);\n}\n\nexport function verify_and_decrypt_jwt(token, secret) {\n  try {\n    return jwt.verify(token, secret);\n  } catch (_) {\n    // console.error('JWT verification error:', error.message);\n    return null;\n  }\n}\n\n/**\n * Retrieves the client's IP address from the request object.\n * @param {Object} request The request object containing client information.\n * @returns {string} The client's IP address.\n */\nexport function getIP(request) {\n  let ip = request.ip ?? request?.['x-real-ip'];\n  let forwardedFor = request?.['x-forwarded-for'];\n  //If cloudflare is enabled,then it changes x-forwarded-for with cloudflare ip, use cf-connecting-ip to get the real ip\n  if (process.env.CLOUDFLARE_ENABLED === 'true') {\n    forwardedFor = request?.['cf-connecting-ip'];\n  }\n  // Consider cloudflare data more one priority list, replacing ip with forwardedFor data of cf.\n  if (forwardedFor) {\n    try {\n      if (Array.isArray(forwardedFor)) {\n        ip = forwardedFor?.[0];\n      } else {\n        ip = forwardedFor.split(',')?.[0];\n      }\n    } catch (_) {\n      ip = 'Unknown';\n    }\n  }\n  if (!ip) {\n    ip = 'Unknown';\n  }\n  return ip;\n}\n","// validation-config.js\nlet validationConfig = {};\nlet isConfigInitialized = false;\n\n/**\n * Set validation configuration from consumer project\n * @param {Object} config - Validation configuration object\n */\nexport const setValidationConfig = (config) => {\n  validationConfig = { ...config };\n  isConfigInitialized = true;\n  console.log('✅ Validation configuration set successfully');\n  console.log(`📊 Configured ${Object.keys(config).length} validation rules`);\n};\n\n/**\n * Get validation schema for a specific endpoint\n * @param {string} endpoint - The endpoint/route key\n * @returns {Object|null} - Yup validation schema or null\n */\nexport const getValidationSchema = (endpoint) => {\n  if (!isConfigInitialized) {\n    console.warn('⚠️ Validation config not initialized. Call setValidationConfig() first.');\n    return null;\n  }\n\n  const schema = validationConfig[endpoint];\n  if (!schema) {\n    console.warn(`⚠️ No validation schema found for endpoint: ${endpoint}`);\n    return null;\n  }\n\n  return schema;\n};\n\n/**\n * Get all validation configurations\n * @returns {Object} - Complete validation config object\n */\nexport const getAllValidationSchemas = () => {\n  return validationConfig;\n};\n\n/**\n * Check if config is initialized\n * @returns {boolean}\n */\nexport const isValidationConfigInitialized = () => {\n  return isConfigInitialized;\n};\n\n/**\n * Reset configuration (useful for testing)\n */\nexport const resetValidationConfig = () => {\n  validationConfig = {};\n  isConfigInitialized = false;\n};\n\n// Export all functions\nexport const validationManager = {\n  setValidationConfig,\n  getValidationSchema,\n  getAllValidationSchemas,\n  isValidationConfigInitialized,\n  resetValidationConfig,\n};\n\nexport default validationManager;\n","import axios from 'axios';\nimport { toast } from '../components/Toast.js';\nimport * as yup from 'yup';\nimport { getIP } from './_common.handlers.js';\nimport { getValidationSchema } from '../configs/validator-config.js';\n\nexport const ErrorObject = {\n  message: '',\n  success: false,\n  code: 400,\n  data: {},\n};\n\nexport function isMethodProper(method) {\n  return ['post', 'put', 'delete'].includes(method);\n}\n\nexport const requestAbortCode = -100;\n\n/**\n * TODO Better documentation & Error handling\n * Core request handler - accepts all configuration as parameters\n */\nexport function request_caller({\n  method = 'post',\n  endpoint = '',\n  data = {},\n  successToast = false,\n  errorToast = true,\n  headers = {},\n  controller = null,\n  forceValidationSchema = null,\n  skipValidation = false,\n  domain = null,\n  // Toast and logging functions\n  logFn = console.log,\n}) {\n  return new Promise((resolve, reject) => {\n    const responseObj = { ...ErrorObject };\n\n    // Method validation\n    if (!isMethodProper(method)) {\n      responseObj.message = 'Method is not allowed';\n      reject(responseObj);\n      return;\n    }\n\n    logFn?.('Request:', {\n      method,\n      endpoint,\n      data,\n    });\n\n    let finalDomain = domain ?? process.env.NEXT_PUBLIC_FRONTEND_URL + '/api/';\n\n    // Domain validation important for better error handling\n    if (!finalDomain) {\n      responseObj.message = 'Domain is required';\n      reject(responseObj);\n      return;\n    }\n\n    if (!skipValidation) {\n      if (getValidationSchema(endpoint) || getValidationSchema(forceValidationSchema)) {\n        let validationSchema = getValidationSchema(endpoint);\n        if (forceValidationSchema) {\n          validationSchema = getValidationSchema(forceValidationSchema);\n        }\n        const validations = yup.object().shape(validationSchema);\n        try {\n          validations.validateSync(data);\n          logFn?.('Validation passed', data);\n        } catch (error) {\n          //If the body is invalid, send the error and reject the promise\n          responseObj.message = error.errors.join(', ');\n          toast.error(responseObj.message);\n          reject(responseObj);\n          return;\n        }\n      }\n    }\n\n    // This is for the server side request to get the ip address ( Node is changing the ip address thats why we are using this method )\n    if (headers && Object.keys(headers).length > 0) {\n      data['browser-ip-address'] = getIP(headers);\n    }\n\n    const req_obj = {\n      method: method,\n      url: finalDomain + endpoint,\n      data: method !== 'get' ? data : {},\n      responseType: 'json',\n      headers: headers,\n      withCredentials: true,\n      crossDomain: true,\n    };\n\n    logFn?.('Request object:', req_obj);\n\n    if (controller && controller instanceof AbortController) {\n      req_obj.signal = controller.signal;\n    }\n\n    // Axios request\n    return axios\n      .request(req_obj)\n      .then((res) => {\n        const data = res.data;\n        if (data.success) {\n          if (successToast) {\n            toast.success(data.message);\n          }\n          resolve(data);\n        } else {\n          if (errorToast) {\n            toast.error(data.message);\n          }\n          reject(data);\n        }\n      })\n      .catch((error) => {\n        let err = {};\n        // Log the error and request object\n        if (logFn) {\n          logFn('Request error:', error);\n          logFn('Request object:', req_obj);\n        }\n        if (error && error?.response?.status === 0 && error?.message) {\n          responseObj.message = error.message;\n          err = responseObj;\n        } else if (\n          error &&\n          error?.response?.data?.success === false &&\n          error?.response?.data?.message\n        ) {\n          err = error.response.data;\n        } else if (axios.isCancel(error)) {\n          responseObj.code = requestAbortCode;\n          responseObj.message = 'Cancelled';\n          err = responseObj;\n        } else {\n          // Log the error and request object\n          if (logFn) {\n            logFn('Request error:', error);\n            logFn('Request object:', req_obj);\n          }\n          responseObj.message =\n            'Something went wrong on our side. Please try again. Sorry for the inconvenience';\n          err = responseObj;\n        }\n\n        if (controller && controller instanceof AbortController && controller.signal.aborted) {\n          err.code = requestAbortCode;\n        }\n\n        if (\n          !controller ||\n          (controller && controller instanceof AbortController && !controller.signal.aborted)\n        ) {\n          // Log the error\n          if (logFn) {\n            logFn('Error details:', err.message);\n          }\n          if (errorToast) {\n            toast.error(err.message);\n          }\n        }\n        reject(err);\n      });\n  });\n}\n\nexport default request_caller;\n","import axios from 'axios';\nimport { ErrorObject } from './request-handler';\nimport { getIP, verify_and_decrypt_jwt } from './_common.handlers';\n\n// Browser-compatible cookie parser\nfunction parseCookies(cookieString) {\n  const cookies = {};\n  if (!cookieString) return cookies;\n\n  cookieString.split(';').forEach((cookie) => {\n    const [name, value] = cookie.trim().split('=');\n    if (name && value) {\n      cookies[name] = decodeURIComponent(value);\n    }\n  });\n\n  return cookies;\n}\n\n/**\n * TODO Better documentation & Error handling\n * This method is the global method for calling API request on the server.\n * @param {object} CustomRequestObject\n * @param {string} CustomRequestObject.method - Accepted methods \"get\", \"post\", \"put\", \"delete\"\n * @param {string} CustomRequestObject.endpoint - API Endpoint.\n * @param {object} CustomRequestObject.data - Data to send with Request.\n * @param {Request} CustomRequestObject.req - Request Object from the request\n * @param {Response} CustomRequestObject.res - Response Object for the request\n * @param {Boolean} CustomRequestObject.isAuthRequired - Authentication\n * @param {Function} CustomRequestObject.successCallback - Callback function for successful response\n * @param {Function} CustomRequestObject.errorCallback - Callback function for failed response\n * @param {string} CustomRequestObject.apiUrl - Base API URL\n * @param {Function} CustomRequestObject.logFn - Logging function\n */\nexport function serverRequestHandler({\n  method = 'get',\n  endpoint = '',\n  data = {},\n  req = null,\n  res = null,\n  isAuthRequired = false,\n  successCallback = () => {},\n  errorCallback = () => {},\n  isSourceRequired = false,\n  logFn = console.log,\n  apiUrl,\n}) {\n  if (!req || !res) {\n    return;\n  }\n\n  data = {\n    ...req.body,\n    ...data,\n    ...(isSourceRequired && { source: process.env.NEXT_PUBLIC_PLATFORM_SOURCE }),\n  };\n\n  const headers = {};\n  // Captcha token is just to check the authenticity\n  headers['Captcha-Token'] = process.env.NEXT_PUBLIC_CAPTCHA_TOKEN;\n\n  const API_URL = apiUrl ?? process.env.NEXT_PUBLIC_API_URL;\n\n  let options = {\n    method: method,\n    url: API_URL + endpoint,\n    headers: headers,\n  };\n\n  const cookies = parseCookies(req.headers.cookie);\n\n  //If auth is required or it doesn't matter if logged in or not\n  //e.g. Pricing page shows different packages for users\n  //If auth is requrired\n  if (isAuthRequired) {\n    let isLoggedIn = req.headers.cookie;\n\n    if (isLoggedIn) {\n      //Check if key, access token and auth token are present\n      isLoggedIn = cookies.key && cookies.access_token;\n    }\n\n    //If not logged in and it doesn't work without authentication, throw error\n    if (!isLoggedIn) {\n      const errorObj = { ...ErrorObject };\n      errorObj['message'] = 'Log in first';\n      errorObj.code = 400;\n      res.status(errorObj.code).json(errorObj);\n      return;\n    }\n    //If logged in, decrypt key and access_token coming from cookies\n    // const key = cipher_decryption(cookies.key, process.env.CIPHER);\n    // const access_token = cipher_decryption(cookies.access_token, process.env.CIPHER);\n\n    // The above cipher_decryption is creating irregularity across the platforms,\n    // That's why we are using consistent encryption using jwt.\n    const key = verify_and_decrypt_jwt(cookies.key, process.env.CIPHER);\n    const access_token = verify_and_decrypt_jwt(cookies.access_token, process.env.CIPHER);\n\n    //Add token in headers\n    options.headers.Authorization = access_token;\n    data.key = key;\n  }\n\n  if (cookies) {\n    const visitorId = cookies['visitor-id'] || null;\n    // Adding \"visitor-id\"\n    if (visitorId) {\n      options.headers['visitor-id'] = visitorId;\n    }\n  }\n\n  // Get IP address from request data or fallback to getIP helper\n  const ipAddress = data['browser-ip-address'] || getIP(req.headers);\n\n  // Only delete if it exists to avoid unnecessary operation\n  if (data['browser-ip-address']) {\n    delete data['browser-ip-address'];\n  }\n\n  options.headers['client-ip-address'] = ipAddress;\n  data.ip_address = ipAddress;\n\n  options = {\n    ...options,\n    params: method === 'get' ? data : {},\n    data: method !== 'get' ? data : {},\n    responseType: 'json',\n  };\n\n  if (logFn) {\n    logFn(options);\n  }\n\n  return axios\n    .request(options)\n    .then((result) => {\n      if (result?.data?.success) {\n        //Cache for get requests\n        if (method === 'get') {\n          res.setHeader('Cache-Control', 'public, s-maxage=59, stale-while-revalidate=59');\n        }\n        successCallback(result.data);\n        res.status(200).send(JSON.stringify(result.data));\n      } else {\n        res.status(400).json(result.data);\n      }\n    })\n    .catch((error) => {\n      let err = error?.response?.data || { ...ErrorObject };\n\n      if (logFn) {\n        logFn('================================================');\n        logFn(error);\n        logFn('================================================');\n      }\n\n      if (error && error?.response?.status === 0 && error?.message) {\n        err = { ...ErrorObject };\n        err.message = error.message;\n        err.code = 500;\n      }\n      if (error && error?.response?.status === 502) {\n        err = { ...ErrorObject };\n        err.message = 'Server is down.';\n        err.code = 500;\n      }\n\n      errorCallback(err);\n      res.status(err?.code === 500 ? 500 : 400).json(err);\n    });\n}\n\nexport default serverRequestHandler;\n"]}