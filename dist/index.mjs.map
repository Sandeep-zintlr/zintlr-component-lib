{"version":3,"sources":["../src/components/Toast.js","../src/components/Counter.js","../src/components/Example.js","../src/helpers/base64ToFile.js","../src/helpers/checkCreditSumLimits.js","../src/helpers/isBrowser.js","../src/helpers/click_chat_fun.js","../src/helpers/combineTeamAndInvitedata.js","../src/helpers/create_img.js","../src/helpers/deepClone.js","../src/helpers/formatCreditLimits.js","../src/helpers/get_invitation_formated_data.js","../src/helpers/getLockedUnlockProfiles.js","../src/helpers/refactor_ln_urls.js","../src/helpers/scrollTo.js","../src/helpers/table-helper.js","../src/helpers/userStateUpdate.js"],"names":["ToastWrapper","position","expand","richColors","closeButton","props","React","Toaster","Counter","initialCount","onCountChange","count","setCount","useState","lastUpdate","setLastUpdate","useEffect","toast","increment","useCallback","prevCount","decrement","reset","resolve","Example","detectMimeType","b64","signatures","s","i","fromBase64ToFile","limitConfigs","checkCreditSumLimits","_ignored","updatedRows","sums","isNonEditable","name","acc","limits","key","value","exceeded","details","label","isBrowser","click_chat_fun","elements","combineTeamAndInviteData","allocated_limits","unallocated_limits","teamData","inviteData","formattedData","member","invite","restructureData","tableData","team_limits","invite_limits","user_id_hash","data","imageColors","fnBrowserDetect","userAgent","browserName","logo_img","get_svg","initials","imageColor","svg","y_margin","getInitials","_name","english","lname","a","getInitialsSvg","bgColor","deepClone","obj","keyMapping","formatCreditLimits","creditsTeam","formatTeamData","_a","_b","_c","item","checkIfProfileLocked","person_data","checkIfProfileUnLocked","refactor_ln_urls","original_url","url","scrollOptions","scrollToById","id","interval","element","filter_string","string_to_match","query","filter_array","array","val","b","table_filter_rows","values","filtered","prop","UserContext","createContext","useUser","useContext"],"mappings":"2LAIaA,IAAAA,CAAAA,CAAe,CAAC,CAC3B,QAAA,CAAAC,EAAW,cACX,CAAA,MAAA,CAAAC,EAAS,KACT,CAAA,UAAA,CAAAC,CAAa,CAAA,IAAA,CACb,YAAAC,CAAc,CAAA,IAAA,CACd,GAAGC,CACL,CAAA,GAEIC,EAAA,aAACC,CAAAA,OAAAA,CAAA,CACC,QAAA,CAAUN,EACV,MAAQC,CAAAA,CAAAA,CACR,WAAYC,CACZ,CAAA,WAAA,CAAaC,EACZ,GAAGC,CAAAA,CACN,ECfSG,IAAAA,CAAAA,CAAU,CAAC,CAAE,YAAA,CAAAC,EAAe,CAAG,CAAA,aAAA,CAAAC,CAAc,CAAA,GAAM,CAC9D,GAAM,CAACC,EAAOC,CAAQ,CAAA,CAAIC,SAASJ,CAAY,CAAA,CACzC,CAACK,CAAAA,CAAYC,CAAa,CAAIF,CAAAA,QAAAA,CAAS,IAAI,CAGjDG,CAAAA,SAAAA,CAAU,IAAM,CACdD,CAAAA,CAAc,IAAI,IAAA,GAAO,kBAAmB,EAAC,CAGzCL,CAAAA,CAAAA,EACFA,EAAcC,CAAK,CAAA,CAIjBA,CAAU,GAAA,CAAA,EAAKA,EAAQ,EAAO,GAAA,CAAA,EAChCM,MAAM,OAAQ,CAAA,CAAA,mBAAA,EAAsBN,CAAK,CAAG,CAAA,CAAA,EAEhD,CAAG,CAAA,CAACA,EAAOD,CAAa,CAAC,EAGzB,IAAMQ,CAAAA,CAAYC,YAAY,IAAM,CAClCP,CAAUQ,CAAAA,CAAAA,EAAcA,EAAY,CAAC,EACvC,EAAG,EAAE,EAGCC,CAAYF,CAAAA,WAAAA,CAAY,IAAM,CAClCP,EAAUQ,CAAcA,EAAAA,CAAAA,CAAY,CAAC,EACvC,CAAA,CAAG,EAAE,CAAA,CAGCE,CAAQH,CAAAA,WAAAA,CAAY,IAAM,CAC9BF,KAAAA,CAAM,QACJ,IAAI,OAAA,CAASM,GAAY,CACvB,UAAA,CAAW,IAAM,CACfX,EAASH,CAAY,CAAA,CACrBc,IACF,CAAA,CAAG,GAAG,EACR,CAAC,CACD,CAAA,CACE,QAAS,sBACT,CAAA,OAAA,CAAS,8BACT,KAAO,CAAA,yBACT,CACF,EACF,CAAA,CAAG,CAACd,CAAY,CAAC,CAEjB,CAAA,OACEH,CAAA,CAAA,aAAA,CAAC,OAAI,SAAU,CAAA,mBAAA,CAAA,CACbA,CAAA,CAAA,aAAA,CAAC,UAAG,WAAUK,CAAAA,CAAM,EACpBL,CAAA,CAAA,aAAA,CAAC,SAAE,gBAAeQ,CAAAA,CAAW,CAC7BR,CAAAA,CAAAA,CAAA,cAAC,KAAI,CAAA,CAAA,SAAA,CAAU,mBACbA,CAAA,CAAA,aAAA,CAAC,UAAO,OAASe,CAAAA,CAAAA,CAAAA,CAAW,GAAC,CAAA,CAC7Bf,EAAA,aAAC,CAAA,QAAA,CAAA,CAAO,QAASgB,CAAO,CAAA,CAAA,OAAK,EAC7BhB,CAAA,CAAA,aAAA,CAAC,QAAO,CAAA,CAAA,OAAA,CAASY,GAAW,GAAC,CAC/B,CACF,CAEJ,EC1DaM,IAAAA,CAAAA,CAAU,IACdlB,CAAA,CAAA,aAAA,CAAC,WAAI,mBAAiB,ECE/B,SAASmB,CAAeC,CAAAA,CAAAA,CAAK,CAE3B,IAAMC,EAAa,CACjB,OAAA,CAAS,kBACT,QAAU,CAAA,WAAA,CACV,SAAU,WACV,CAAA,WAAA,CAAa,WACb,CAAA,IAAA,CAAM,YACN,GAAK,CAAA,WAAA,CACL,EAAG,WACH,CAAA,CAAA,CAAG,YACH,CAAG,CAAA,YAAA,CACH,CAAG,CAAA,iBAAA,CACH,EAAG,WACH,CAAA,QAAA,CAAU,oEACZ,CAAA,CAEA,QAAWC,CAAKD,IAAAA,CAAAA,CAAY,CAC1B,IAAME,EAAIH,CAAI,CAAA,OAAA,CAAQE,CAAC,CAEvB,CAAA,GAAIC,IAAM,CAAKA,EAAAA,CAAAA,GAAM,CAEnB,CAAA,OAAOF,EAAWC,CAAC,CAEvB,CACF,CAOO,SAASE,EAAiBF,CAAG,CAAA,CAGlC,OADc,OAAA,CAAUH,EAAeG,CAAC,CAAA,CAAI,WAAaA,CAE3D,CCtCA,IAAMG,EAAe,CACnB,CAAE,IAAK,kBAAoB,CAAA,KAAA,CAAO,kBAAmB,CACrD,CAAA,CAAE,GAAK,CAAA,iBAAA,CAAmB,MAAO,mBAAoB,CAAA,CACrD,CAAE,GAAK,CAAA,YAAA,CAAc,MAAO,cAAe,CAAA,CAC3C,CAAE,GAAA,CAAK,SAAU,KAAO,CAAA,SAAU,EAClC,CAAE,GAAA,CAAK,eAAgB,KAAO,CAAA,eAAgB,CAC9C,CAAA,CAAE,IAAK,mBAAqB,CAAA,KAAA,CAAO,mBAAoB,CACvD,CAAA,CAAE,IAAK,aAAe,CAAA,KAAA,CAAO,cAAe,CAC9C,EAUaC,EAAuB,CAAA,CAACC,CAAUC,CAAAA,CAAAA,GAAgB,CAE7D,IAAMC,CAAAA,CAAOD,CACV,CAAA,MAAA,CAAO,CAAC,CAAE,aAAA,CAAAE,EAAe,IAAAC,CAAAA,CAAK,IAAM,CAACD,CAAAA,EAAiBC,CAAS,GAAA,qBAAqB,EACpF,MAAO,CAAA,CAACC,EAAK,CAAE,MAAA,CAAAC,CAAO,CACrBR,IAAAA,CAAAA,CAAa,OAAQ,CAAA,CAAC,CAAE,GAAAS,CAAAA,CAAI,IAAM,CAChC,IAAMC,EAAQ,MAAOF,CAAAA,CAAAA,CAAOC,CAAG,CAAC,GAAK,CACrCF,CAAAA,CAAAA,CAAIE,CAAG,CAAKF,CAAAA,CAAAA,CAAAA,CAAIE,CAAG,CAAK,EAAA,CAAA,EAAKC,EAC/B,CAAC,EACMH,CACN,CAAA,CAAA,EAAE,CAGDI,CAAAA,CAAAA,CAAWX,EAAa,MAAO,CAAA,CAAC,CAAE,GAAA,CAAAS,CAAI,CAAOL,GAAAA,CAAAA,CAAAA,CAAKK,CAAG,CAAK,EAAA,CAAA,EAAK,GAAG,CACxE,CAAA,GAAIE,CAAS,CAAA,MAAA,CAAQ,CACnB,IAAMC,CAAAA,CAAUD,EAAS,GAAI,CAAA,CAAC,CAAE,GAAAF,CAAAA,CAAAA,CAAK,KAAAI,CAAAA,CAAM,IAAM,CAAGA,EAAAA,CAAK,CAAKT,EAAAA,EAAAA,CAAAA,CAAKK,CAAG,CAAC,CAAA,EAAA,CAAI,CAC3E,CAAA,OAAAvB,MAAM,KAAM,CAAA,CAAA,kCAAA,EAAqC0B,EAAQ,IAAK,CAAA,IAAI,CAAC,CAAG,CAAA,CAAA,CAAA,CAC/D,KACT,CAEA,OAAO,KACT,ECtCe,SAARE,CAA6B,EAAA,CAElC,OAAO,OAAO,MAAA,CAAW,GAC3B,CCLO,SAASC,EAAiB,EAAA,CAC/B,GAAID,CAAU,EAAA,CAAG,CACf,IAAIE,CAAAA,CAAW,QAAS,CAAA,sBAAA,CAAuB,mBAAmB,CAC9DA,CAAAA,CAAAA,EAAYA,EAAS,MAAS,CAAA,CAAA,EAChCA,EAAS,CAAC,CAAA,CAAE,KAAM,GAEtB,CACF,CCHO,IAAMC,GAA2B,CAACC,CAAAA,CAAkBC,IAAuB,CAChF,GACE,CAACD,CAAAA,EACD,CAACC,CACD,EAAA,MAAA,CAAO,KAAKD,CAAgB,CAAA,CAAE,SAAW,CACzC,EAAA,MAAA,CAAO,IAAKC,CAAAA,CAAkB,EAAE,MAAW,GAAA,CAAA,CAE3C,OAAO,EAAC,CAGV,IAAMC,CAAWF,CAAAA,CAAAA,CAAiB,WAAkB,EAAA,GAC9CG,CAAaH,CAAAA,CAAAA,CAAiB,aAAoB,EAAA,GAElDI,CAAgB,CAAA,CACpB,GAAGF,CAAAA,CAAS,IAAKG,CAAY,GAAA,CAAE,GAAGA,CAAQ,CAAA,SAAA,CAAW,KAAM,CAAE,CAAA,CAAA,CAC7D,GAAGF,CAAAA,CAAW,IAAKG,CAAY,GAAA,CAAE,GAAGA,CAAQ,CAAA,SAAA,CAAW,IAAK,CAAE,CAAA,CAChE,CAEA,CAAA,OAAAF,EAAc,IAAK,CAAA,CACjB,GAAGH,CACH,CAAA,IAAA,CAAM,sBACN,aAAe,CAAA,IACjB,CAAC,CAAA,CAEMG,CACT,CAOaG,CAAAA,EAAAA,CAAmBC,GAAc,CAC5C,IAAMC,EAAc,EAAC,CACfC,CAAgB,CAAA,GAEtB,OAAO,MAAA,CAAA,OAAA,CAAQF,CAAS,CAAE,CAAA,OAAA,CAAQ,CAAC,CAACG,CAAAA,CAAcC,CAAI,CAAA,GAAM,CACtDA,CAAK,CAAA,SAAA,EAEPF,EAAcE,CAAK,CAAA,KAAK,EAAI,CAAE,GAAGA,CAAK,CAAA,CACtC,OAAOF,CAAcE,CAAAA,CAAAA,CAAK,KAAK,CAAE,CAAA,SAAA,CACjC,OAAOF,CAAcE,CAAAA,CAAAA,CAAK,KAAK,CAAA,CAAE,QAGjCH,CAAYE,CAAAA,CAAY,EAAI,CAAE,GAAGC,CAAK,CACtC,CAAA,OAAOH,CAAYE,CAAAA,CAAY,EAAE,SAErC,EAAA,CAAC,EAEM,CACL,aAAA,CAAe,CACb,WAAAF,CAAAA,CAAAA,CACA,aAAAC,CAAAA,CACF,CACF,CACF,EC3DaG,IAAAA,EAAAA,CAAc,CACzB,UAAA,CAAY,CACV,OAAS,CAAA,SAAA,CACT,UAAW,OACb,CACF,EAKA,SAASC,CAAAA,EAAkB,CACzB,IAAIC,EAAY,SAAU,CAAA,SAAA,CACtBC,EAEJ,OAAID,CAAAA,CAAU,MAAM,wBAAwB,CAAA,CAC1CC,CAAc,CAAA,QAAA,CACLD,EAAU,KAAM,CAAA,gBAAgB,EACzCC,CAAc,CAAA,SAAA,CACLD,EAAU,KAAM,CAAA,SAAS,CAClCC,CAAAA,CAAAA,CAAc,SACLD,CAAU,CAAA,KAAA,CAAM,QAAQ,CACjCC,CAAAA,CAAAA,CAAc,QACLD,CAAU,CAAA,KAAA,CAAM,MAAM,CAAA,CAC/BC,EAAc,MAEdA,CAAAA,CAAAA,CAAc,uBAGTA,CACT,KAKMC,CAAW,CAAA;AAAA;AAAA;AAAA,IAAA,CAAA,CAWXC,EAAU,CAACC,CAAAA,CAAUC,EAAa,IAAS,GAAA,CAE/C,IAAIC,CAAM,CAAA,QAAA,CAAS,gBADP,4BAC8B,CAAA,KAAK,EAe/C,GAdAA,CAAAA,CAAI,eAAe,IAAM,CAAA,OAAA,CAAS,KAAK,CACvCA,CAAAA,CAAAA,CAAI,eAAe,IAAM,CAAA,QAAA,CAAU,KAAK,CACxCA,CAAAA,CAAAA,CAAI,eAAe,IAAM,CAAA,MAAA,CAAQ,MAAM,CACvCA,CAAAA,CAAAA,CAAI,aACF,OACA,CAAA,CAAA,EACED,EACI,CAAcA,WAAAA,EAAAA,CAAAA,EAAA,YAAAA,CAAY,CAAA,OAAO,GACjC,qEACN,CAAA;AAAA;AAAA;AAAA,qBAAA,CAIF,CACID,CAAAA,CAAAA,CAAU,CACZ,IAAIG,EAAW,KAEX1B,CAAAA,CAAAA,EAAekB,EAAAA,CAAAA,EAAsB,GAAA,SAAA,GACvCQ,CAAW,CAAA,KAAA,CAAA,CAEbD,EAAI,SAAY,CAAA;AAAA,mBAAA,EACCC,CAAQ,CACrBF,OAAAA,EAAAA,CAAAA,CAAAA,EAAA,IAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAY,YAAa,OAC3B,CAAA;AAAA;AAAA,IAAA,EAEAD,CAAQ;AAAA;AAAA,EAAA,EAGZ,CACEE,KAAAA,CAAAA,CAAI,SAAYJ,CAAAA,CAAAA,CAElB,OAAOI,CACT,CAAA,CAOaE,CAAeC,CAAAA,CAAAA,EAAU,CACpC,IAAIL,CAAAA,CAEEM,CAAU,CAAA,iBAAA,CAGhB,GADAD,CAAQA,CAAAA,CAAAA,CAAQA,CAAM,CAAA,OAAA,CAAQ,gBAAkB,CAAA,EAAE,CAAI,CAAA,EAAA,CAClDC,EAAQ,IAAKD,CAAAA,CAAK,CAAG,CAAA,CAEvB,IAAIE,CADOF,CAAAA,CAAAA,CAAM,IAAK,EAAA,CAAE,aACP,CAAA,KAAA,CAAM,GAAG,CAAA,CAC1BE,CAAQA,CAAAA,CAAAA,CAAM,GAAKC,CAAAA,CAAAA,EAAMA,EAAE,IAAK,EAAC,CACjCR,CAAAA,CAAAA,CACEO,EAAM,CAAC,CAAA,CAAE,MAAO,CAAA,CAAC,EAAI,EAAMA,EAAAA,CAAAA,CAAM,MAAS,CAAA,CAAA,CAAIA,CAAMA,CAAAA,CAAAA,CAAM,MAAS,CAAA,CAAC,EAAE,MAAO,CAAA,CAAC,CAAI,CAAA,EAAA,CAAA,CACpFP,EAAW,MAAOA,CAAAA,CAAQ,CAAE,CAAA,WAAA,GAC9B,CACA,OAAOA,CACT,CAAA,CAQaS,EAAiB,CAAA,CAACJ,CAAOK,CAAAA,CAAAA,CAAU,OAAS,CACvD,IAAMV,CAAWI,CAAAA,CAAAA,CAAYC,CAAK,CAClC,CAAA,OAAIL,CAAiBD,CAAAA,CAAAA,CAAQC,EAAUU,CAAO,CAAA,CACvCX,CAAQ,EACjB,EChHO,SAASY,EAAUC,CAAAA,CAAAA,CAAK,CAC7B,OAAI,OAAO,eAAoB,EAAA,UAAA,CACtB,gBAAgBA,CAAG,CAAA,CAErB,IAAK,CAAA,KAAA,CAAM,KAAK,SAAUA,CAAAA,CAAG,CAAC,CACvC,CCTA,IAAMC,CAAAA,CAAa,CACjB,MAAA,CAAQ,aACR,YAAc,CAAA,eAAA,CACd,iBAAmB,CAAA,aAAA,CACnB,YAAa,cACf,CAAA,CAGO,SAASC,EAAAA,CAAmBC,EAAa,CAC9C,OAAKA,CACE,CAAA,MAAA,CAAO,QAAQA,CAAW,CAAA,CAAE,GAAI,CAAA,CAAC,CAAC3C,CAAAA,CAAKC,CAAK,CAAA,IAAO,CACxD,IAAMwC,CAAAA,CAAAA,CAAWzC,CAAG,CAAA,EAAKA,EACzB,GAAGC,CACL,CAAE,CAAA,CAAA,CAJuB,EAK3B,CCDO,SAAS2C,EAAevB,CAAAA,CAAAA,CAAM,CAbrC,IAAAwB,CAAAA,CAAAC,CAAAC,CAAAA,CAAAA,CAcE,GAAI,CAAC,KAAA,CAAM,OAAQ1B,CAAAA,CAAI,EACrB,OAAO,EAGT,CAAA,IAAIR,CAAgB,CAAA,EAEpB,CAAA,GAAA,CAAIgC,EAAAxB,CAAK,CAAA,CAAC,CAAN,GAAA,IAAA,EAAAwB,EAAS,UAAY,CAAA,CACvB,IAAMG,CAAAA,CAAAA,CAAOF,EAAAzB,CAAK,CAAA,CAAC,CAAN,GAAA,IAAA,CAAA,MAAA,CAAAyB,CAAS,CAAA,UAAA,CACtBjC,CAAc,CAAA,IAAA,CAAK,CACjB,SAAW,CAAA,CACT,KAAOmC,CAAAA,CAAAA,CAAK,gBACd,CACA,CAAA,IAAA,CAAMA,CAAK,CAAA,IAAA,CACX,kBAAmBA,CAAK,CAAA,iBAAA,CACxB,eAAiBA,CAAAA,CAAAA,CAAK,iBAAsB,GAAA,CAAA,CAAIA,CAAK,CAAA,eAAA,CAAkB,KACvE,mBAAqBA,CAAAA,CAAAA,CAAK,mBAC5B,CAAC,EACH,CAEA,OAAA,CAAOD,CAAA1B,CAAAA,CAAAA,CAAK,CAAC,CAAN,GAAA,IAAA,EAAA0B,CAAS,CAAA,UAAA,CACZlC,CACAQ,CAAAA,CAAAA,CAAK,GAAK2B,CAAAA,CAAAA,GAAU,CAClB,SAAW,CAAA,CACT,KAAOA,CAAAA,CAAAA,CAAK,gBACd,CACA,CAAA,IAAA,CAAMA,CAAK,CAAA,IAAA,CACX,kBAAmBA,CAAK,CAAA,iBAAA,CACxB,eAAiBA,CAAAA,CAAAA,CAAK,iBAAsB,GAAA,CAAA,CAAIA,CAAK,CAAA,eAAA,CAAkB,KACvE,mBAAqBA,CAAAA,CAAAA,CAAK,mBAC5B,CAAA,CAAE,CACR,CCxBaC,IAAAA,EAAAA,CAAwBC,GAI5B,CAACA,CAAAA,CAAY,QAWTC,CAAAA,EAAAA,CAA0BD,GAG9BA,CAAY,CAAA,SCrCd,SAASE,GAAiBC,CAAc,CAAA,CAD/C,IAAAR,CAAAA,CAAAC,CAEE,CAAA,IAAIQ,CAAMD,CAAAA,CAAAA,CAEV,OAAIC,CAAI,CAAA,QAAA,CAAS,kBAAkB,CAAA,GAMjCA,EAAM,0BAJWT,EAAAA,CAAAA,CAAAA,CAAAS,CACd,CAAA,OAAA,CAAQ,gEAAiE,EAAE,CAAA,CAC3E,KAAM,CAAA,GAAG,CAFK,GAAA,IAAA,CAAA,MAAA,CAAAT,CAED,CAAA,CAAA,CAAA,CAAA,CAAA,CAOdS,EAAI,QAAS,CAAA,uBAAuB,CAMtCA,GAAAA,CAAAA,CAAM,kCAJWR,CAAAQ,CAAAA,CAAAA,CACd,OAAQ,CAAA,oEAAA,CAAsE,EAAE,CAChF,CAAA,KAAA,CAAM,GAAG,CAAA,GAFK,IAAAR,CAAAA,MAAAA,CAAAA,CAAAA,CAED,CAIXQ,CAAAA,CAAAA,CAAAA,CAAAA,CACT,CCrBA,IAAMC,CAAAA,CAAgB,CAAE,QAAA,CAAU,SAAU,KAAO,CAAA,OAAA,CAAS,MAAQ,CAAA,SAAU,EAMvE,SAASC,EAAAA,CAAaC,CAAI,CAAA,CAE/B,IAAMC,CAAAA,CAAW,WAAY,CAAA,IAAM,CAEjC,IAAMC,CAAAA,CAAU,QAAS,CAAA,cAAA,CAAeF,CAAE,CACtCE,CAAAA,CAAAA,GAEF,aAAcD,CAAAA,CAAQ,EAEtBC,CAAQ,CAAA,cAAA,CAAeJ,CAAa,CAAA,EAExC,CAAG,CAAA,GAAG,EACR,KCTMK,CAAgB,CAAA,CAACC,CAAiBC,CAAAA,CAAAA,GAElC,CAACD,CAAmB,EAAA,CAACC,CAChB,CAAA,KAAA,CAIL,GAAAD,CAAA,EAAA,IAAA,EAAAA,CAAiB,CAAA,IAAA,EAAA,CAAO,WAAc,EAAA,CAAA,QAAA,CAASC,CAAA,EAAA,IAAA,CAAA,MAAA,CAAAA,EAAO,IAAO,EAAA,CAAA,WAAA,EAAA,CAAA,CAAA,CAa7DC,CAAe,CAAA,CAACC,EAAQ,EAAC,CAAGC,CAEzBD,GAAAA,CAAAA,CAAM,KAAM5B,CACb,EAAA,OAAOA,CAAM,EAAA,QAAA,CAER,MAAO,CAAA,MAAA,CAAOA,CAAC,CAAA,CAAE,KAAM8B,CAAMN,EAAAA,CAAAA,CAAcM,CAAGD,CAAAA,CAAG,CAAC,CAGpDL,CAAAA,CAAAA,CAAcxB,CAAG6B,CAAAA,CAAG,CAC5B,CAWUE,CAAAA,CAAAA,CAAoB,CAACR,CAAAA,CAASS,EAAQN,CAAU,GAAA,CAE3D,GAAI,CAACH,EACH,OAAO,MAAA,CAKT,IAAM9F,CAAAA,CAAQ8F,EAAQ,KAAM,CAAA,GAAG,CAC3BE,CAAAA,CAAAA,CAaJ,GAVI,OAAOO,CAAAA,EAAW,QAAYA,EAAAA,CAAAA,CAAOT,CAAO,CAAA,CAE9CE,CAAkBO,CAAAA,CAAAA,CAAOT,CAAO,CAIhCE,CAAAA,CAAAA,CACE,OAAOO,CAAAA,EAAW,UAAY,CAAC,KAAA,CAAM,OAAQA,CAAAA,CAAM,EAAIA,CAAOvG,CAAAA,CAAAA,CAAM,CAAC,CAAC,CAAIuG,CAAAA,CAAAA,CAG1E,CAACP,CAAAA,CACH,OAAO,MAGT,CAAA,IAAIQ,CAAW,CAAA,KAAA,CAGf,GAAI,KAAM,CAAA,OAAA,CAAQR,CAAe,CAAA,CAC/BQ,EAAWN,CAAaF,CAAAA,CAAAA,CAAiBC,CAAK,CAAA,CAAA,KAAA,GACrC,OAAOD,CAAAA,EAAoB,QAGpC,CAAA,GAAIhG,EAAM,MAAS,CAAA,CAAA,CAAG,CACpB,IAAIwB,EAAI,CACNiF,CAAAA,CAAAA,CAEE9B,CAAM,CAAA,CAAE,GAAG4B,CAAO,CAAA,CAEtB,KAAO/E,CAAAA,CAAIxB,EAAM,MAAS,CAAA,CAAA,CAAGwB,CAC3BiF,EAAAA,CAAAA,CAAAA,CAAOzG,EAAMwB,CAAC,CAAA,CACdmD,CAAMA,CAAAA,CAAAA,CAAI8B,CAAI,CAIhB,CAAA,GAFAT,CAAkBrB,CAAAA,CAAAA,CAAI3E,EAAMwB,CAAC,CAAC,CAE1B8E,CAAAA,CAAAA,CAAkB,EAAIN,CAAAA,CAAAA,CAAiBC,CAAK,CAAA,CAC9C,OAAO,KAEX,CAAA,KAEEO,CAAW,CAAA,MAAA,CAAO,OAAOR,CAAe,CAAA,CAAE,IAAMzB,CAAAA,CAAAA,EAAM+B,EAAkB,EAAI/B,CAAAA,CAAAA,CAAG0B,CAAK,CAAC,CAIvFD,CAAAA,KAAAA,CAAAA,EAAmB,EACnBQ,CAAAA,CAAAA,CAAWT,EAAcC,CAAiBC,CAAAA,CAAK,CAEjD,CAAA,OAAOO,CACT,ECxGaE,IAAAA,CAAAA,CAAcC,cAAc,CACvC,OAAA,CAAS,MACT,CAAA,UAAA,CAAY,OACZ,UAAY,CAAA,MACd,CAAC,CAAA,CAIYC,GAAU,IAAMC,UAAAA,CAAWH,CAAW","file":"index.mjs","sourcesContent":["import React from 'react';\nimport { Toaster, toast } from 'sonner';\n\n// Toast component that provides the Toaster container\nexport const ToastWrapper = ({\n  position = 'bottom-right',\n  expand = false,\n  richColors = true,\n  closeButton = true,\n  ...props\n}) => {\n  return (\n    <Toaster\n      position={position}\n      expand={expand}\n      richColors={richColors}\n      closeButton={closeButton}\n      {...props}\n    />\n  );\n};\n\n// Export toast functions for direct use\nexport { toast };\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { toast } from 'sonner';\n\nexport const Counter = ({ initialCount = 0, onCountChange }) => {\n  const [count, setCount] = useState(initialCount);\n  const [lastUpdate, setLastUpdate] = useState(null);\n\n  // Effect to track last update time\n  useEffect(() => {\n    setLastUpdate(new Date().toLocaleTimeString());\n\n    // Notify parent component if provided\n    if (onCountChange) {\n      onCountChange(count);\n    }\n\n    // Show toast on milestone counts\n    if (count !== 0 && count % 10 === 0) {\n      toast.success(`Milestone reached: ${count}!`);\n    }\n  }, [count, onCountChange]);\n\n  // Memoized increment function\n  const increment = useCallback(() => {\n    setCount((prevCount) => prevCount + 1);\n  }, []);\n\n  // Memoized decrement function\n  const decrement = useCallback(() => {\n    setCount((prevCount) => prevCount - 1);\n  }, []);\n\n  // Reset function with confirmation\n  const reset = useCallback(() => {\n    toast.promise(\n      new Promise((resolve) => {\n        setTimeout(() => {\n          setCount(initialCount);\n          resolve();\n        }, 500);\n      }),\n      {\n        loading: 'Resetting counter...',\n        success: 'Counter reset successfully!',\n        error: 'Failed to reset counter',\n      }\n    );\n  }, [initialCount]);\n\n  return (\n    <div className=\"counter-container\">\n      <h2>Counter: {count}</h2>\n      <p>Last updated: {lastUpdate}</p>\n      <div className=\"counter-buttons\">\n        <button onClick={decrement}>-</button>\n        <button onClick={reset}>Reset</button>\n        <button onClick={increment}>+</button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Example = () => {\n  return <div>Example Component</div>;\n};\n","/**\n * Detects the MIME type of a given base64 encoded string.\n * @param {string} b64 - The base64 encoded string to detect the MIME type for.\n * @returns {string|undefined} - The detected MIME type, or undefined if no match is found.\n */\nfunction detectMimeType(b64) {\n  //Contains base64 signatures and their corresponding MIME types\n  const signatures = {\n    JVBERi0: 'application/pdf',\n    R0lGODdh: 'image/gif',\n    R0lGODlh: 'image/gif',\n    iVBORw0KGgo: 'image/png',\n    AAAA: 'video/mp4',\n    '/': 'image/jpg',\n    i: 'image/png',\n    R: 'image/gif',\n    U: 'image/webp',\n    J: 'application/pdf',\n    A: 'video/mp4',\n    UEsDBBQA: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;',\n  };\n\n  for (const s in signatures) {\n    const i = b64.indexOf(s);\n    // Checking if the signature is found at the beginning of the base64 string\n    if (i === 0 || i === 1) {\n      // Returning the corresponding MIME type\n      return signatures[s];\n    }\n  }\n}\n\n/**\n * Converts a base64 encoded string to a data URL with the appropriate MIME type.\n * @param {string} s - The base64 encoded string to convert.\n * @returns {string|undefined} - The data URL representing the input with detected MIME type, or undefined if detection fails.\n */\nexport function fromBase64ToFile(s) {\n  // Constructing the data URL using the detected MIME type and the input base64 string\n  const final = 'data:' + detectMimeType(s) + ';base64,' + s;\n  return final;\n}\n","import { toast } from 'sonner';\n\n// Single config list for keys and labels\nconst limitConfigs = [\n  { key: 'no_contact_lists', label: 'No Contact Lists' },\n  { key: 'download_export', label: 'Download & Export' },\n  { key: 'tags_types', label: 'Tags & Types' },\n  { key: 'credit', label: 'Credits' },\n  { key: 'magic_search', label: 'Domain Search' },\n  { key: 'personality_intel', label: 'Personality Intel' },\n  { key: 'zbizlocator', label: 'Local Search' },\n];\n\n/**\n * Ensure each limit’s total allocation (excluding non‑editable/unallocated rows)\n * does not exceed 100%.\n *\n * @param {Array} _ignored - original data (unused)\n * @param {Array} updatedRows - array of row objects with updated .limits\n * @returns {Boolean} true if all sums ≤ 100, false (and toasts) otherwise\n */\nexport const checkCreditSumLimits = (_ignored, updatedRows) => {\n  // Sum each key across filtered rows\n  const sums = updatedRows\n    .filter(({ isNonEditable, name }) => !isNonEditable && name !== 'Unallocated credits')\n    .reduce((acc, { limits }) => {\n      limitConfigs.forEach(({ key }) => {\n        const value = Number(limits[key]) || 0;\n        acc[key] = (acc[key] || 0) + value;\n      });\n      return acc;\n    }, {});\n\n  // Identify keys exceeding 100%\n  const exceeded = limitConfigs.filter(({ key }) => (sums[key] || 0) > 100);\n  if (exceeded.length) {\n    const details = exceeded.map(({ key, label }) => `${label} (${sums[key]}%)`);\n    toast.error(`The following limits exceed 100%: ${details.join(', ')}.`);\n    return false;\n  }\n\n  return true;\n};\n","/**\n * Checks if the code is running in a browser environment.\n * @returns {boolean} Returns true if the code is running in a browser, otherwise false.\n */\nexport default function isBrowser() {\n  // Check if the 'window' object is defined, indicating that the code is running in a browser environment.\n  return typeof window !== 'undefined';\n}\n","import isBrowser from './isBrowser';\n\nexport function click_chat_fun() {\n  if (isBrowser()) {\n    var elements = document.getElementsByClassName('cc-157aw cc-1kgzy');\n    if (elements && elements.length > 0) {\n      elements[0].click();\n    }\n  }\n}\n","/**\n  This function combines the team and invite data\n * @param {Array} data - The data to combine\n * @param {Object} options - The options to use\n * @returns {Array} - The combined data\n */\nexport const combineTeamAndInviteData = (allocated_limits, unallocated_limits) => {\n  if (\n    !allocated_limits ||\n    !unallocated_limits ||\n    Object.keys(allocated_limits).length === 0 ||\n    Object.keys(unallocated_limits).length === 0\n  ) {\n    return [];\n  }\n\n  const teamData = allocated_limits['team_limits'] || [];\n  const inviteData = allocated_limits['invite_limits'] || [];\n\n  const formattedData = [\n    ...teamData.map((member) => ({ ...member, isInvited: false })),\n    ...inviteData.map((invite) => ({ ...invite, isInvited: true })),\n  ];\n\n  formattedData.push({\n    ...unallocated_limits,\n    name: 'Unallocated credits',\n    isNonEditable: true,\n  });\n\n  return formattedData;\n};\n\n/**\n This function restructures the data\n * @param {Array} tableData - The data to be restructured\n * @returns {Object} - The restructured data\n */\nexport const restructureData = (tableData) => {\n  const team_limits = {};\n  const invite_limits = {};\n  // Process each entry in tableData\n  Object.entries(tableData).forEach(([user_id_hash, data]) => {\n    if (data.isInvited) {\n      // For invited users, use email as key and pass all data\n      invite_limits[data.email] = { ...data };\n      delete invite_limits[data.email].isInvited; // Remove the isInvited flag\n      delete invite_limits[data.email].email; // Remove email since it's now the key\n    } else {\n      // For team members, use user_id_hash as key and pass all data\n      team_limits[user_id_hash] = { ...data };\n      delete team_limits[user_id_hash].isInvited; // Remove the isInvited flag\n    }\n  });\n\n  return {\n    credit_limits: {\n      team_limits,\n      invite_limits,\n    },\n  };\n};\n","import isBrowser from './isBrowser';\n\nexport const imageColors = {\n  faint_blue: {\n    bgColor: '#EFEFFF',\n    textColor: 'black',\n  },\n};\n/**\n * This function will the user's browser using userAgent\n * @returns {string} Browser name\n */\nfunction fnBrowserDetect() {\n  let userAgent = navigator.userAgent;\n  let browserName;\n\n  if (userAgent.match(/chrome|chromium|crios/i)) {\n    browserName = 'chrome';\n  } else if (userAgent.match(/firefox|fxios/i)) {\n    browserName = 'firefox';\n  } else if (userAgent.match(/safari/i)) {\n    browserName = 'safari';\n  } else if (userAgent.match(/opr\\//i)) {\n    browserName = 'opera';\n  } else if (userAgent.match(/edg/i)) {\n    browserName = 'edge';\n  } else {\n    browserName = 'No browser detection';\n  }\n\n  return browserName;\n}\n\n/**\n * SVG image representing a default logo with placeholders for initials.\n */\nconst logo_img = `\n<g clip-path=\"url(#0cf21cfe8e)\" transform=\"translate(5, 20) scale(0.5)\">\n<path fill=\"#ffffff\" d=\"M 238.238281 215.71875 C 255.039062 215.71875 270.484375 215.71875 285.882812 215.570312 C 286.886719 215.328125 287.800781 214.894531 288.625 214.265625 C 289.445312 213.636719 290.101562 212.863281 290.59375 211.953125 C 299.421875 196.890625 308.148438 181.828125 316.625 166.765625 C 317.03125 165.753906 317.234375 164.703125 317.234375 163.613281 C 317.234375 162.523438 317.03125 161.472656 316.625 160.464844 C 315.144531 157.265625 313.421875 154.203125 311.457031 151.273438 C 310.230469 153.007812 309.175781 154.238281 308.375 155.617188 C 300.523438 169.425781 292.5 183.234375 284.980469 197.140625 C 282.472656 201.761719 279.585938 203.820312 274.347656 203.191406 C 270.242188 202.960938 266.140625 202.960938 262.035156 203.191406 C 278.382812 174.09375 294.382812 145.828125 310.957031 116.703125 C 319.984375 132.296875 328.507812 146.832031 336.757812 161.59375 C 337.011719 162.59375 337.054688 163.601562 336.882812 164.621094 C 336.714844 165.640625 336.347656 166.578125 335.78125 167.441406 C 324.261719 187.675781 312.621094 207.84375 300.851562 227.945312 C 300.253906 229.003906 299.464844 229.890625 298.484375 230.609375 C 297.503906 231.328125 296.421875 231.8125 295.234375 232.0625 C 266.898438 232.339844 238.566406 232.265625 208.976562 232.265625 C 213.664062 224.003906 217.828125 216.523438 222.117188 209.117188 C 241.046875 176.304688 259.804688 143.316406 279.136719 110.855469 C 282.773438 104.730469 283.425781 100.109375 278.910156 94.738281 C 277.597656 92.972656 276.402344 91.132812 275.324219 89.214844 L 183.777344 248.082031 L 289.265625 248.082031 C 283.675781 257.769531 278.785156 266.558594 273.644531 275.269531 C 269.910156 281.644531 267.402344 290.332031 261.808594 293.546875 C 256.21875 296.757812 247.441406 294.652344 240.070312 294.675781 L 101.679688 294.675781 C 148.996094 212.730469 195.710938 131.792969 243.027344 49.773438 L 131.972656 49.773438 C 120.035156 49.773438 120.035156 49.773438 115.171875 61.75 L 219.960938 61.75 L 98.722656 272.15625 C 89.71875 256.515625 81.167969 242.03125 72.96875 227.09375 C 72.609375 225.941406 72.496094 224.765625 72.636719 223.566406 C 72.777344 222.367188 73.15625 221.25 73.773438 220.214844 C 93.011719 186.574219 112.347656 153 131.769531 119.492188 C 133.125 117.132812 134.277344 114.695312 136.109375 111.507812 C 119.632812 111.507812 104.214844 111.507812 88.792969 111.632812 C 87.761719 111.773438 86.804688 112.121094 85.929688 112.683594 C 85.050781 113.246094 84.335938 113.96875 83.777344 114.847656 C 74.851562 130.011719 66.058594 145.273438 57.398438 160.640625 C 57.019531 161.558594 56.828125 162.519531 56.828125 163.511719 C 56.828125 164.507812 57.019531 165.46875 57.398438 166.386719 C 59.101562 169.855469 61.015625 173.203125 63.140625 176.429688 C 66 171.410156 68.480469 167.390625 70.863281 163.175781 C 77.234375 152.027344 83.800781 140.980469 89.769531 129.609375 C 89.945312 129.164062 90.15625 128.738281 90.40625 128.328125 C 90.65625 127.917969 90.9375 127.535156 91.25 127.175781 C 91.566406 126.816406 91.910156 126.484375 92.28125 126.183594 C 92.652344 125.882812 93.046875 125.617188 93.464844 125.382812 C 93.882812 125.148438 94.316406 124.953125 94.765625 124.796875 C 95.21875 124.636719 95.679688 124.519531 96.152344 124.441406 C 96.621094 124.363281 97.097656 124.324219 97.574219 124.328125 C 98.054688 124.332031 98.527344 124.378906 98.996094 124.460938 C 103.035156 124.789062 107.121094 124.460938 112.210938 124.460938 C 95.613281 153.359375 79.742188 181.527344 63.242188 210.597656 C 55.71875 197.441406 48.972656 184.816406 41.226562 172.941406 C 36.8125 166.210938 36.886719 161.34375 41.226562 154.464844 C 52.332031 136.539062 62.539062 118.035156 73.046875 99.660156 C 73.40625 98.839844 73.882812 98.101562 74.476562 97.433594 C 75.070312 96.765625 75.75 96.207031 76.519531 95.757812 C 77.292969 95.308594 78.113281 94.984375 78.984375 94.792969 C 79.855469 94.601562 80.734375 94.550781 81.621094 94.636719 C 109.054688 94.886719 136.511719 94.761719 165.296875 94.761719 C 163.617188 97.953125 162.4375 100.363281 161.109375 102.671875 C 139.792969 139.625 118.882812 176.832031 96.890625 213.359375 C 91.148438 222.875 91.199219 229.726562 99.398438 237.613281 C 129.464844 185.015625 159.703125 132.519531 190.496094 79.070312 L 85.582031 79.070312 C 86.636719 76.761719 87.210938 75.230469 88.089844 73.824219 C 95.210938 61.273438 102.28125 48.84375 109.703125 36.542969 C 110.363281 35.5625 111.191406 34.761719 112.191406 34.140625 C 113.195312 33.519531 114.277344 33.132812 115.445312 32.980469 C 166.902344 32.792969 218.355469 32.753906 269.808594 32.851562 C 270.554688 32.957031 271.289062 33.109375 272.015625 33.304688 C 225.101562 114.671875 178.359375 195.710938 130.96875 277.753906 L 242.527344 277.753906 C 254.238281 277.753906 254.636719 277.453125 259.078125 265.203125 L 154.4375 265.203125 L 275.148438 55.625 C 276.265625 57.027344 277.3125 58.484375 278.285156 59.992188 C 285.605469 72.542969 292.753906 85.324219 300.273438 97.824219 C 300.796875 98.542969 301.195312 99.320312 301.472656 100.164062 C 301.746094 101.007812 301.882812 101.871094 301.882812 102.757812 C 301.882812 103.644531 301.746094 104.511719 301.472656 105.355469 C 301.195312 106.195312 300.796875 106.976562 300.273438 107.691406 C 280.566406 141.484375 260.972656 175.402344 241.5 209.445312 C 240.546875 211.101562 239.742188 212.808594 238.238281 215.71875 Z M 238.238281 215.71875 \" fill-opacity=\"1\" fill-rule=\"nonzero\" />\n</g>`;\n\n/**\n * Function to generate the SVG image based on initials.\n * @param {string} initials - The initials to be displayed in the SVG image.\n * @param {string?} imageColor - If null, default gradient black will be used as background\n * @returns {SVGElement} - The SVG image element with provided initials or the custom logo if no initials are provided.\n */\nconst get_svg = (initials, imageColor = null) => {\n  let xmlns = 'http://www.w3.org/2000/svg';\n  let svg = document.createElementNS(xmlns, 'svg');\n  svg.setAttributeNS(null, 'width', '200');\n  svg.setAttributeNS(null, 'height', '200');\n  svg.setAttributeNS(null, 'fill', 'none');\n  svg.setAttribute(\n    'style',\n    `${\n      imageColor\n        ? `background:${imageColor?.bgColor}`\n        : 'background-image: linear-gradient(180deg, #112634 0%, #000000 100%)'\n    };\n\t\tbackground-repeat:no-repeat !important;\n\t\tdisplay: flex;\n\t\talign-items:center;`\n  );\n  if (initials) {\n    let y_margin = '50%';\n    //In firefox, the margin issue is coming, to solve that\n    if (isBrowser() && fnBrowserDetect() === 'firefox') {\n      y_margin = '55%';\n    }\n    svg.innerHTML = `\n\t\t\t<text x=\"50%\" y=${y_margin} fill=\"${\n        imageColor?.textColor ?? 'white'\n      }\" style=\"font-weight: 700; text-transform: uppercase; font-family: 'Roboto', sans-serif;\" \n\t\t\tdominant-baseline=\"middle\"  text-anchor=\"middle\" alignment-baseline=\"central\" font-size=\"90\">\n\t\t\t\t${initials}\n\t\t\t</text>\n\t\t`;\n  } else {\n    svg.innerHTML = logo_img;\n  }\n  return svg;\n};\n\n/**\n * Function to extract initials from a name.\n * @param {string} name - The name from which initials will be extracted.\n * @returns {string} - The extracted initials in uppercase, or an empty string if the input name contains non-alphanumeric characters.\n */\nexport const getInitials = (_name) => {\n  let initials;\n  //Check if the name is in english\n  const english = /^[A-Za-z0-9 ]*$/;\n  //Replace the non alphanumeric characters in the name\n  _name = _name ? _name.replace(/[^a-zA-Z0-9 ]/g, '') : '';\n  if (english.test(_name)) {\n    let name = _name.trim().toUpperCase();\n    let lname = name.split(' ');\n    lname = lname.map((a) => a.trim());\n    initials =\n      lname[0].charAt(0) + '' + (lname.length > 1 ? lname[lname.length - 1].charAt(0) : '');\n    initials = String(initials).toUpperCase();\n  }\n  return initials;\n};\n\n/**\n * Function to create an SVG image element with initials based on a given name.\n * @param {string} name - The name from which initials will be extracted to generate the SVG image.\n * @param {string?} bgColor - The color of the background of the image. If null, default black color will be used\n * @returns {SVGElement} - The SVG image element with provided initials or the custom logo if no initials are provided.\n */\nexport const getInitialsSvg = (_name, bgColor = null) => {\n  const initials = getInitials(_name);\n  if (initials) return get_svg(initials, bgColor);\n  return get_svg();\n};\n\n/**\n * Component to create and return an SVG image based on provided initials or a default logo.\n * @param {string} name - The name from which initials will be extracted to generate the image.\n * @param {string?} bgColor - The color of the background of the image. If null, default black color will be used\n * @returns {string} - The base64-encoded SVG image data or an empty string if no name is provided or it's not a browser environment.\n */\nexport default function createImg(name, bgColor = null) {\n  // Check if a name is provided and the code is running in a browser environment.\n  if (name && isBrowser()) {\n    // Generate an SVG image element with initials based on the provided name.\n    let initials_img = getInitialsSvg(name, bgColor);\n    // Serialize the SVG element to a string.\n    var s = new XMLSerializer().serializeToString(initials_img);\n    // Encode the SVG string to base64.\n    var encodedData = window.btoa(s);\n    // Return the base64-encoded SVG image data.\n    return 'data:image/svg+xml;base64,' + encodedData;\n  }\n  // Return an empty string if no name is provided or it's not a browser environment.\n  return '';\n}\n","/**\n * Deep‑clone any JSON‑serializable value.\n * Falls back to JSON.parse/JSON.stringify if structuredClone isn't available.\n */\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n","const keyMapping = {\n  credit: 'Lookup/Ids',\n  magic_search: 'Domain search',\n  personality_intel: 'Personality',\n  zbizlocator: 'Local search',\n};\n\n// format the credits response\nexport function formatCreditLimits(creditsTeam) {\n  if (!creditsTeam) return [];\n  return Object.entries(creditsTeam).map(([key, value]) => ({\n    name: keyMapping[key] || key,\n    ...value,\n  }));\n}\n","/**\n * Formats raw team data into a structured format suitable for use within the application.\n * This function takes an array of team invitation data and maps it into a structured array of objects,\n * each containing user data, role, invitation status, creation date, and team invitation ID.\n *\n * Input validation is performed to ensure the data is an array.\n *\n * @param {Array} data - An array of objects representing raw team invitation data.\n * @returns {Array} - An array of formatted objects containing team member details.\n * @throws {Error} - Throws an error if the input is not an array.\n * TODO: Update the Response of Invitation Data from Backend so that we dont want to format data again and again.\n */\n\nexport function formatTeamData(data) {\n  if (!Array.isArray(data)) {\n    return [];\n  }\n\n  let formattedData = [];\n\n  if (data[0]?.invitation) {\n    const item = data[0]?.invitation;\n    formattedData.push({\n      user_data: {\n        email: item.send_to_email_id,\n      },\n      role: item.role,\n      invitation_status: item.invitation_status,\n      create_datetime: item.invitation_status === 2 ? item.create_datetime : null,\n      team_invitations_id: item.team_invitations_id,\n    });\n  }\n\n  return data[0]?.invitation\n    ? formattedData\n    : data.map((item) => ({\n        user_data: {\n          email: item.send_to_email_id,\n        },\n        role: item.role,\n        invitation_status: item.invitation_status,\n        create_datetime: item.invitation_status === 2 ? item.create_datetime : null,\n        team_invitations_id: item.team_invitations_id,\n      }));\n}\n","// import changeEmailFormat from \"./changeEmailFormat\";\n\n/**\n * Get person's contact details\n * @param {Object} person_data -> Person data\n * @returns {Object}\n */\n// const get_contact_details = (person_data) => {\n// \t//get phone number and formatted emails\n// \treturn {\n// \t\tphone: person_data?.phone,\n// \t\temails: changeEmailFormat(person_data?.emails),\n// \t};\n// };\n\n/**\n * Check if person is locked\n * @param {Object} person_data -> Person data\n * @returns {boolean}\n */\nexport const checkIfProfileLocked = (person_data) => {\n  //get the contact details of person\n  // const contact_details = get_contact_details(person_data);\n  //Check if person is locked and has at least one email or phone number\n  return !person_data.unlocked;\n  /*&&\n\t\t((contact_details.emails && contact_details.emails?.length > 0) ||\n\t\t\t(contact_details.phone && contact_details.phone?.length > 0))*/\n};\n\n/**\n * Check if person is unlocked\n * @param {Object} person_data -> Person data\n * @returns {boolean}\n */\nexport const checkIfProfileUnLocked = (person_data) => {\n  // const contact_details = get_contact_details(person_data);\n  //Check if person is unlocked or does not have any email or phone number\n  return person_data.unlocked;\n  /*||\n\t\t!(\n\t\t\t(contact_details.emails && contact_details.emails?.length > 0) ||\n\t\t\t(contact_details.phone && contact_details.phone?.length > 0)\n\t\t)*/\n};\n\n/**\n * get the locked or unlocked profiles in the array of person data\n * @param {Object[]} profiles -> array of Person data\n * @param {boolean?} [unlocked=true] -> Flag to check unlock or lock status, if true check unlock status of profile\n * @returns {Object[]} Locked/Unlocked profiles\n */\nexport default function getLockedUnlockProfiles(profiles = [], unlocked = true) {\n  return profiles.filter((person_data) => {\n    if (unlocked) {\n      //If no data for emails and phones, let them download\n      return checkIfProfileUnLocked(person_data);\n    }\n    return checkIfProfileLocked(person_data);\n  });\n}\n","// For Linkedin URLs\nexport function refactor_ln_urls(original_url) {\n  let url = original_url;\n  //we need to get only username\n  if (url.includes('linkedin.com/in/')) {\n    //Get the linkedin user name, get only username\n    const username = url\n      .replace(/(https?:\\/\\/(www.|de.)?linkedin.com\\/(mwlite\\/|m\\/)?in\\/\\/?)/g, '')\n      .split('/')?.[0];\n    //Create linkedin url using username\n    url = 'https://linkedin.com/in/' + username;\n  }\n  //If linkedin company, we have to add this because sometimes\n  //linkedin.com/company/username/about/ or /jobs or anything comes\n  //we need to get only company slug\n  if (url.includes('linkedin.com/company/')) {\n    //Get the linkedin company name, get only username\n    const username = url\n      .replace(/(https?:\\/\\/(www.|de.)?linkedin.com\\/(mwlite\\/|m\\/)?company\\/\\/?)/g, '')\n      .split('/')?.[0];\n    //Create linkedin url using username\n    url = 'https://linkedin.com/company/' + username;\n  }\n  return url;\n}\n","import isBrowser from './isBrowser';\n\n// Scroll behavior options.\nconst scrollOptions = { behavior: 'smooth', block: 'start', inline: 'nearest' };\n\n/**\n * Scrolls to the element with the specified 'id'.\n * @param {string} id - The id of the element to scroll to.\n */\nexport function scrollToById(id) {\n  // Define an interval that runs every 200 milliseconds.\n  const interval = setInterval(() => {\n    // Attempt to retrieve the element with the given 'id'.\n    const element = document.getElementById(id);\n    if (element) {\n      // If the element is found, clear the interval to stop checking.\n      clearInterval(interval);\n      // Scroll the element into view with the specified scroll behavior options.\n      element.scrollIntoView(scrollOptions);\n    }\n  }, 200);\n}\n\n/**\n * Scrolls to the element indicated by the 'href' attribute of the event target.\n * @param {Event} e - The event triggered when calling the function.\n */\nexport default function scrollTo(e) {\n  // Check if the code is running in a browser environment.\n  if (isBrowser()) {\n    // Prevent the default action of the event (e.g., following a link).\n    e.preventDefault();\n    // Find the element based on the 'href' attribute of the event target.\n    let doc = document.querySelector(e.target.getAttribute('href'));\n    // Scroll the element into view with the specified scroll behavior options.\n    doc.scrollIntoView(scrollOptions);\n  }\n}\n","/**\n * This file contains the helper function for Table Component\n */\n\n/**\n * Compare a given string with a query to determine\n * if they match after trimming and case normalization.\n *\n * @param {string} string_to_match - The string to be compared.\n * @param {string} query - The query string for comparison.\n * @returns {boolean} True if the strings match, otherwise false.\n */\nconst filter_string = (string_to_match, query) => {\n  // If either the string or the query is empty, return false.\n  if (!string_to_match || !query) {\n    return false;\n  }\n  // Convert both the string and the query to lowercase after trimming\n  // and check if the query is included in the string.\n  if (string_to_match?.trim().toLowerCase().includes(query?.trim().toLowerCase())) {\n    return true; // If the query is found in the string, return true.\n  }\n  return false; // If no match is found, return false.\n};\n\n/**\n * Filter an array of values or objects based on a query value.\n *\n * @param {Array} array - The array to be filtered.\n * @param {string} val - The query value for filtering.\n * @returns {boolean} True if a matching value is found, otherwise false.\n */\nconst filter_array = (array = [], val) => {\n  // Check if any element in the array matches the given query value.\n  return array.some((a) => {\n    if (typeof a === 'object') {\n      // If the element is an object, check if any of its values match the query.\n      return Object.values(a).some((b) => filter_string(b, val));\n    }\n    // If the element is not an object, directly check if it matches the query.\n    return filter_string(a, val);\n  });\n};\n\n/**\n * Filter rows based on a given field name, values, and a query.\n *\n * @param {string} element - Field name for which we will check the data e.g. full_name.\n * @param {Object|Array|string} values - Values to be filtered.\n * @param {string} query - Query value for filtering.\n * @returns {boolean} True if a match is found, otherwise false.\n */\nexport const table_filter_rows = (element, values, query) => {\n  // If the element is missing, return false.\n  if (!element) {\n    return false;\n  }\n\n  //If field name has \".\", it means it's an key from the object\n  //Split it, e.g. user_data.name -> we have to match the query for name in user_data\n  const props = element.split('.');\n  let string_to_match;\n\n  //If values is object and values has the item field\n  if (typeof values === 'object' && values[element]) {\n    //Get the value of the field\n    string_to_match = values[element];\n  } else {\n    //else check if values is not array, it contains the first item from the props\n    //e.g. Check if values contains \"user_data\"\n    string_to_match =\n      typeof values === 'object' && !Array.isArray(values) ? values[props[0]] : values;\n  }\n  //If no value found to match, return false\n  if (!string_to_match) {\n    return false;\n  }\n  //Else start filtering\n  let filtered = false;\n\n  // If the string_to_match is an array, use filter_array function for filtering.\n  if (Array.isArray(string_to_match)) {\n    filtered = filter_array(string_to_match, query);\n  } else if (typeof string_to_match === 'object') {\n    // Understand by example\n    // props->[\"user_data\", \"name\"]\n    if (props.length > 1) {\n      let i = 0,\n        prop;\n      //now we have user_data in the obj\n      let obj = { ...values };\n      //TODO: Something is wrong here, i should start with 1, do check\n      for (; i < props.length - 1; i++) {\n        prop = props[i];\n        obj = obj[prop];\n      }\n      string_to_match = obj[props[i]];\n      // If nested property filtering matches, return true.\n      if (table_filter_rows('', string_to_match, query)) {\n        return true;\n      }\n    } else {\n      // Use filter_rows function on nested object values.\n      filtered = Object.values(string_to_match).some((a) => table_filter_rows('', a, query));\n    }\n  } else {\n    // Convert string_to_match to string and use filter_string function for filtering.\n    string_to_match += '';\n    filtered = filter_string(string_to_match, query);\n  }\n  return filtered;\n};\n","import { createContext, useContext } from 'react';\n\n/**\n * This code defines a context and a custom hook for the all pages.\n * provides a default value containing different user properties which can be used all over the website\n * Also contains the banner data to show\n */\nexport const UserContext = createContext({\n  details: undefined, //user details page\n  isLoggedIn: undefined, //to check if user is logged in or not\n  bannerData: undefined, //to store the banner data\n});\n\n// Creating a custom hook called useUser,\n// which will allow components to access the UserContext.\nexport const useUser = () => useContext(UserContext);\n"]}